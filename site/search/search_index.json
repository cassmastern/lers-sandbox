{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HOME","text":"<p>Welcome to Ler's Sandbox!</p> <p>The site's purpose is multifold:</p> <ul> <li>to brush up and deepen my knowledge of GitHub, MkDocs, major cloud platforms, Markdown, content architecture, networking, and more </li> <li>to play with some of the features supporting accessibility and eventually implement full WCAG compliance</li> <li>to build up a technical documentation site for demo purposes</li> <li>to discover new 'domain curiosities'</li> </ul> <p>Note: This site is in constant 'work-in-progress' mode \u2014 expect rough edges; they\u2019re part of the showcase.</p> <p>PS: CM of the logo are initials \u2014 those of my GitHub ego. Or should I say persona:</p> <p>AS An introvert, I WANT to be able to hide behind an alias, SO THAT I can confidently reconcile the technically accurate with the politically correct.</p> <p>And yes, by the way, I had been using em-dashes long before AI hackneyed them to death.</p>"},{"location":"sec__sandbox/","title":"Sandbox \u2014 for Local Development","text":""},{"location":"sec__sandbox/dia-graphviz/","title":"Graphviz Diagrams","text":""},{"location":"sec__sandbox/dia-graphviz/#vendors-first-examples-for-svg","title":"Vendor's first examples for svg:","text":"<p>GEarthEarthMarsMarsEarth-&gt;Mars</p>"},{"location":"sec__sandbox/dia-graphviz/#uml-class-diagram","title":"UML Class Diagram","text":"<p>UML_Class_diagramUML Class diagram demoClientClientInterface1\u00abinterface\u00bb I/O+ property...+ method...Client-&gt;Interface1dependencyInterface2SimpleinterfaceClient-&gt;Interface2Class1I/O class+ property...+ method...Interface1-&gt;Class1inheritanceInterface2-&gt;Class1System_1 System + property- Subsystem 1- Subsystem 2- Subsystem 3...+ method...Class1-&gt;System_1implementationSubsystem_1 Subsystem 1 + property- resource...+ method...System_1:ss1-&gt;Subsystem_1compositionSubsystem_2 Subsystem 2 + property- resource...+ method...System_1:ss2-&gt;Subsystem_2Subsystem_3 Subsystem 3 + property- resource...+ method...System_1:ss3-&gt;Subsystem_3Shared resourceShared resource+ property...+ method...Subsystem_1:r1-&gt;Shared resourceaggregationSubsystem_2:r1-&gt;Shared resourceSubsystem_3:r1-&gt;Shared resource</p>"},{"location":"sec__sandbox/dia-graphviz/#cluster-1","title":"Cluster 1","text":"<p>ClusterExamplecluster_0Cluster Acluster_1Cluster Baabba--bdda--dConnectionccb--ceed--effe--fstruct1leftmiddlerightstruct1:f1--c</p>"},{"location":"sec__sandbox/dia-graphviz/#cluster-2","title":"Cluster 2","text":"<p>Gcluster_0process #1cluster_1process #2a0a0a1a1a0-&gt;a1a2a2a1-&gt;a2b3b3a1-&gt;b3a3a3a2-&gt;a3a3-&gt;a0endenda3-&gt;endb0b0b1b1b0-&gt;b1b2b2b1-&gt;b2b2-&gt;a3b2-&gt;b3b3-&gt;endstartstartstart-&gt;a0start-&gt;b0</p>"},{"location":"sec__sandbox/dia-graphviz/#git-basic-concepts-and-operations","title":"Git \u2014 Basic Concepts and Operations","text":"<p>git_basicsBasic git concepts and operationschanges changesin the working tree To view: git diffstaging staging area(cache, index)To view: git diff --stagedchanges-&gt;staginggit add ... \u00a0\u00a0\u00a0git reset \u00a0\u00a0\u00a0\u00a0\u00a0stash stashTo view:git stash listchanges-&gt;stashgit stash popstash_pushgit stash [push]changes-&gt;stash_pushdiscarddiscardchanges-&gt;discardgit restore ...HEAD HEAD of the current branchTo view:git showgit logTo change branch:git switch ...git checkout ...staging-&gt;HEAD:pushgit commitremoteremote branchHEAD:push-&gt;remotegit pushHEAD:pull-&gt;remotegit pullbranches local branches To view:git branch [--list]HEAD:switch-&gt;branchesstash_push-&gt;stagingstash_push-&gt;stash</p>"},{"location":"sec__sandbox/dia-graphviz/#data-structures","title":"Data Structures","text":"<p>gnode00x10ba8 node10xf7fc4380 -1node0:f0-&gt;node1:f0node20xf7fc44b8 2node0:f1-&gt;node2:f0node33.43322790286038071e-0644.799987792968750node1:f0-&gt;node3:f0node40xf7fc4380 2node1:f1-&gt;node4:f0node5(nil) -1node1:f2-&gt;node5:f0node4:f0-&gt;node3:f0node60xf7fc4380 1node4:f1-&gt;node6:f0node10(nil) -1node4:f2-&gt;node10:f0node6:f0-&gt;node3:f0node70xf7fc4380 2node6:f1-&gt;node7:f0node9(nil) -1node6:f2-&gt;node9:f0node7:f1-&gt;node1:f0node7:f0-&gt;node3:f0node8(nil) -1node7:f2-&gt;node8:f0node11(nil) -1node10:f1-&gt;node11:f0node120xf7fc43e0 1node10:f2-&gt;node12:f0node11:f2-&gt;node1:f0</p>"},{"location":"sec__sandbox/dia-graphviz/#family-tree","title":"Family Tree","text":"<p>GI5Caroline Bouvier Kennedyb. 27.11.1957 New YorkI1John Fitzgerald Kennedyb. 29.5.1917 Brooklined. 22.11.1963 DallasI1--I5I6John Fitzgerald Kennedyb. 25.11.1960 Washingtond. 16.7.1999 over the Atlantic Ocean, near Aquinnah, MA, USAI1--I6I7Patrick Bouvier Kennedyb. 7.8.1963d. 9.8.1963I1--I7I2Jaqueline Lee Bouvierb. 28.7.1929 Southamptond. 19.5.1994 New York CityI1--I2I2--I5I2--I6I2--I7I15Aristotle OnassisI2--I15I8Joseph Patrick Kennedyb. 6.9.1888 East Bostond. 16.11.1969 Hyannis PortI8--I1I10Joseph Patrick Kennedy Jrb. 1915d. 1944I8--I10I11Rosemary Kennedyb. 13.9.1918d. 7.1.2005I8--I11I12Kathleen Kennedyb. 1920d. 1948I8--I12I13Eunice Mary Kennedyb. 10.7.1921 BrooklineI8--I13I9Rose Elizabeth Fitzgeraldb. 22.7.1890 Bostond. 22.1.1995 Hyannis PortI8--I9I9--I1I9--I10I9--I11I9--I12I9--I13I3John Vernou Bouvier IIIb. 1891d. 1957I3--I2I4Janet Norton Leeb. 2.10.1877d. 3.1.1968I3--I4I4--I2</p>"},{"location":"sec__sandbox/dia-graphviz/#finite-automation","title":"Finite Automation","text":"<p>finite_state_machine00220-&gt;2SS(B)110-&gt;1SS(S)334488668-&gt;6S(b)558-&gt;5S(a)2-&gt;4S(A)2-&gt;6SS(b)2-&gt;5SS(a)1-&gt;3S(\\$end)6-&gt;6S(b)6-&gt;5S(a)5-&gt;5S(a)775-&gt;7S(b)7-&gt;8S(b)7-&gt;5S(a)</p>"},{"location":"sec__sandbox/dia-graphviz/#linux-kernel","title":"Linux Kernel","text":"<p>Linux_kernel_diagramSCISystem callssystemsystemsystem-&gt;system_processingprocessingsysfsproc &amp; sysfsfile systemsSCI-&gt;sysfsDMDeviceModelsysfs-&gt;DMlog_syssystem run,modules,genericHW access DM-&gt;log_sysbus_drvbus driverslog_sys-&gt;bus_drvbusesbuses:PCI, USB ...bus_drv-&gt;busessockSocketsnetworkingnetworkingnetworking-&gt;networking_prot_famprotocolfamiliessock-&gt;prot_famlog_protprotocols:TCP, UDP, IPprot_fam-&gt;log_protnetifnetworkinterfacesand driverslog_prot-&gt;netifnet_hwnetwork:Ethernet, WiFi ...netif-&gt;net_hwNFSNFSNFS-&gt;log_protprocProcessesprocessing-&gt;processing_memorymemoryTasksTasksproc-&gt;TaskssyncsynchronizationTasks-&gt;syncschedSchedulersync-&gt;schedIRQinterruptscore,CPU archsched-&gt;IRQCPUCPUIRQ-&gt;CPUbottom\u00a9 2007-2022 Costa Shulyupin http://www.MakeLinux.net/kernel/diagramMAmemoryaccessVMVirtualmemoryMA-&gt;VMmmapmemorymappingVM-&gt;mmaplog_memlogicalmemorymmap-&gt;log_memSWSwapmmap-&gt;SWPAPageAllocatorlog_mem-&gt;PARAMMMU, RAMPA-&gt;RAMblockBlockdevicesand driversSW-&gt;blockSDstorage devices:SCSI, NVMe ...block-&gt;SDPCpagecachePC-&gt;PAmemory-&gt;memory_storagestorageFSfiles anddirectoriesstorage-&gt;storage_VFSVirtualFile SystemFS-&gt;VFSVFS-&gt;NFSVFS-&gt;mmapVFS-&gt;PClogFSlogicalfilesystems:ext3, xfs ...VFS-&gt;logFSlogFS-&gt;blockcharchardevicesHIhumaninterfaceHI-&gt;HI_inputinputsubsystemchar-&gt;inputF7HI classdriversinput-&gt;F7HIDHIperipheralsdriversF7-&gt;HIDdisplaykeyboard, mouse,display, audioHID-&gt;displayfunctionsfunctionsfunctions-&gt;functions_layerslayersusruser spaceinterfacesusr-&gt;usr_virtvirtualsubsystemsusr-&gt;virtvirt-&gt;D0bridgesbridgesvirt-&gt;bridgesbridges-&gt;E0logicallogicalbridges-&gt;logicallogical-&gt;F0HWIhardwareinterfaceslogical-&gt;HWIHWI-&gt;G0HWelectronics,hardwareHWI-&gt;HWHW-&gt;H0layers-&gt;usrLKDLinux kernel diagram</p>"},{"location":"sec__sandbox/dia-graphviz/#neural-network","title":"Neural Network","text":"<p>G140087530674552title: InputLayerinput:output:[(?, ?)][(?, ?)]140087531105640embedding_2: Embeddinginput:output:(?, ?)(?, ?, 64)140087530674552-&gt;140087531105640140087537895856body: InputLayerinput:output:[(?, ?)][(?, ?)]140087530711024embedding_3: Embeddinginput:output:(?, ?)(?, ?, 64)140087537895856-&gt;140087530711024140087537980360lstm_2: LSTMinput:output:(?, ?, 64)(?, 128)140087531105640-&gt;140087537980360140087531256464lstm_3: LSTMinput:output:(?, ?, 64)(?, 32)140087530711024-&gt;140087531256464140087530348048concatenate_1: Concatenateinput:output:[(?, 128), (?, 32), (?, 12)](?, 172)140087537980360-&gt;140087530348048140087531256464-&gt;140087530348048140087531106200tags: InputLayerinput:output:[(?, 12)][(?, 12)]140087531106200-&gt;140087530348048140087530347992priority: Denseinput:output:(?, 172)(?, 1)140087530348048-&gt;140087530347992140087530711304department: Denseinput:output:(?, 172)(?, 4)140087530348048-&gt;140087530711304</p>"},{"location":"sec__sandbox/dia-mermaid/","title":"Mermaid Diagrams","text":""},{"location":"sec__sandbox/dia-mermaid/#flowchart-tb","title":"flowchart TB","text":"flowchart TB     accTitle: IBM SanFrancisco Layered Architecture     accDescr: Diagram showing IBM SanFrancisco's layered architecture. Arrows connect layers from top to bottom: User Interface \u2192 Business Logic \u2192 Foundation Services \u2192 JVM \u2192 Operating System. SanFrancisco encompasses the Business Logic and Foundation layers, positioned between application code and the JVM.      UI[User Interface Layer] --&gt; BL[Business Logic Layer]     BL --&gt; FS[Foundation Services Layer]     FS --&gt; JVM[Java Virtual Machine]     JVM --&gt; OS[Operating System]     subgraph IBM_SanFrancisco[\"IBM SanFrancisco\"]         BL         FS     end"},{"location":"sec__sandbox/dia-mermaid/#sequence","title":"Sequence","text":"sequenceDiagram accTitle: Sequence diagram showing client-server commumnication. accDescr: Sequence diagram showing client-server commumnication: Client sends a login request to server, and server returns an authorization token.   participant Client   participant Server   Client-&gt;&gt;Server: Send login request   Server--&gt;&gt;Client: Return auth token"},{"location":"sec__sandbox/dia-mermaid/#graph-td","title":"graph TD","text":"graph TD     trigger[\"GitHub Actions Trigger\"]     checkout[\"Checkout Repository\"]     buildx[\"Setup Docker Buildx\"]     dockerBuild[\"Build Docker Image\"]     verifyMermaid[\"Verify mermaid.min.js Presence\"]     mkdocsBuild[\"Build MkDocs Site in Docker\"]     verifyOutput[\"Verify Build Output\"]     essentialCheck{\"Essential Files Present?\"}     success[\"Workflow Succeeds\"]     fail[\"Workflow Fails with Diagnostics\"]      trigger --&gt; checkout     checkout --&gt; buildx     buildx --&gt; dockerBuild     dockerBuild --&gt; verifyMermaid     verifyMermaid --&gt; mkdocsBuild     mkdocsBuild --&gt; verifyOutput     verifyOutput --&gt; essentialCheck     essentialCheck --&gt;|Yes| success     essentialCheck --&gt;|No| fail"},{"location":"sec__sandbox/dia-plantuml/","title":"PlantUML Diagrams","text":""},{"location":"sec__sandbox/dia-plantuml/#basic-sequence","title":"Basic Sequence","text":"<pre>7190c3a6483c81e45b51541f92045c5d21195f215447013d058ba30f9c0c217d279cf4124db3ee85519e38dac48d7512c10124f1b603bd2cdacbd809e7668433</pre><pre>cb50dd478a332bfc79efce0a5e2cc74f87097b1bf8137986b0757cfbe8cf4b9ef7e0f84f16fca3c7100c6fbf0e2bc8367d1ae1d7defa64092c803b1146a998ae</pre>"},{"location":"sec__sandbox/dia-plantuml/#package","title":"Package (?)","text":"<pre>4605d09f97d719e682453dab98ca40166b9c49191c191864cd5d64c6ecfd9be794d55302f78fda22088081dcf94dbf0c449354d843302419a4774a8b6d3d6c30</pre><pre>bac5837534b12f92ba2e34324d95edb838b672f33223e55cf28f0c7ffd7f4a32c417cc813dd451280d01ecf271ddf4fcf743d5ee950133067cef84a21df633bd</pre>"},{"location":"sec__sandbox/dia-plantuml/#network","title":"Network","text":"<pre>30a206d19e3832ef4924da0eb8eb15fb35751c9533eb3559287054b3c5fb23eca909d51f8c0d53b03881bb49a33d5c23e7616826cae8acf76b943ab90bd549ee</pre><pre>91974da96f2511ebacc81fc60c59dd54c65556c964a955399a0a61265c777e63f993d851558f30c8225df42728549997536b21a19d3c1a9af9b37b790d6a98cd</pre>"},{"location":"sec__sandbox/dia-plantuml/#network-klod","title":"Network (Klod)","text":"<pre>9216bf7909bd74be84acd74b73d54413d35c375aa1c850af05147b2847040d9fbc1c0af246417e064dcf8940d0eb995759fbf0bf4ccd514e19db8254b0a6920e</pre><pre>93186b24355b4debe264f553631cc9294ffd54a54af5aec283a92d2b166de7e1ce8d18649a17cd70238176381f506945c7c2eb3278e349e5ca40b1ac635569d0</pre>"},{"location":"sec__sandbox/dia-three-in-one/","title":"Three Diagrams in One Markdown","text":""},{"location":"sec__sandbox/dia-three-in-one/#mermaid","title":"Mermaid","text":"graph TD     accTitle: Mmmmmmmermaid diagram title.     accDescr: Mmmmmmmmermaid flowchart diagram description injected by accessibility-injector.py; courtesy of Ler/GenAI swarm.      A[Start] --&gt; B{Is it working?};     B -- Yes --&gt; C[End];     B -- No --&gt; D[Fix it];     D --&gt; B;"},{"location":"sec__sandbox/dia-three-in-one/#plantuml","title":"PlantUML","text":"<pre>7190c3a6483c81e45b51541f92045c5d21195f215447013d058ba30f9c0c217d279cf4124db3ee85519e38dac48d7512c10124f1b603bd2cdacbd809e7668433</pre><pre>cb50dd478a332bfc79efce0a5e2cc74f87097b1bf8137986b0757cfbe8cf4b9ef7e0f84f16fca3c7100c6fbf0e2bc8367d1ae1d7defa64092c803b1146a998ae</pre>"},{"location":"sec__sandbox/dia-three-in-one/#graphviz","title":"Graphviz","text":"<p>GEarthEarthMarsMarsEarth-&gt;Mars</p>"},{"location":"sec__sandbox/md-extensions/","title":"Markdown Extensions","text":""},{"location":"sec__sandbox/md-extensions/#admonitions","title":"Admonitions","text":"<p>Pro Tip</p> <p>Remember to always save your work!</p> <p>Danger</p> <p>This action cannot be undone. Proceed with caution.</p> <p>Code Example</p> <p>```python print(\"Hello, Admonitions!\")</p> <p>Some text before an inline admonition. !!! info inline This is an inline info block. end More text after the inline admonition.</p> <p>Main Topic</p> <p>This is the main content.</p> <p>Important Sub-point</p> <p>Don't forget this crucial detail within the main topic.</p>"},{"location":"sec_about/","title":"About this Website","text":"<p>This section contains information about this site:</p> <ul> <li>What's in Here?</li> <li>How this Website was Developed &amp; Deployed</li> <li>Workflow Breakdown</li> <li>Roadmap &amp; Changelog</li> <li>Feedback</li> </ul>"},{"location":"sec_about/about-sitedev/","title":"How This Site Was Developed and Deployed","text":"<p>In August 2025, I revived an old MkDocs-based glossary project and reimagined it as a modular, containerized website, an all-in-one playground, demo, and concept repository. See What's in Here?.</p>"},{"location":"sec_about/about-sitedev/#architecture-overview","title":"Architecture Overview","text":"<p>This site uses a hybrid static-dynamic architecture:</p>"},{"location":"sec_about/about-sitedev/#static-layer","title":"Static Layer","text":"<ul> <li>Framework: MkDocs with Material theme</li> <li>Content: Markdown rendered into static HTML/CSS/JS</li> <li>Deployment: GitHub Pages via <code>gh-pages</code> branch</li> <li>Enhancements:<ul> <li>Custom JS/CSS for glossary navigation</li> <li>Diagram spotlight/zoom via <code>diagram-zoom.js</code></li> <li>Alt-text injection via <code>alttext-inject.js</code> (experimental)</li> <li>Focus ring, skip link, ARIA toggles, keyboard nav (partial)</li> </ul> </li> </ul>"},{"location":"sec_about/about-sitedev/#dynamic-layer","title":"Dynamic Layer","text":"<ul> <li>Live Preview: <code>mkdocs serve</code> inside Docker</li> <li>Environment: <code>MKDOCS_WATCHDOG_USE_POLLING=true</code></li> <li>Plugin:<ul> <li><code>mkdocs-mermaid2-plugin</code> for diagram rendering  </li> <li><code>mkdocs-awesome-pages-plugin</code> for semi-automated TOC management and navigation</li> </ul> </li> </ul>"},{"location":"sec_about/about-sitedev/#docker-environment","title":"Docker Environment","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nENV PIP_ROOT_USER_ACTION=ignore\nENV PIP_DISABLE_PIP_VERSION_CHECK=1\nENV MKDOCS_WATCHDOG_USE_POLLING=true\nCOPY requirements.txt /app/\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . /app\nEXPOSE 8000\nCMD [\"mkdocs\", \"serve\", \"-a\", \"0.0.0.0:8000\"]\n</code></pre> <ul> <li>Dependencies cached via <code>requirements.txt</code></li> <li>Port 8000 exposed for local development</li> </ul>"},{"location":"sec_about/about-sitedev/#cicd-pipeline-github-actions","title":"CI/CD Pipeline (GitHub Actions)","text":"<p>(for details, check out the deploy.yml file in the project, <code>.github/workflows/deploy.yml</code>)</p> <ul> <li>Build: Dockerized <code>mkdocs build</code></li> <li>Test: Markdown linting, link checks, YAML validation</li> <li>Deploy: Static site pushed to GitHub Pages</li> <li>Verify: Artifact checks for essential files</li> <li>Accessibility Test: Pa11y CLI run against live site (non-blocking)</li> </ul>"},{"location":"sec_about/about-sitedev/#scripts-and-assets","title":"Scripts and Assets","text":"<p>All scripts are stored in <code>docs/assets/js/</code> and loaded via <code>extra_javascript</code> in <code>mkdocs.yml</code>:</p> <ul> <li><code>alphabet-auto.js</code>: in glossary pages, replaces the page-level TOC with a navigable alphabet</li> <li><code>diagram-zoom.js</code>: implements lightbox/zoom for diagrams</li> <li> <p><code>alttext-inject.js</code>: alt-text and ARIA role injection (work in progress) <code>CSS enhancements live in</code>docs/assets/css/`:</p> </li> <li> <p><code>alphabet.css</code>: supports sidebar alphabet navigation</p> </li> <li><code>diagram-zoom.css</code>: complements zoom script</li> <li><code>cm-logo.css</code>: inline logo styling</li> </ul>"},{"location":"sec_about/about-sitedev/#deployment-flow","title":"Deployment Flow","text":"<p>Here is a basic representation. For a detailed breakdown, see Workflow Breakdown.</p> graph TD   Dev[\"MkDocs (local preview)\"]   GitHub[\"GitHub Repository\"]   CI[\"GitHub Actions CI\"]   Pages[\"GitHub Pages\"]   Browser[\"User Browser\"]    Dev --&gt;|commit &amp; push| GitHub   GitHub --&gt;|triggers| CI   CI --&gt;|build &amp; test| Pages   Pages --&gt;|public access| Browser"},{"location":"sec_about/about-sitedev/#tools-used","title":"Tools Used","text":"<ul> <li>macOS: Docker, VS Code, BBedit, Safari, Firefox</li> <li>Linux: Docker, VSCodium, xed, Chrome, Firefox</li> </ul>"},{"location":"sec_about/about-sitedev/#future-enhancements","title":"Future Enhancements","text":"<ul> <li>Try Azure DevOps migration, at least as an academical challenge</li> <li>Auth gate</li> <li>Audit logging</li> <li>Secrets management</li> <li>Role-based access</li> </ul>"},{"location":"sec_about/about-wf-breakdown/","title":"Detailed Breakdown of My Workflow","text":"<p>Here is a detailed breakdown of my workflow:</p>"},{"location":"sec_about/about-wf-breakdown/#1-workflow-metadata","title":"1. Workflow Metadata","text":"<p>General: a CI/CD workflow starts by declaring a name and triggers</p> <p>The start of my workflow:</p> <pre><code>name: Deploy MkDocs to GitHub Pages\n</code></pre> <ul> <li>this workflow is named \u201cDeploy MkDocs to GitHub Pages\u201d</li> </ul>"},{"location":"sec_about/about-wf-breakdown/#2-triggers-on","title":"2. Triggers (<code>on</code>)","text":"<p>General: defines what events start the workflow (push, PR, manual, scheduled)</p> <p>My trigger:</p> <pre><code>on:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n  workflow_dispatch:\n</code></pre> <ul> <li>Runs when:<ul> <li>when changes are pushed to the <code>main</code> branch from either of my two machines</li> <li>a pull request targets <code>main</code> (haven't had any yet)</li> <li>a deployment is triggered manually (<code>workflow_dispatch</code>)</li> </ul> </li> </ul> <p>This ensures my MkDocs site is always up-to-date after changes.</p>"},{"location":"sec_about/about-wf-breakdown/#3-permissions","title":"3. Permissions","text":"<p>General: workflows declare what they can access (read/write)</p> <p>My permissions settings:</p> <pre><code>permissions:\n  contents: read\n  pages: write\n  id-token: write\n</code></pre> <ul> <li>can read repo contents</li> <li>can write to GitHub Pages (needed for deployment)</li> <li>can use OIDC tokens (secure authentication with GitHub)</li> </ul>"},{"location":"sec_about/about-wf-breakdown/#4-concurrency","title":"4. Concurrency","text":"<p>General: prevents multiple deployments from clashing</p> <p>My concurrency settings:</p> <pre><code>concurrency:\n  group: \"pages\"\n  cancel-in-progress: false\n</code></pre> <ul> <li>only one Pages deployment runs at a time (grouped under <code>\"pages\"</code>)</li> <li>ongoing runs are not canceled if a new one starts</li> </ul>"},{"location":"sec_about/about-wf-breakdown/#5-jobs","title":"5. Jobs","text":"<p>General: a workflow contains jobs; each job has steps</p> <p>My workflow job:</p> <pre><code>jobs:\n  build:\n    runs-on: ubuntu-latest\n</code></pre> <ul> <li>a single job called <code>build</code></li> <li>runs on a GitHub-hosted Ubuntu Linux VM</li> </ul>"},{"location":"sec_about/about-wf-breakdown/#6-steps-checkout","title":"6. Steps \u2013 Checkout","text":"<p>General: first step is usually fetching source code</p> <p>The first step in my workflow job:</p> <pre><code>- name: Checkout code\n  uses: actions/checkout@v4\n  with:\n    fetch-depth: 0\n</code></pre> <ul> <li>uses the official <code>checkout</code> action</li> <li><code>fetch-depth: 0</code> = full git history (important for MkDocs plugins like <code>git-revision-date</code>)</li> </ul>"},{"location":"sec_about/about-wf-breakdown/#7-steps-docker-buildx-setup","title":"7. Steps \u2013 Docker Buildx Setup","text":"<p>General: sometimes workflows build Docker containers for repeatable builds</p> <p>My Docker setup step:</p> <pre><code>- name: Set up Docker Buildx\n  uses: docker/setup-buildx-action@v3\n</code></pre> <ul> <li>prepares Docker Buildx, which supports advanced builds with caching</li> </ul>"},{"location":"sec_about/about-wf-breakdown/#8-steps-build-docker-image","title":"8. Steps \u2013 Build Docker Image","text":"<p>General: you can encapsulate build environments into images</p> <p>My Docker image build step:</p> <pre><code>- name: \ud83c\udfd7\ufe0f Build Docker image\n  uses: docker/build-push-action@v5\n  with:\n    context: .\n    push: false\n    tags: mkdocs-builder:latest\n    load: true\n    cache-from: type=gha\n    cache-to: type=gha,mode=max\n</code></pre> <ul> <li>builds a local Docker image (<code>mkdocs-builder:latest</code>) containing all tools to build MkDocs</li> <li>Not pushed to Docker Hub (just used locally)</li> <li>uses GitHub cache to speed up rebuilds</li> </ul>"},{"location":"sec_about/about-wf-breakdown/#9-steps-build-mkdocs-site","title":"9. Steps \u2013 Build MkDocs Site","text":"<p>General: CI compiles source code into an artifact</p> <p>My artifact assembly step:</p> <pre><code>- name: Build MkDocs site\n  run: |\n    docker run --rm       -v ${{ github.workspace }}:/app       -w /app       mkdocs-builder:latest       mkdocs build --verbose\n</code></pre> <ul> <li>runs the containerized <code>mkdocs build</code> command</li> <li>mounts repo into <code>/app</code></li> <li>produces output into <code>./site/</code></li> </ul>"},{"location":"sec_about/about-wf-breakdown/#10-steps-verify-output","title":"10. Steps \u2013 Verify Output","text":"<p>General: good practice is to test build artifacts.</p> <p>My workflow's verification step:</p> <pre><code>- name: \ud83d\udd0d Verify build output\n  run: |\n    if [ ! -d \"./site\" ]; then\n      echo \"ERROR: MkDocs output folder './site' not found.\"\n      ls -la ./\n      exit 1\n    fi\n    echo \"Build output verified.\"\n</code></pre> <ul> <li>confirms the <code>site/</code> folder exists</li> <li>prevents publishing empty deployments</li> </ul>"},{"location":"sec_about/about-wf-breakdown/#11-deployment-to-github-pages","title":"11. Deployment to GitHub Pages","text":"<p>General: after building, workflows upload and deploy artifacts</p> <p>My workflow's GitHub Pages deployment steps:</p> <ul> <li>Use <code>actions/upload-pages-artifact</code> to store the <code>./site</code> folder.</li> <li>Use <code>actions/deploy-pages</code> to publish to GitHub Pages.</li> </ul> <p>This finalizes the site, so it's' live on my GitHub Pages domain.</p>"},{"location":"sec_about/about-wf-breakdown/#workflow-visualization","title":"Workflow Visualization","text":"flowchart TD      A[Push to main / PR / Manual Trigger] --&gt; B[Checkout Code]     B --&gt; C[Setup Docker Buildx]     C --&gt; D[Build MkDocs Docker Image]     D --&gt; E[Run mkdocs build inside Container]     E --&gt; F[Verify ./site Exists]     F --&gt; G[Upload Artifact to GitHub Pages]     G --&gt; H[Deploy to Pages]     H --&gt; I[Site Live!]      E --&gt;|if ./site missing| Z[Fail Build &amp; Stop]  <p>This workflow guarantees a repeatable, containerized MkDocs build process and a reliable deployment to GitHub Pages.  </p>"},{"location":"sec_about/about-wf-breakdown/#for-future-consideration","title":"For future consideration","text":"<ul> <li>add Mermaid rendering tests across themes</li> <li>validate diagram accessibility (e.g. alt text injection coverage)</li> <li>extend workflow with Markdownlint or YAML linting</li> <li>auto-generate changelog diffs for editorial traceability</li> </ul>"},{"location":"sec_about/feedback/","title":"Feedback","text":"<p>Found a bug, issue, typo, inaccuracy, problem, etc.?</p> <p>Would you like to share a suggestion, comment, or critique?</p> <ul> <li>Open a GitHub issue on this repository: https://github.com/cassmastern/cass-sandbox/issues/new</li> <li>E-mail me directly: cass.mastern.git@gmail.com</li> </ul>"},{"location":"sec_about/roadmap/","title":"Roadmap &amp; Changelog","text":"gantt     title Roadmap for the remainder of 2025     dateFormat MM-DD     axisFormat %d %b     section Phase 1     Revive proj          :a1, 08-08, 9d     Alt-injector         :08-15, 15d     mermaid              :08-10, 33d     section Phase 2     PlantUML             :09-08, 15d     Graphviz             :09-12, 25d     Site content         :08-10, 80d     WCAG*                :08-20, 62d  <p>*within the 'WCAG' timeframe: semantic headings, skip links, color contrast check, screen-reader test, alt text, ARIA landmarks</p>"},{"location":"sec_about/roadmap/#changelog","title":"Changelog","text":"<ul> <li>2025.10.16 a. Graphviz support (no accessibility metadata yet); b. new: a deep dive into SMART-on-FHIR.</li> <li>2025.10.08 New set of eHealth-related topics.</li> <li>2025.10.07 A mid-to-late 2010s SAML/SSO admin guide for sentimental, aesthetic, and experimentation purposes. </li> <li>2025.10.05 A topic on digital identity and its ~30-year evolution from password chaos to token sprawl.</li> <li>2025.09.19 New topic \u2014 a presentation cheat sheet/report/article on the current GenAI landscape.</li> <li>2025.09.12 Added support for PlantUML, as well as a current state of affairs before I move forward, Diagram Accessibility in MkDocs Material: Current State &amp; Path Forward.</li> <li>2025.08.27 Dropped JS injector approach in favor of accessibility mechanism in mermaid2; added local version of <code>mermaid.min.js</code>, Breakthrough #1.</li> <li>2025.08.25 Reorganized content in subfolders for the new plugin, <code>awesome-pages</code> to semi-automate the navigation</li> <li>2025.08.20 Enabled theme toggler; one last try to make accessibility metadata injector work; 'current state of affairs' as a bloggish piece of text, Visuals for the Sightless </li> <li>2025.08.19 Added some visuals to the AI-augmented Accessibility concept note; enabled some accessibility-related theme features</li> <li>2025.08.18 Added a rough roadmap and a \"concept note\" based on the AI-augmented accessibility idea</li> <li>2025.08.17 Added another first-ever; a 'technical daydream' on AI-augmented accessibility</li> <li>2025.08.14 Site live via GitHub Pages</li> <li>2025.08.13 Azure DevOps integration abandoned for technical reasons; GitHub Actions set up</li> <li>2025.08.12 Added my first-ever 'technical memoir' on a pre-cloud-era Java project, IBM-SanFrancisco</li> <li>2025.08.08 Revival; attempting to connect with Azure DevOps; added a several 'contemporary' topics</li> <li>2025.05.16 Attempt to revive the project and resume some GitHub activity</li> <li>2021.01.24 Initial commit with a couple of glossaries for own use and to learn GitHub; shelved 2021.05.17</li> </ul>"},{"location":"sec_about/whatsinhere/","title":"What's in Here?","text":"<p>This site contains topics, writing samples, glossaries, cheat sheets, concepets and ideas \u2014 designed to remain relevant and useful for my own use and future endeavors, and cover fields I'm interested in, including cloud platforms, CI/CD, accessibility (AODA/WCAG), eHealth, AI, and computer networking. </p> <p>Topics are grouped into these sections:</p> <ul> <li>About this Website </li> <li>In the Clouds </li> <li>Accessibility </li> <li>Enterprise Networks and Security </li> <li>Concepts, Ideas, and Free-Form Articles</li> <li>eHealth </li> <li>Miscellaneous Cheat Sheets </li> <li>Miscellaneous Glossaries </li> </ul> <p>No (or very little) late-night easy reading here.</p>"},{"location":"sec_accss/","title":"Accessibility","text":"<p>This section contains topics related to accessibility/WCAG compliance, which I'm trying to implement in this website; things like pain points, breakthroughs, lessons learned, etc. </p> <p>(There's also a general accessibility-related 'technical daydream' (and a follow-on concept note) about AI-augmented accessibility in the free-form articles section: Concepts, Ideas, and Free-Form Articles.)</p> <ul> <li>Accessibility Reference</li> <li>Visuals for the Sightless (Accessibility, Round 2)</li> <li>My Accessibility Diagram Dilemma</li> <li>An Accessible Mermaid Beyond Reach</li> <li>Mermaid Captured \u2014 Finally!</li> <li>Diagram Accessibility in MkDocs Material: Current State &amp; Path Forward</li> </ul>"},{"location":"sec_accss/accss_/","title":"Accessibility Reference","text":"<p>My WCAG 2.1 AA\u2013based accessibility reference/cheat sheet.</p>"},{"location":"sec_accss/accss_/#core-principles-pour","title":"Core Principles: POUR","text":"Principle Meaning Implementation Focus P Perceivable Content must be visible and understandable O Operable Users must be able to interact via keyboard and assistive tech U Understandable Content and UI must be predictable and readable R Robust Must work across technologies and assistive tools"},{"location":"sec_accss/accss_/#text-content","title":"Text Content","text":"<ul> <li>Use clear, readable language (avoid jargon unless defined)</li> <li>Ensure sufficient contrast (minimum 4.5:1 for body text)</li> <li>Use semantic HTML (<code>&lt;h1&gt;</code>\u2013<code>&lt;h6&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;ul&gt;</code>, etc.)</li> <li>Avoid relying on color alone to convey meaning</li> <li>Provide skip links or landmarks for navigation</li> </ul>"},{"location":"sec_accss/accss_/#keyboard-navigation","title":"Keyboard Navigation","text":"<ul> <li>All interactive elements must be reachable via keyboard</li> <li>Focus order must be logical and intuitive</li> <li>Avoid keyboard traps (e.g., modals that can't be exited)</li> <li>Use visible focus indicators</li> </ul>"},{"location":"sec_accss/accss_/#images-diagrams","title":"Images &amp; Diagrams","text":"<ul> <li>Provide descriptive <code>alt</code> text for informative images</li> <li>Use <code>role=\"img\"</code> + <code>aria-labelledby</code> or <code>aria-describedby</code> for SVGs</li> <li>Avoid embedding text inside images unless necessary</li> <li>Ensure diagrams have sufficient contrast and are readable when zoomed</li> <li>For complex diagrams, provide a text alternative or summary</li> </ul>"},{"location":"sec_accss/accss_/#tables-data","title":"Tables &amp; Data","text":"<ul> <li>Use <code>&lt;th&gt;</code> for headers and scope attributes (<code>scope=\"col\"</code>, <code>scope=\"row\"</code>)</li> <li>Avoid merged cells unless absolutely necessary</li> <li>Provide captions (<code>&lt;caption&gt;</code>) and summaries if needed</li> </ul>"},{"location":"sec_accss/accss_/#forms-ui-elements","title":"Forms &amp; UI Elements","text":"<ul> <li>Label all inputs with <code>&lt;label&gt;</code> or <code>aria-label</code></li> <li>Group related fields with <code>&lt;fieldset&gt;</code> and <code>&lt;legend&gt;</code></li> <li>Provide error messages with clear instructions</li> <li>Ensure form validation is accessible (e.g., not just color-based)</li> </ul>"},{"location":"sec_accss/accss_/#responsive-zoom","title":"Responsive &amp; Zoom","text":"<ul> <li>Content must reflow without loss at 320px width</li> <li>Support zoom up to 200% without breaking layout</li> <li>Avoid fixed pixel sizes for containers and text</li> </ul>"},{"location":"sec_accss/accss_/#other-essentials","title":"Other Essentials","text":"<ul> <li>Language attribute (<code>&lt;html lang=\"en\"&gt;</code>) must be set</li> <li>Avoid auto-playing media or flashing content</li> <li>Provide pause/stop controls for animations</li> <li>Ensure headings follow a logical hierarchy</li> <li>Use ARIA roles only when native HTML is insufficient</li> </ul>"},{"location":"sec_accss/accss_/#core-accessibility-elements","title":"Core Accessibility Elements","text":"<p>My cheat sheet for this project.  </p> Element Purpose MkDocs Support Notes <code>role=\"main\"</code> Defines primary content region Built-in In <code>main.html</code> <code>role=\"navigation\"</code> Identifies nav landmarks Built-in Sidebar and header <code>aria-label</code> Adds descriptive labels for screen readers Manual Use in Markdown or overrides <code>alt</code> text Describes images for non-visual users Manual Required in Markdown <code>aria-hidden</code> Hides decorative elements from screen readers Manual Use in custom HTML/CSS <code>aria-expanded</code> Indicates collapsible state (e.g. nav) Built-in Used in mobile nav <code>aria-current</code> Marks current page in nav Built-in Used in sidebar links"},{"location":"sec_accss/accss_diagram-dilemma/","title":"The Diagramming Dilemma","text":"<p>This is about diagrams. For a techcomm platform that\u2019s supposed to be modular, accessible, and changelog-driven, Mermaid fits the bill \u2014 text-based, Markdown-native, CI/CD-friendly \u2014 but it\u2019s failing me where it matters most.</p> <p>Current failurs:</p> <ul> <li>In dark mode , arrowheads vanish, labels fade, and contrast collapses.</li> <li>CSS-only fixes are inconsistent. JS-based toggles feel invasive.</li> <li>I'm trying to find the optimumal solution for injecting accessibility metadata and asserting semantic clarity. Hacks aren\u2019t acceptable.</li> <li>I refuse to sacrifice UML semantics for visual fidelity.</li> <li>Draw.io and other tools offer control, but compromise versionability and editorial sovereignty.</li> </ul> <p>It's not about just diagramming \u2014 it's about asserting meaning, clarity, and respect for the reader. And the tooling isn\u2019t quite keeping up.</p>"},{"location":"sec_accss/accss_diagram-dilemma/#comparative-chart-diagramming-tools","title":"Comparative Chart: Diagramming Tools","text":"Feature Mermaid Draw.io (diagrams.net) PlantUML Graphviz (DOT language) Structurizr DSL Pre-rendered SVGs Flowchart fallback Input format Text-based <code>.mmd</code> GUI-based <code>.drawio</code>, <code>.xml</code>, <code>.svg</code>, <code>.png</code> Text-based <code>.puml</code> Text-based <code>.dot</code> Text-based <code>.dsl</code> SVG (exported from any tool) Text-based <code>.mmd</code> Markdown integration Native via MkDocs Material Requires embedding exported images/SVGs Requires embedding exported images/SVGs Requires embedding exported images/SVGs Requires embedding exported images/SVGs Embed via <code>&lt;object&gt;</code> or <code>&lt;img&gt;</code> Native via MkDocs Material Version control Excellent (diffable text) Poor (binary or XML diffs are noisy) Excellent (diffable text) Excellent (diffable text) Excellent (diffable text) Moderate (SVG diffs are verbose) Excellent (diffable text) Accessibility metadata Supported via <code>accTitle</code>, <code>accDescr</code> Must be manually injected into SVG/HTML Must be manually injected into SVG/HTML Must be manually injected into SVG/HTML Must be manually injected into SVG/HTML Full control via ARIA + semantic HTML Supported via <code>accTitle</code>, <code>accDescr</code> Theme adaptability Limited, brittle Full control via SVG + CSS Reliable via skinparams Full control via attributes + CSS Limited in raw DSL Full control via CSS variables/media Adaptable via themeVariables Diagram fidelity Good for UML, limited layout control Excellent layout, full visual control Excellent for UML Excellent for graphs, poor for UML Excellent for C4 model Excellent, if exported with care Poor for UML semantics Automation potential High (CLI, scripts, CI/CD) Moderate (export + post-process) High (CLI, scripts, CI/CD) High (CLI, scripts, CI/CD) Moderate (requires Structurizr tooling) High (SVG post-processing + CI/CD) High (CLI, scripts, CI/CD) Semantic clarity Strong for UML, sequence, flow Weaker\u2014visual but not semantic Strong for UML Weak\u2014graph structure only Strong for architecture Strong if metadata is injected Weak\u2014flowchart only"},{"location":"sec_accss/mermaid-beyond-reach/","title":"An Accessible Mermaid Beyond Reach","text":"<p>On some progress in embedding accessibility text in Mermaid diagrams and a remaining blocker.</p> <p>Finally figured out I didn't need any custom scripts or post-processing hacks \u2014 at least not at this point \u2014 for metadata injection. Turns out \u2014 RTFM, eh \ud83e\udd26\ud83c\udffb\u200d\u2642\ufe0f \u2014 I can use Mermaid\u2019s built-in support for <code>accTitle</code> and <code>accDescr</code> directly inside fenced code blocks:</p> <pre><code>flowchart TB\n    accTitle: IBM SanFrancisco Layered Architecture\n    accDescr: Diagram showing IBM SanFrancisco's layered architecture. \n    Arrows connect layers from top to bottom: User Interface \u2192 Business \n    Logic \u2192 Foundation Services \u2192 JVM \u2192 Operating System. SanFrancisco \n    encompasses the Business Logic and Foundation layers, positioned \n    between application code and the JVM.\n\n    UI[User Interface Layer] --&gt; BL[Business Logic Layer]\n    BL --&gt; FS[Foundation Services Layer]\n    FS --&gt; JVM[Java Virtual Machine]\n    JVM --&gt; OS[Operating System]\n    subgraph IBM_SanFrancisco[\"IBM SanFrancisco\"]\n        BL\n        FS\n    end\n</code></pre> <p>I just had to find and pin a compatible combination of component versions:</p> <ul> <li>MkDocs 1.6.1</li> <li>MkDocs Material 9.5.39</li> <li>mkdocs-mermaid2-plugin 1.2.1</li> <li>Mermaid library mermaid@10.9.1 (https://unpkg.com/mermaid@10.9.1/dist/mermaid.min.js)</li> </ul> <p>So, <code>accTitle</code> and <code>accDescr</code> metadata are now rendered into the final SVG as <code>title&gt;</code>and <code>&lt;desc&gt;</code> elements, and correctly referenced via <code>aria-labelledby</code> and <code>aria-describedby</code>. (Firefox's <code>Inspect Accessibility Properties</code> tool confirms the diagram is exposed with the role (<code>graphics-document</code>) and semantic description.)</p>"},{"location":"sec_accss/mermaid-beyond-reach/#however","title":"However...","text":"<p>However, VoiceOver (macOS) and other common screen readers announce only the visible text labels inside the diagram (the <code>&lt;text&gt;</code> elements for nodes), and do not read the <code>&lt;title&gt;</code> / <code>&lt;desc&gt;</code> reliably \ud83e\udd26\u200d\u2642\ufe0f.</p> <p>To get assistive technologies to treat and announce the SVG as a single image with name/description, I also need <code>role=\"img\"</code> (NOT mermaid's <code>role=\"graphics-document document\"</code>) and <code>tabindex=\"0\"</code>. Otherwise, VoiceOver and other utilities treat the SVG as collection if images, announcing every box label one after the other. No sense.</p> <p>Attempting to patch the SVGs post-render (to add <code>role=\"img\"</code> + <code>tabindex=\"0\"</code> to <code>svg[id^=\"mermaid-\"]</code>), fail miserably.</p> <p>So, yes. An accessible mermaid, but beyond reach indeed...</p> <p></p> <p>The journey continues...</p>"},{"location":"sec_accss/mermaid-beyond-reach/#to-do-to-move-forward","title":"To Do to Move Forward","text":"<ul> <li>Find a way and a mechanism to override Mermaid\u2019s default rendering behavior and modify the SVG output before it\u2019s inserted into the DOM,     -or-</li> <li>Find a way and a mechanism to patch SVGs post-build.</li> </ul> <p>Something like</p> <pre><code>  postRender: (svgCode, bindFunctions) =&gt; {\n    // Add role=\"img\" and tabindex=\"0\" to the root &lt;svg&gt; element\n    const svg = svgCode.replace(/&lt;svg/, '&lt;svg role=\"img\" tabindex=\"0\"');\n    return svg;\n  }\n});\n</code></pre>"},{"location":"sec_accss/mermaid-captured/","title":"Mermaid Captured","text":"<p>Breakthrough.</p> <p>ToDo:</p> <ul> <li>Find out whether the SVG patcher approach is indeed the optimal, valid, legal, and most graceful one (perhaps there IS an official, developer-sanctioned way to get a Mermaid diagram to have <code>role=\"img\"</code> and <code>tabindex=\"0\"</code> in addition to <code>accTitle</code>and <code>accDescr</code>).</li> <li>Combine Mermaid diagram-related content into a single reference/cheat sheet.</li> </ul>"},{"location":"sec_accss/mermaid-captured/#the-patcher","title":"The Patcher","text":"<p>So, following a small breakthrough (An Accessible Mermaid Beyond Reach), a post-build patcher got an assistive technology, VoiceOver on macOS, to treat a Mermaid-to-SVG-to-HTML diagram the way I wanted.</p>"},{"location":"sec_accss/mermaid-captured/#the-patcher_1","title":"The Patcher","text":"<p>Referenced last in the <code>extra_javascript:</code> list of custom script declarations inside <code>mkdocs.yml</code>:</p> <pre><code>// Wait for Mermaid to finish rendering\nwindow.addEventListener('load', function() {\n  setTimeout(function() {\n    document.querySelectorAll('svg[role=\"graphics-document document\"]').forEach(svg =&gt; {\n      svg.setAttribute('role', 'img');\n      svg.setAttribute('tabindex', '0');\n      svg.removeAttribute('aria-roledescription');\n    });\n  }, 1000); // Adjust delay if needed\n});\n</code></pre>"},{"location":"sec_accss/mermaid-captured/#the-fix","title":"The Fix:","text":"<p>Here is the VoiceOver app on macOS, reading a diagram description out loud:</p> <ul> <li>By forcibly switching the <code>role</code> to <code>img</code>, it tells AT: \u201ctreat this entire <code>&lt;svg&gt;</code> as one atomic image, with a single name and description.\u201d</li> <li>With <code>aria-labelledby</code> \u2192 <code>title</code> and <code>aria-describedby</code> \u2192 <code>desc</code>, the accessible name/description calculation becomes:<ul> <li>Name: contents of <code>&lt;title&gt;</code> (the <code>accTitle:</code> value inside the Mermaid block of the source Markdown document)</li> <li>Description: contents of <code>&lt;desc&gt;</code> (the <code>accDescr:</code> value inside the Mermaid block of the source Markdown document)</li> </ul> </li> <li>AT announces it exactly as I wanted, e.g.: \u201cAzure architecture diagram. Azure architecture diagram with global regions and availability zones\u2026[etc]\u201d.</li> </ul> <p>And because <code>aria-roledescription</code> is removed, there is nothing to override or confuse the role mapping.</p> <p>Why <code>tabindex</code> matters here:</p> <ul> <li>Adding <code>tabindex=\"0\"</code> makes the <code>&lt;svg&gt;</code> keyboard-focusable, so users who navigate by keyboard (screen reader users, sighted keyboard users) can land on the diagram and hear the name/description announced.</li> <li>Without focusability, the diagram might be skipped entirely, even if it has valid role/name/description.</li> </ul>"},{"location":"sec_accss/mermaid-captured/#the-basic-test","title":"The Basic Test:","text":""},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/","title":"Diagram Accessibility: Current State/Path Forward","text":"<p>Another sticky note; I have now built a more-or-less robust doc platform with live diagram rendering, theme switching, and accessibility patching for Mermaid. But PlantUML and Graphviz still lag behind in accessibility and dynamic responsiveness.</p>"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#mermaid-fully-live-fully-accessible","title":"Mermaid: Fully Live, Fully Accessible","text":"<p>Mermaid diagrams are rendered client-side using JavaScript. My <code>seamaiden.js</code> handles theme switching, and <code>svg-patcher.js</code> injects accessibility metadata (<code>role=\"img\"</code>, <code>tabindex=\"0\"</code>, etc.) after rendering.</p>"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#mermaid-rendering-workflow","title":"Mermaid Rendering Workflow","text":"flowchart TD   A[Markdown with Mermaid block] --&gt; B[Mermaid JS renders SVG in browser]   B --&gt; C[Theme switch triggers re-render]   C --&gt; D[Accessibility patcher injects metadata]   D --&gt; E[Diagram becomes keyboard-accessible and WCAG-compliant]  <p>This flow is modular, responsive, and editorially controlled.</p>"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#plantuml-static-theme-aware-but-not-accessible","title":"PlantUML: Static, Theme-Aware, But Not Accessible","text":"<p>PlantUML diagrams are rendered server-side or at build-time via <code>mkdocs_puml</code>. The plugin supports dual rendering for light and dark themes, but SVGs lack accessibility metadata unless manually patched.</p>"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#plantuml-rendering-workflow","title":"PlantUML Rendering Workflow","text":"<pre><code>@startuml\ntitle PlantUML Rendering Workflow\n\nrectangle \"Markdown with PlantUML block\" as A\nrectangle \"mkdocs_puml plugin\" as B\nrectangle \"SVG (light + dark)\" as C\nrectangle \"No accessibility metadata\" as D\nrectangle \"Optional Python patcher\" as E\n\nA --&gt; B\nB --&gt; C\nC --&gt; D\nD --&gt; E : Inject role='img', title, desc, tabindex\n@enduml\n</code></pre> <p>To match Mermaid\u2019s accessibility, I'll need a Python-based SVG patcher that runs post-build.</p>"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#graphviz-powerful-but-accessibility-agnostic","title":"Graphviz: Powerful, But Accessibility-Agnostic","text":"<p>Graphviz (DOT language) is rendered at build-time into static SVGs. It\u2019s great for dependency graphs and provenance maps, but:</p> <ul> <li>No theme responsiveness</li> <li>No accessibility metadata</li> <li>No live preview</li> </ul> <p>To integrate Graphviz cleanly: - I could use <code>mkdocs-diagrams</code> \u2014 for unified rendering - Pre-render <code>.dot</code> files to SVG - Inject accessibility metadata via Python patcher - Wrap diagrams in <code>&lt;figure&gt;</code> blocks with captions and changelog tags</p>"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#summary-of-capabilities","title":"Summary of Capabilities","text":"Feature Mermaid PlantUML Graphviz Rendering Mode Runtime (JS) Build-time Build-time Theme Switching \u2705 Native \u26a0\ufe0f Dual render \u274c Manual only Accessibility Metadata \u2705 JS patcher \u26a0\ufe0f Python patcher \u274c Manual only Live Preview \u2705 Yes \u26a0\ufe0f Limited \u274c None Provenance Tagging \u26a0\ufe0f Manual \u2705 File-based \u2705 File-based Editorial Control \u2705 High \u2705 Moderate \u26a0\ufe0f Low"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#rough-plan-to-extend-full-support","title":"Rough Plan to Extend Full Support","text":""},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#1-plantuml-accessibility","title":"1. PlantUML Accessibility","text":"<ul> <li>Write a Python patcher to inject <code>&lt;title&gt;</code>, <code>&lt;desc&gt;</code>, <code>role=\"img\"</code>, and <code>tabindex=\"0\"</code> into SVGs</li> <li>Run it post-build or in CI/CD pipeline</li> <li>Optionally tag diagrams with <code>data-provenance</code> and changelog metadata</li> </ul>"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#2-graphviz-integration","title":"2. Graphviz Integration","text":"<ul> <li>Use <code>mkdocs-diagrams</code> to unify rendering</li> <li>Pre-render <code>.dot</code> files to SVG</li> <li>Apply same Python patcher for accessibility</li> <li>Wrap diagrams in <code>&lt;figure&gt;</code> blocks with captions and editorial context</li> </ul>"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#3-registry-and-provenance","title":"3. Registry and Provenance","text":"<ul> <li>Create a diagram registry with filenames, changelog tags, and accessibility status</li> <li>Use <code>aria-describedby</code> to link diagrams to hidden editorial notes</li> <li>Ensure all diagrams are keyboard-accessible and theme-aware</li> </ul>"},{"location":"sec_accss/mkdocs-mermaid-plantuml-graphviz/#4-bonus-drawio","title":"4. Bonus \u2014 draw.io?","text":"<p>...</p> <p>With this flow, I might end up having full editorial control, accessibility compliance, and modular rendering across all diagram formats \u2014 without brittle plugins or runtime flicker.</p>"},{"location":"sec_accss/visuals-for-the-sightless/","title":"Visuals for the Sightless","text":"<p>Rant.</p> <p>So it looks like I\u2019m diving into accessibility and WCAG for a second time. The first time, way back in 2010, doesn\u2019t really count \u2014 I was part of a large org with a techcomm tools engineer, a QA team, and workflows that enforced \"almost-full compliance\" by default. (To me, it sounded a bit off. Like, you're either Section 508 or WCAG-compliant, or you're not, no?) But I didn't care to voice it, perhaps also because my mom wasn't sightless yet.</p> <p>Now, solo, building a Dockerized MkDocs Material site with supposedly format-neutral diagram support (hoping it'll become, um, almost fully accessible some day \ud83d\ude0a), things are... different. This time, accessibility isn\u2019t a checkbox. And the deeper I go, the more I realize how brittle the ecosystem is when you try to retrofit compliance into dynamically rendered content.</p>"},{"location":"sec_accss/visuals-for-the-sightless/#the-mermaid-plugin-trap","title":"The Mermaid Plugin Trap","text":"<p>The <code>mkdocs-mermaid2-plugin==1.2.1</code> lets you author diagrams inline in Markdown and renders them client-side as SVGs. It\u2019s ergonomic, fast, and great for prototyping. But it\u2019s also a compliance minefield.</p>"},{"location":"sec_accss/visuals-for-the-sightless/#why-its-problematic","title":"Why It\u2019s Problematic","text":"Concern Description ~~No built-in accessibility~~ ~~Mermaid-generated SVGs lack<code>&lt;title&gt;</code>, <code>&lt;desc&gt;</code>, ARIA roles, or labels.~~ ~~Client-side rendering~~ ~~Diagrams are injected after page load, making static accessibility impossible.~~ Theme-dependent rendering Diagrams repaint based on light/dark mode, often wiping injected metadata. No lifecycle hooks There\u2019s no reliable callback to hook into post-render for mutation. Silent failures If your script runs too early or too late, nothing happens \u2014 and you won\u2019t know. <p>Have to retract much of what's in the table above... *see Breakthru #1.</p>"},{"location":"sec_accss/visuals-for-the-sightless/#runtime-injection-a-fragile-strategy","title":"Runtime Injection: A Fragile Strategy","text":"<p>I\u2019ve tried multiple iterations of a post-build accessibility injector. The latest version attempts to pair HTML comments with Mermaid diagrams and inject metadata once the SVG is rendered.</p>"},{"location":"sec_accss/visuals-for-the-sightless/#current-script-excerpt","title":"Current Script (Excerpt)","text":"<pre><code>// Simple ALT comment processor for AODA compliance\n// scripts/js/alt-processor.js\n\ndocument.addEventListener(\"DOMContentLoaded\", () =&gt; {\n  const walker = document.createTreeWalker(document.body, NodeFilter.SHOW_COMMENT, null, false);\n  const altComments = [];\n\n  while (walker.nextNode()) {\n    const comment = walker.currentNode;\n    const match = comment.nodeValue.trim().match(/^ALT:\\s*(.+)$/);\n    if (match) {\n      altComments.push({ node: comment, text: match[1] });\n    }\n  }\n\n  altComments.forEach(({ node, text }) =&gt; {\n    let next = node.nextSibling;\n    while (next &amp;&amp; !(next.nodeType === 1 &amp;&amp; next.classList?.contains(\"mermaid\"))) {\n      next = next.nextSibling;\n    }\n\n    if (next) {\n      const checkForSvg = () =&gt; {\n        const svg = next.querySelector(\"svg\");\n        if (svg) {\n          svg.setAttribute(\"role\", \"img\");\n          svg.setAttribute(\"aria-label\", text);\n          svg.setAttribute(\"tabindex\", \"0\");\n\n          const title = document.createElementNS(\"http://www.w3.org/2000/svg\", \"title\");\n          title.textContent = \"Diagram\";\n          const desc = document.createElementNS(\"http://www.w3.org/2000/svg\", \"desc\");\n          desc.textContent = text;\n\n          svg.insertBefore(desc, svg.firstChild);\n          svg.insertBefore(title, svg.firstChild);\n        } else {\n          setTimeout(checkForSvg, 100);\n        }\n      };\n      checkForSvg();\n    }\n  });\n});\n</code></pre>"},{"location":"sec_accss/visuals-for-the-sightless/#weaknesses-in-current-script","title":"Weaknesses in Current Script","text":"<p>Here is what our GenAI friends say about the script:</p> <ul> <li>Infinite polling risk: setTimeout loop can run forever if SVG never appears.</li> <li>Metadata duplication: <code>&lt;title&gt;</code>/<code>&lt;desc&gt;</code> inserted repeatedly if re-rendered.</li> <li>Theme switch wipes metadata: No MutationObserver to reapply metadata.</li> <li>Accessibility semantics: Hardcoded <code>title = \"Diagram\"</code> adds little value.</li> <li>Silent failures: No logging or error reporting when mutation fails.</li> </ul>"},{"location":"sec_accss/visuals-for-the-sightless/#what-breaks","title":"What Breaks","text":"Failure Mode Cause Result Early execution Mermaid hasn\u2019t rendered yet No SVG found, no mutation Theme switch User toggles light/dark mode Mermaid re-renders, metadata wiped Browser quirks JS blocked or delayed Script fails silently DOM mutation timing Mermaid uses delayed injection Mutation observer misses target"},{"location":"sec_accss/visuals-for-the-sightless/#the-lightdark-mode-problem","title":"The Light/Dark Mode Problem","text":"<p>This deserves its own section. Perhaps a book. Mermaid diagrams often repaint when the user toggles their browser\u2019s theme. This is usually done via CSS variables or JS-based theming. But here\u2019s what happens:</p> <ol> <li>Initial render: Your script injects metadata into the SVG.</li> <li>User switches theme: Mermaid re-renders the diagram.</li> <li>New SVG replaces old one: Your injected metadata is gone.</li> <li>No hook to re-run script: Accessibility is broken again.</li> </ol>"},{"location":"sec_accss/visuals-for-the-sightless/#theme-sensitive-rendering-table","title":"Theme-Sensitive Rendering Table","text":"Event Diagram Behavior Metadata Status Page load (light mode) Mermaid renders SVG Metadata injected if script runs correctly Theme switch to dark Mermaid re-renders Metadata lost unless script re-runs Theme switch back to light Mermaid re-renders again Metadata lost again No mutation observer No re-injection Accessibility fails flowchart LR   Author --&gt; Build   Build --&gt; RuntimeInjection   RuntimeInjection --&gt;|Theme toggle| MetadataLost   RuntimeInjection --&gt;|No theme toggle| MetadataOK  <p>This is a fundamental flaw in relying on runtime injection for compliance. It\u2019s not just fragile, it\u2019s unsustainable.</p>"},{"location":"sec_accss/visuals-for-the-sightless/#the-case-for-prebuilt-svgs","title":"The Case for Prebuilt SVGs","text":"<p>After enough frustration, the alternative starts to look like a more sane option: generate SVGs locally, inject metadata before build, and serve them as static assets.</p>"},{"location":"sec_accss/visuals-for-the-sightless/#benefits","title":"Benefits","text":"<ul> <li>Full control over <code>&lt;title&gt;</code>, <code>&lt;desc&gt;</code>, ARIA roles, and provenance.</li> <li>No runtime dependency \u2014 everything is baked into the source.</li> <li>Theme fidelity \u2014 generate light and dark variants with guaranteed contrast.</li> <li>Reproducibility \u2014 no silent failures, no timing issues.</li> </ul>"},{"location":"sec_accss/visuals-for-the-sightless/#tradeoffs","title":"Tradeoffs","text":"Tradeoff Impact No Markdown-native authoring Slightly slower iteration Mermaid plugin becomes redundant Simplifies production builds Requires local tooling But enables automation and validation"},{"location":"sec_accss/visuals-for-the-sightless/#so-now-what","title":"So, Now What?","text":"<p>So, now I'm probably going to give the injector logic one last try to get it to work for the moment, at least for the benefit of a cheap, temporary sense of accomplishement. Fingers crossed for my developer friends and all the GenAI engines and agents and assistants I can think of.</p> <p>Down the road/longer term \u2014 perhaps mobilize some of them 'for real'?</p>"},{"location":"sec_cheatsheets/","title":"Various Cheat Sheets","text":"<p>This section contains quick references for common tasks in cloud-native environments and a bonus topic on grammar:</p> <ul> <li>Docker Commands</li> <li>Kubectl Commands</li> <li>Compound Modifiers</li> </ul>"},{"location":"sec_cheatsheets/cheatsheet-docker/","title":"Docker Command Cheatsheet","text":"<p>This page lists common Docker commands.</p>"},{"location":"sec_cheatsheets/cheatsheet-docker/#command-syntax-and-options","title":"Command Syntax and Options","text":"<p>All commands below are called as options to the base <code>docker</code> command. For more information about a particular command, run  <code>docker &lt;command&gt; --help</code>. </p> <p><code>app*</code>:         Docker Application <code>assemble*</code>:    Framework-aware builds (Docker Enterprise) <code>builder</code>:      Manage builds <code>cluster</code>:      Manage Docker clusters (Docker Enterprise) <code>config</code>:       Manage Docker configs <code>context</code>:      Manage contexts <code>engine</code>:       Manage the docker Engine <code>image</code>:        Manage images <code>network</code>:      Manage networks <code>node</code>:         Manage Swarm nodes <code>plugin</code>:       Manage plugins <code>registry*</code>:    Manage Docker registries <code>secret</code>:       Manage Docker secrets <code>service</code>:      Manage services <code>stack</code>:        Manage Docker stacks <code>swarm</code>:        Manage swarm <code>system</code>:       Manage Docker <code>template*</code>:    Quickly scaffold services (Docker Enterprise) <code>trust</code>:        Manage trust on Docker images <code>volume</code>:       Manage volumes  </p>"},{"location":"sec_cheatsheets/cheatsheet-docker/#build","title":"Build","text":"<ul> <li>Build an image from the Dockerfile in the current directory and tag the image: <code>docker build -t myimage:1.0</code></li> <li>List all images that are locally stored with the Docker Engine: <code>docker image ls</code></li> <li>Delete an image from the local image store: <code>docker image rm alpine:3.4</code></li> </ul>"},{"location":"sec_cheatsheets/cheatsheet-docker/#share","title":"Share","text":"<ul> <li>Pull an image from a registry: <code>docker pull &lt;myimage&gt;:1.0</code></li> <li>Retag a local image with a new image name and tag: <code>docker tag &lt;myimage&gt;:1.0 myrepo/myimage:2.0</code></li> <li>Push an image to a registry: <code>docker push myrepo/myimage:2.0</code> </li> </ul>"},{"location":"sec_cheatsheets/cheatsheet-docker/#run","title":"Run","text":"<ul> <li>Run a container from the Alpine version 3.9 image, name the running container <code>web</code> and expose port 5000 externally, mapped to port 80 inside the container: <code>docker container run --name web -p 5000:80 alpine:3.9</code></li> <li>Stop a running container through SIGTERM: <code>docker container stop web</code></li> <li>Stop a running container through SIGKILL: <code>docker container kill web</code></li> <li>List the networks: <code>docker network ls</code></li> <li>List the running containers (add <code>--all</code> to include stopped containers): <code>docker container ls</code></li> <li>Delete all running and stopped containers: <code>docker container rm -f $(docker ps -aq)</code></li> <li>Print the last 100 lines of a container's logs: <code>docker container logs --tail 100 web</code> </li> </ul>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/","title":"Kubectl Command Cheat Sheet","text":"<p>This page lists common <code>kubectl</code> commands.</p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#basic-commands","title":"Basic Commands","text":""},{"location":"sec_cheatsheets/cheatsheet-kubectl/#cluster-information","title":"Cluster Information","text":"<p><code>kubectl cluster-info</code>                   Display cluster info <code>kubectl version</code>                        Show client and server versions <code>kubectl get nodes</code>                      List all nodes <code>kubectl describe nodes</code>                 Show detailed node information <code>kubectl top nodes</code>                      Show resource usage (CPU/Memory) of nodes <code>kubectl api-resources</code>                  List all API resources  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#context-and-configuration","title":"Context and Configuration","text":"<p><code>kubectl config view</code>                    Show merged kubeconfig settings <code>kubectl config current-context</code>         Display current context <code>kubectl config use-context &lt;context&gt;</code>   Switch to another context <code>kubectl config get-contexts</code>            List all contexts <code>kubectl config set-context --current --namespace=&lt;ns&gt;</code>   Set namespace for current context  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#resource-operations","title":"Resource Operations","text":""},{"location":"sec_cheatsheets/cheatsheet-kubectl/#common-verbs","title":"Common Verbs","text":"<p><code>kubectl get</code>                  List resources <code>kubectl describe</code>      Detailed resource info <code>kubectl create</code> -f           Create from file <code>kubectl apply</code> -f            Apply configuration <code>kubectl delete</code> -f           Delete from file <code>kubectl edit</code>          Edit resource <code>kubectl patch</code>  --patch '{\"spec\": {...}}'   Partial update <code>kubectl replace</code> -f          Force replace <code>kubectl scale</code> --replicas=3   Scale replicas"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#pod-operations","title":"Pod Operations","text":"<p><code>kubectl get pods</code> [-o wide]            # List pods (with node info) <code>kubectl describe pod &lt;pod-name&gt;</code>       # Pod details <code>kubectl logs &lt;pod-name&gt; [-c container]</code>  # Show pod logs <code>kubectl exec -it &lt;pod-name&gt; -- bash</code>   # Interactive shell <code>kubectl port-forward &lt;pod-name&gt;</code> 8080:80  # Port forwarding <code>kubectl top pod &lt;pod-name&gt;</code>            # Pod resource usage <code>kubectl cp &lt;pod-name&gt;:&lt;path&gt; &lt;local-path&gt;</code>  # Copy from pod  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#deployment-operations","title":"Deployment Operations","text":"<p><code>kubectl get deployments</code>                List deployments <code>kubectl rollout status deployment/&lt;name&gt;</code>   Check rollout status <code>kubectl rollout history deployment/&lt;name&gt;</code>   View rollout history <code>kubectl rollout undo deployment/&lt;name&gt;</code>   Rollback deployment <code>kubectl set image deployment/&lt;name&gt; &lt;container&gt;=&lt;new-image&gt;</code>   Update image  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#service-operations","title":"Service Operations","text":"<p><code>kubectl get services</code>                   List services <code>kubectl expose deployment &lt;name&gt; --port=80 --target-port=8080</code>   Create service  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#namespace-operations","title":"Namespace Operations","text":"<p><code>kubectl get namespaces</code>                 List namespaces <code>kubectl create namespace &lt;name&gt;</code>        Create namespace <code>kubectl delete namespace &lt;name&gt;</code>        Delete namespace  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#advanced-operations","title":"Advanced Operations","text":""},{"location":"sec_cheatsheets/cheatsheet-kubectl/#debugging","title":"Debugging","text":"<p><code>kubectl get events --sort-by=.metadata.creationTimestamp</code>   Show events <code>kubectl get events -w</code>                   Watch events <code>kubectl logs -f &lt;pod-name&gt;</code>              Stream logs <code>kubectl attach -it &lt;pod-name&gt;</code>           Attach to running container <code>kubectl debug -it &lt;pod-name&gt; --image=busybox --target=&lt;container&gt;</code>   Debug pod  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#yamljson-manipulation","title":"YAML/JSON Manipulation","text":"<p><code>kubectl get &lt;resource&gt; -o yaml</code>         Get resource as YAML <code>kubectl get &lt;resource&gt; -o json</code>         Get resource as JSON <code>kubectl explain &lt;resource&gt;</code>             Show resource documentation <code>kubectl diff -f &lt;file.yaml&gt;</code>            Show differences  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#resource-management","title":"Resource Management","text":"<p><code>kubectl label &lt;resource&gt; &lt;name&gt; key=value</code>  # Add label <code>kubectl annotate &lt;resource&gt; &lt;name&gt; key=value</code>  # Add annotation <code>kubectl taint nodes &lt;node-name&gt; key=value:NoSchedule</code>  # Taint node <code>kubectl cordon &lt;node-name&gt;</code>              # Mark node as unschedulable <code>kubectl drain &lt;node-name&gt; --ignore-daemonsets</code>  # Drain node <code>kubectl uncordon &lt;node-name&gt;</code>            # Mark node as schedulable  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#rbac-operations","title":"RBAC Operations","text":"<p><code>kubectl get roles,rolebindings</code>          List RBAC resources <code>kubectl get clusterroles,clusterrolebindings</code>   Verify roles and bindings <code>kubectl auth can-i &lt;verb&gt; &lt;resource&gt;</code>    Check permissions  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#output-formats","title":"Output Formats","text":"<p><code>kubectl get pods -o wide</code>               Additional details <code>kubectl get pods -o name</code>               Resource names only <code>kubectl get pods -o jsonpath='{.items[*].metadata.name}'</code>   Custom output <code>kubectl get pods -o custom-columns=NAME:.metadata.name,STATUS:.status.phase</code>   Custom columns <code>kubectl get pods --show-labels</code>          Show labels <code>kubectl get pods --watch</code>                Watch changes  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#troubleshooting","title":"Troubleshooting","text":"<p><code>kubectl get pods --field-selector status.phase=Running</code>   Filter pods <code>kubectl get pods --all-namespaces</code>       Across all namespaces kubectl api-versions                   List available API versions <code>kubectl get --raw /metrics</code>              View raw metrics <code>kubectl get --raw /healthz</code>              Check cluster health  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#shortcuts-and-aliases","title":"Shortcuts and Aliases","text":"<p><code>kubectl get po</code>                         Short for pods <code>kubectl get svc</code>                        Short for services <code>kubectl get deploy</code>                     Short for deployments <code>kubectl get rs</code>                         Short for replicasets <code>kubectl get ns</code>                         Short for namespaces <code>kubectl get no</code>                         Short for nodes  </p>"},{"location":"sec_cheatsheets/cheatsheet-kubectl/#plugins-and-extensions","title":"Plugins and Extensions","text":"<p><code>kubectl krew</code>                           Plugin manager <code>kubectl neat</code>                           Clean up manifests (plugin) <code>kubectl tree</code>                           Show object hierarchy (plugin)  </p>"},{"location":"sec_cheatsheets/cheatsheet_compound-modifiers/","title":"Compound Modifiers Cheat Sheet","text":"<p>\"Compound modifier\" will probably be the only term in this site to come from linguistics and natural language syntax. I'm including this as a pre-emptive exhibit of a weakness and yes, a cheat sheet. In plain English.</p>"},{"location":"sec_cheatsheets/cheatsheet_compound-modifiers/#rule","title":"Rule","text":"<p>Use hyphenation for compound modifiers before nouns to ensure clarity and consistency. Avoid hyphenation when the phrase follows the noun.</p>"},{"location":"sec_cheatsheets/cheatsheet_compound-modifiers/#hyphenate-before-the-noun","title":"Hyphenate Before the Noun","text":"Compound Modifier Description / Part of Speech Example Usage high-availability Adjective describing cluster The company deployed a high-availability cluster to ensure the system remains online even during server failures. fault-tolerant Adjective describing architecture The new fault-tolerant architecture allows the application to continue operating despite hardware malfunctions. low-latency Adjective describing connection The low-latency connection enabled smooth video conferencing without noticeable delays. real-time Adjective describing monitoring The software provides real-time monitoring of network traffic to detect issues immediately. read-only Adjective describing file system The technician mounted the drive as a read-only file system to prevent accidental modifications. permanently-damaged Adjective describing disk The technician confirmed that the disk was permanently damaged and needed replacement. cross-platform Adjective describing compatibility The development team released a cross-platform application that runs on Windows, macOS, and Linux. command-line Adjective describing utility The command-line utility simplifies batch processing tasks for advanced users. open-source Adjective describing framework The team chose an open-source framework to allow customization and community contributions. user-friendly Adjective describing interface The new interface is user-friendly, making it easy for beginners to navigate the software."},{"location":"sec_cheatsheets/cheatsheet_compound-modifiers/#no-hyphen-after-the-noun","title":"No Hyphen After the Noun","text":"Phrase Description / Part of Speech Example Usage high availability Adjective describing cluster The cluster supports high availability to minimize downtime. fault tolerant Adjective describing architecture The architecture is fault tolerant, allowing it to operate despite component failures. low latency Adjective describing connection The connection is low latency, ensuring fast data transmission. real time Adjective describing monitoring Monitoring is done in real time to detect issues immediately. read only Adjective describing file system The file system is read only to prevent accidental changes. permanently damaged Adjective describing disk The disk is permanently damaged and cannot be used. cross platform Adjective describing compatibility The tool is compatible across platforms, including Windows, macOS, and Linux. command line Adjective describing utility The utility runs from the command line for advanced users. open source Adjective describing framework The framework is open source, allowing developers to modify and contribute to the code. user friendly Adjective describing interface The interface is user friendly, making it easy for beginners to"},{"location":"sec_cheatsheets/cheatsheet_compound-modifiers/#notes","title":"Notes","text":"<ul> <li> <p>Adverbs ending in <code>-ly</code> (e.g., fully, partially) typically do not require hyphenation:</p> </li> <li> <p>Correct: fully automated system</p> </li> <li>Incorrect: fully-automated system</li> <li>When in doubt, hyphenate for clarity before the noun, and omit after.</li> </ul>"},{"location":"sec_cloud/","title":"In the Clouds","text":"<p>This section contains cloud comparisons and deployment case studies:</p> <ul> <li>Architectures of AWS, GCP, and Azure</li> <li>Cross-Platform Cloud &amp; DevOps Glossary (AWS, GCP, Azure) </li> <li>Cross-Platform Cloud &amp; DevOps Glossary (AWS, GCP, Azure) \u2014 Enhanced</li> <li>Jakarta EE on Azure</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure/","title":"Architectures of AWS, GCP, and Azure","text":"<p>Architectural descriptions of AWS, GCP, and Azure are presented here at a level crafted for my own reference and growing understanding \u2014 detailed enough to be meaningful, yet concise enough to avoid cloud-induced vertigo.</p> <p>Common major component types </p> <ul> <li>Global Infrastructure  </li> <li>Networking  </li> <li>Compute  </li> <li>Databases / Storage  </li> <li>DevOps  </li> <li>Security  </li> <li>Observability</li> </ul> <p>Note: Diagrams are conceptual simplifications.</p>"},{"location":"sec_cloud/aws-gcp-azure/#aws-architecture","title":"AWS Architecture","text":"<p>AWS provides the most mature and expansive ecosystem among the three major cloud providers, with over 200 services spanning compute, storage, networking, AI/ML, analytics, and IoT. Its architecture is built around flexibility, allowing organizations to choose between traditional VMs (EC2), containers (ECS and EKS), or serverless (Lambda) depending on workload needs.</p> <p>A defining feature of AWS is its global infrastructure---multiple regions, each with multiple availability zones---paired with services like Route 53 for intelligent DNS routing and CloudFront for low-latency content delivery. Compared to GCP and Azure, AWS offers the widest service diversity and a strong track record in enterprise reliability, though it can also be more complex to navigate due to sheer scale.  </p> <p>The following is a simplified representation of the AWS architecture:  </p> graph TD     accTitle: AWS architecture diagram     accDescr: AWS architecture diagram showing global infrastructure with regions and availability zones at top. User connects via Route 53 DNS and CloudFront CDN to Elastic Load Balancer, which distributes traffic to compute services: EC2 instances, ECS/EKS containers, and Lambda functions. These connect to data layer containing RDS relational database, DynamoDB NoSQL database, and S3 object storage. DevOps pipeline flows from CodeCommit source repository through CodeBuild and CodeDeploy back to load balancer. Security layer includes AWS IAM, Secrets Manager, and GuardDuty threat detection. Observability provided by CloudWatch monitoring and CloudTrail audit logs.     %% GLOBAL INFRASTRUCTURE     subgraph GlobalInfra[\"Global Infrastructure\"]         J1[AWS Regions]:::global         J2[Availability Zones]:::global         J1 --&gt; J2     end      %% USER ENTRY     User[Developer/User] --&gt;|HTTPS| Route53[Route 53 - DNS]:::net     Route53 --&gt; CloudFront[CloudFront - CDN]:::net     CloudFront --&gt; ELB[Elastic Load Balancer]:::net      %% NETWORKING     subgraph Networking         VPC[VPC - Virtual Private Cloud]:::net         Subnet1[Public Subnet]:::net         Subnet2[Private Subnet]:::net         NACL[Security Groups / NACL]:::net         VPC --&gt; Subnet1         VPC --&gt; Subnet2         Subnet1 --&gt; NACL     end      %% COMPUTE     subgraph Compute         EC2[EC2 Instances]:::compute         ECS[ECS/EKS - Containers]:::compute         Lambda[Lambda Functions]:::compute     end      ELB --&gt; EC2     ELB --&gt; ECS     ELB --&gt; Lambda      %% DATABASE / STORAGE     subgraph Data         RDS[RDS - Relational DB]:::data         DynamoDB[DynamoDB - NoSQL DB]:::data         S3[S3 - Object Storage]:::data     end      EC2 --&gt; RDS     ECS --&gt; DynamoDB     Lambda --&gt; S3      %% DEVOPS     subgraph DevOps         CodeCommit[CodeCommit - Source Repo]:::devops         CodeBuild[CodeBuild - Build]:::devops         CodeDeploy[CodeDeploy - Deployment]:::devops         CodeCommit --&gt; CodeBuild         CodeBuild --&gt; CodeDeploy         CodeDeploy --&gt; ELB     end      %% SECURITY     subgraph Security         IAM[AWS IAM]:::sec         Secrets[Secrets Manager]:::sec         GuardDuty[GuardDuty - Threat Detection]:::sec     end      %% OBSERVABILITY     subgraph Observability         CloudWatch[CloudWatch - Monitoring &amp; Logging]:::obs         CloudTrail[CloudTrail - Audit Logs]:::obs     end      %% CONNECTIONS TO MONITORING     RDS --&gt; CloudWatch     S3 --&gt; CloudWatch     DynamoDB --&gt; CloudWatch     IAM --&gt; GuardDuty     GuardDuty --&gt; CloudTrail"},{"location":"sec_cloud/aws-gcp-azure/#gcp-architecture","title":"GCP Architecture","text":"<p>GCP takes a developer-friendly, data-first approach, with a strong focus on analytics, AI/ML, and global networking. Services like BigQuery make it a go-to platform for large-scale analytics, while AI Platform integrates deeply with TensorFlow and Vertex AI for machine learning workflows. Its Kubernetes-first mindset is evident with GKE, widely considered one of the best managed Kubernetes services.</p> <p>A standout difference is GCP's global load balancing---offering worldwide traffic management from a single anycast IP, unlike AWS's region-based approach. This reduces complexity for multi-region apps. While GCP's service catalog is smaller than AWS and Azure, it is often seen as simpler and cleaner for greenfield projects, but it may lack the enterprise depth and hybrid-cloud features of Azure.</p> graph TD     accTitle: GCP architecture diagram     accDescr: GCP architecture diagram showing global infrastructure with regions and zones. User connects through Cloud DNS and Cloud CDN to Cloud Load Balancing, which routes to compute layer: Compute Engine VMs, GKE Kubernetes clusters, and Cloud Run serverless containers. Data layer contains Cloud SQL, Firestore NoSQL, Bigtable, and BigQuery analytics. DevOps flows from Cloud Source Repositories through Cloud Build to continuous deployment back to load balancer. Security managed by GCP IAM, Cloud KMS, and Security Command Centre. Observability through Cloud Monitoring and Cloud Logging.     subgraph GlobalInfra[\"Global Infrastructure\"]         GR1[GCP Regions]:::global --&gt; GR2[Zones]:::global     end      subgraph NetworkLayer[\"Networking\"]         VPC[VPC Network]:::net --&gt; Subnet1[Subnets]:::net         Subnet1 --&gt; Firewall[Firewall Rules]:::net     end      User[Developer/User] --&gt; CloudDNS[Cloud DNS]:::net     CloudDNS --&gt; CloudCDN[Cloud CDN]:::net     CloudCDN --&gt; LoadBalancer[Cloud Load Balancing]:::net      subgraph ComputeLayer[\"Compute\"]         Compute[Compute Engine VMs]:::compute         GKE[GKE Kubernetes]:::compute         CloudRun[Cloud Run Serverless]:::compute     end      LoadBalancer --&gt; Compute     LoadBalancer --&gt; GKE     LoadBalancer --&gt; CloudRun      subgraph DataLayer[\"Data\"]         CloudSQL[Cloud SQL]:::data         Firestore[Firestore NoSQL]:::data         Bigtable[Bigtable]:::data         BigQuery[BigQuery]:::data     end      Compute --&gt; CloudSQL     GKE --&gt; Firestore     CloudRun --&gt; Bigtable     GKE --&gt; BigQuery      subgraph DevOpsLayer[\"DevOps CICD\"]         SourceRepo[Cloud Source Repositories]:::devops --&gt; CloudBuild[Cloud Build]:::devops         CloudBuild --&gt; Deploy[Continuous Deploy]:::devops         Deploy --&gt; LoadBalancer     end      subgraph SecurityLayer[\"Security\"]         IAM[GCP IAM]:::sec         KMS[Cloud KMS]:::sec         SCC[Security Command Centre]:::sec     end      subgraph ObservabilityLayer[\"Observability\"]         Monitoring[Cloud Monitoring]:::obs         Logging[Cloud Logging]:::obs     end      CloudSQL --&gt; Monitoring     Firestore --&gt; Monitoring     Bigtable --&gt; Monitoring     IAM --&gt; SCC     SCC --&gt; Logging"},{"location":"sec_cloud/aws-gcp-azure/#azure-architecture","title":"Azure Architecture","text":"<p>Azure stands out for its deep Microsoft ecosystem integration, making it a natural choice for organizations already invested in Windows Server, Active Directory, and Microsoft 365. Its architecture supports hybrid-cloud setups exceptionally well through Azure Arc and ExpressRoute, enabling seamless connectivity between on-premises and cloud environments. For compute, it offers flexibility between VMs, App Service for PaaS, and AKS for container orchestration.</p> <p>Compared to AWS and GCP, Azure often leads in compliance certifications, enterprise contracts, and hybrid scenarios. However, its service naming conventions can be confusing, and it sometimes lags AWS in early adoption of new service categories. For enterprises looking for tight integration with Microsoft tools and hybrid capabilities, Azure is often the top pick.</p> graph TD     accTitle: Azure architecture diagram     accDescr: Azure architecture diagram with global regions and availability zones. User connects via Azure DNS and Front Door CDN to Azure Load Balancer and Application Gateway, routing to compute services: Virtual Machines, App Service PaaS, and Azure Kubernetes Service. Data layer includes Azure SQL Database, Cosmos DB NoSQL, and Blob Storage. DevOps pipeline flows from Azure Repos through Azure Pipelines build system to Release Management. Security provided by Azure Active Directory, Key Vault, and Microsoft Defender for Cloud. Observability through Azure Monitor, Log Analytics Workspace, and Security Centre.      %% GLOBAL INFRASTRUCTURE     subgraph Global Infrastructure         AR1[Azure Regions]:::global --&gt; AR2[Availability Zones]:::global     end      %% NETWORKING     subgraph Networking         VNet[Virtual Network]:::net --&gt; Subnet1[Public Subnet]:::net         VNet --&gt; Subnet2[Private Subnet]:::net         Subnet1 --&gt; NSG[Network Security Group]:::net     end      %% ENTRY FLOW     User[Developer/User] --&gt; AzureDNS[Azure DNS]:::net     AzureDNS --&gt; FrontDoor[Azure Front Door / CDN]:::net     FrontDoor --&gt; ALB[Azure Load Balancer]:::net     FrontDoor --&gt; AppGW[Application Gateway]:::net      %% COMPUTE     subgraph Compute         VMs[Azure Virtual Machines]:::compute         AppService[Azure App Service]:::compute         AKS[Azure Kubernetes Service]:::compute     end     ALB --&gt; VMs     AppGW --&gt; AppService     AppGW --&gt; AKS      %% DATABASE / STORAGE     subgraph Data         AzureSQL[Azure SQL DB]:::data         CosmosDB[Cosmos DB]:::data         Blob[Blob Storage]:::data     end     VMs --&gt; AzureSQL     AppService --&gt; CosmosDB     AKS --&gt; Blob      %% DEVOPS     subgraph DevOps / CI-CD         Repos[Azure Repos]:::devops --&gt; Pipelines[Azure Pipelines - Build]:::devops         Pipelines --&gt; Release[Release Management]:::devops         Release --&gt; AppGW     end      %% SECURITY     subgraph Security         AAD[Azure Active Directory]:::sec         KeyVault[Azure Key Vault]:::sec         Defender[Microsoft Defender for Cloud]:::sec     end      %% OBSERVABILITY     subgraph Observability         Monitor[Azure Monitor]:::obs         LogAnalytics[Log Analytics Workspace]:::obs         SecurityCentre[Security Centre]:::obs     end      AzureSQL --&gt; Monitor     CosmosDB --&gt; Monitor     Blob --&gt; Monitor     AAD --&gt; Defender     Defender --&gt; SecurityCentre  <p>2025.08.12</p>"},{"location":"sec_cloud/aws-gcp-azure_glossary/","title":"Cross-Platform Cloud &amp; DevOps Glossary (AWS, GCP, Azure)","text":"<p>A compact, comparative reference for core cloud services across AWS, Google Cloud Platform (GCP), and Microsoft Azure. Designed for modular documentation platforms, provenance-tagged workflows, and editorial clarity.</p>"},{"location":"sec_cloud/aws-gcp-azure_glossary/#compute-orchestration","title":"Compute &amp; Orchestration","text":"Function AWS GCP Azure Virtual Machines EC2 Compute Engine Virtual Machines Autoscaling Auto Scaling Instance Groups VM Scale Sets Kubernetes EKS GKE AKS Containers (non-K8s) ECS / Fargate Cloud Run ACI / Container Apps Serverless (FaaS) Lambda Cloud Functions Azure Functions"},{"location":"sec_cloud/aws-gcp-azure_glossary/#cicd-infrastructure-as-code","title":"CI/CD &amp; Infrastructure as Code","text":"Function AWS GCP Azure CI/CD Pipelines CodePipeline / CodeBuild Cloud Build / Deploy Azure DevOps / GitHub Actions IaC Native CloudFormation Deployment Manager ARM / Bicep IaC Universal Terraform Terraform Terraform"},{"location":"sec_cloud/aws-gcp-azure_glossary/#secrets-identity","title":"Secrets &amp; Identity","text":"Function AWS GCP Azure Secrets Management Secrets Manager / SSM Secret Manager Key Vault IAM IAM IAM Azure Active Directory"},{"location":"sec_cloud/aws-gcp-azure_glossary/#storage-data","title":"Storage &amp; Data","text":"Function AWS GCP Azure Object Storage S3 Cloud Storage Blob Storage Block Storage EBS Persistent Disks Managed Disks File Storage EFS Filestore Azure Files"},{"location":"sec_cloud/aws-gcp-azure_glossary/#monitoring-logging","title":"Monitoring &amp; Logging","text":"Function AWS GCP Azure Monitoring CloudWatch / X-Ray Cloud Monitoring / Trace Azure Monitor / App Insights Logging CloudWatch Logs Cloud Logging Log Analytics / Diagnostics"},{"location":"sec_cloud/aws-gcp-azure_glossary/#service-equivalents-diagrammatically","title":"Service Equivalents, Diagrammatically","text":"graph TD      accTitle: Multi-Cloud Service Equivalence Diagram: AWS, GCP, Azure      accDescr: This diagram compares core cloud services across AWS, Google Cloud Platform, and Microsoft Azure. Each cloud provider is grouped into a labeled subgraph, showing equivalent services for compute, containers, serverless, CI/CD, secrets, storage, and monitoring. Arrows indicate functional parity between platforms to support cross-cloud understanding and modular architecture.   %% AWS Subgraph   subgraph AWS [AWS]     AWS_EC2[EC2]     AWS_Lambda[Lambda]     AWS_EKS[EKS]     AWS_ECS[ECS / Fargate]     AWS_CodePipeline[CodePipeline]     AWS_CloudFormation[CloudFormation]     AWS_SecretsManager[Secrets Manager]     AWS_S3[S3]     AWS_EBS[EBS]     AWS_EFS[EFS]     AWS_CloudWatch[CloudWatch]     AWS_CloudWatchLogs[CloudWatch Logs]   end    %% GCP Subgraph   subgraph GCP [Google Cloud Platform]     GCP_ComputeEngine[Compute Engine]     GCP_CloudFunctions[Cloud Functions]     GCP_GKE[GKE]     GCP_CloudRun[Cloud Run]     GCP_CloudBuild[Cloud Build]     GCP_DeploymentManager[Deployment Manager]     GCP_SecretManager[Secret Manager]     GCP_CloudStorage[Cloud Storage]     GCP_PersistentDisk[Persistent Disk]     GCP_Filestore[Filestore]     GCP_CloudMonitoring[Cloud Monitoring]     GCP_CloudLogging[Cloud Logging]   end    %% Azure Subgraph   subgraph Azure [Microsoft Azure]     Azure_VM[Virtual Machines]     Azure_Functions[Azure Functions]     Azure_AKS[AKS]     Azure_ACI[ACI / Container Apps]     Azure_DevOps[Azure DevOps]     Azure_ARM[ARM / Bicep]     Azure_KeyVault[Key Vault]     Azure_BlobStorage[Blob Storage]     Azure_ManagedDisk[Managed Disks]     Azure_Files[Azure Files]     Azure_Monitor[Azure Monitor]     Azure_LogAnalytics[Log Analytics]   end    %% Equivalence Links   AWS_EC2 --&gt; GCP_ComputeEngine --&gt; Azure_VM   AWS_Lambda --&gt; GCP_CloudFunctions --&gt; Azure_Functions   AWS_EKS --&gt; GCP_GKE --&gt; Azure_AKS   AWS_ECS --&gt; GCP_CloudRun --&gt; Azure_ACI   AWS_CodePipeline --&gt; GCP_CloudBuild --&gt; Azure_DevOps   AWS_CloudFormation --&gt; GCP_DeploymentManager --&gt; Azure_ARM   AWS_SecretsManager --&gt; GCP_SecretManager --&gt; Azure_KeyVault   AWS_S3 --&gt; GCP_CloudStorage --&gt; Azure_BlobStorage   AWS_EBS --&gt; GCP_PersistentDisk --&gt; Azure_ManagedDisk   AWS_EFS --&gt; GCP_Filestore --&gt; Azure_Files   AWS_CloudWatch --&gt; GCP_CloudMonitoring --&gt; Azure_Monitor   AWS_CloudWatchLogs --&gt; GCP_CloudLogging --&gt; Azure_LogAnalytics"},{"location":"sec_cloud/aws-gcp-azure_glossary/#mnemonic-anchors","title":"Mnemonic Anchors","text":"<ul> <li>Kubernetes: EKS \u21c4 GKE \u21c4 AKS</li> <li>Serverless: Lambda \u21c4 Cloud Functions \u21c4 Azure Functions</li> <li>Storage: S3 \u21c4 Cloud Storage \u21c4 Blob Storage</li> <li>Secrets: Secrets Manager \u21c4 Secret Manager \u21c4 Key Vault</li> <li>CI/CD: CodePipeline \u21c4 Cloud Build \u21c4 Azure DevOps</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary/#editorial-notes","title":"\ud83d\uddc2 Editorial Notes","text":"<ul> <li>GCP\u2019s VPCs are global; AWS and Azure default to region-scoped.</li> <li>Azure tightly integrates with Windows Server and Active Directory.</li> <li>AWS IAM offers granular policy control; Azure AD excels in enterprise federation.</li> <li>Terraform remains the lingua franca for cross-cloud IaC.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/","title":"Cross-Platform Cloud &amp; DevOps Glossary (AWS, GCP, Azure) \u2014 Enhanced","text":"<p>Below is an enhanced (but still aiming to stay compact), side-by-side glossary of key cloud components and technologies across AWS, Google Cloud Platform (GCP), and Microsoft Azure. Emphasis on DevOps-related services and equivalents. Where a component is absent, that is noted.</p>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#how-content-is-organized","title":"How Content is Organized","text":"<ul> <li>Information on this page is grouped by common cloud platform categories: Compute, Storage, Networking, IAM, DevOps/CI\u00b7CD, Containers, Serverless, Databases, Monitoring &amp; Logging, Infrastructure as Code, Security &amp; Secrets, Messaging &amp; Eventing, CDN &amp; Edge, Machine Learning, Cost &amp; Governance.</li> <li>Each category lists the main components/service(s) of AWS, GCP, and Azure, with descriptions and notable differences.</li> </ul> <p>(Could end up being useful as a reference or translation table when moving architectures or writing runbooks.)</p>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#compute","title":"Compute","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#virtual-machines-instances","title":"Virtual Machines / Instances","text":"<ul> <li>AWS: EC2 (Elastic Compute Cloud) \u2014 general-purpose VMs, many instance types (spot, reserved, on-demand).</li> <li>GCP: Compute Engine \u2014 similar VM offering; strong live-migration capabilities.</li> <li>Azure: Virtual Machines \u2014 comparable VM service with deep Windows integration.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#autoscaling-instance-groups","title":"Autoscaling / Instance Groups","text":"<ul> <li>AWS: Auto Scaling Groups (ASG) \u2014 autoscale EC2 fleets (can integrate with EC2 Spot, mixed instances).</li> <li>GCP: Managed Instance Groups (MIGs) \u2014 autoscaled instance groups with regional support.</li> <li>Azure: Virtual Machine Scale Sets (VMSS) \u2014 autoscaling for VM fleets.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#bare-metal-dedicated-hosts","title":"Bare metal / dedicated hosts","text":"<ul> <li>AWS: EC2 Dedicated Hosts / Bare Metal instances.</li> <li>GCP: Bare Metal Solution (for some workloads).</li> <li>Azure: Azure Dedicated Host.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#containers-orchestration","title":"Containers &amp; Orchestration","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#managed-kubernetes","title":"Managed Kubernetes","text":"<ul> <li>AWS: EKS (Elastic Kubernetes Service) \u2014 managed control plane; many integrations with AWS services.</li> <li>GCP: GKE (Google Kubernetes Engine) \u2014 often viewed as the most mature managed Kubernetes experience.</li> <li>Azure: AKS (Azure Kubernetes Service) \u2014 native Azure AD integration.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#container-services-non-k8s","title":"Container Services (non-K8s)","text":"<ul> <li>AWS: ECS (Elastic Container Service) &amp; Fargate (serverless containers). ECS is AWS-specific; Fargate runs containers serverlessly on both ECS and EKS.</li> <li>GCP: Cloud Run \u2014 serverless containers (Knative-based); GKE Autopilot for managed node control.</li> <li>Azure: Azure Container Instances (ACI) \u2014 serverless single-container instances; Azure also offers container apps (Azure Container Apps) for serverless containers.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#container-registry","title":"Container Registry","text":"<ul> <li>AWS: ECR (Elastic Container Registry).</li> <li>GCP: Artifact Registry (formerly Container Registry + Artifact Registry consolidation).</li> <li>Azure: Azure Container Registry (ACR).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#serverless","title":"Serverless","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#functions-faas","title":"Functions (FaaS)","text":"<ul> <li>AWS: Lambda \u2014 event-driven functions with broad triggers and custom runtimes.</li> <li>GCP: Cloud Functions \u2014 event-driven; integrates tightly with Firebase and Pub/Sub.</li> <li>Azure: Azure Functions \u2014 strong tooling for .NET/Windows stacks; Durable Functions for workflows.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#serverless-containers-app-platforms","title":"Serverless containers / app platforms","text":"<ul> <li>AWS: AWS App Runner (PaaS for containers), Lambda (for small workloads).</li> <li>GCP: Cloud Run \u2014 first-class serverless containers.</li> <li>Azure: Azure Container Apps / App Service.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#storage-files","title":"Storage &amp; Files","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#object-storage","title":"Object Storage","text":"<ul> <li>AWS: S3 (Simple Storage Service) \u2014 durable object storage; ecosystem of lifecycle, events, and storage classes.</li> <li>GCP: Cloud Storage \u2014 similar object semantics (multi-region, nearline, coldline).</li> <li>Azure: Azure Blob Storage \u2014 object storage with tiers (Hot/Cool/Archive).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#block-storage","title":"Block Storage","text":"<ul> <li>AWS: EBS (Elastic Block Store) \u2014 persistent block devices for EC2.</li> <li>GCP: Persistent Disks \u2014 block storage for Compute Engine.</li> <li>Azure: Managed Disks \u2014 block storage for Azure VMs.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#files-shared-file-systems","title":"Files / Shared File Systems","text":"<ul> <li>AWS: EFS (Elastic File System) \u2014 NFS for Linux; FSx for Windows (Lustre, FSx for Windows File Server).</li> <li>GCP: Filestore \u2014 managed NFS for GCE/GKE.</li> <li>Azure: Azure Files \u2014 SMB/NFS share with managed storage; Azure NetApp Files for high-performance needs.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#networking","title":"Networking","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#virtual-networks","title":"Virtual Networks","text":"<ul> <li>AWS: VPC (Virtual Private Cloud) \u2014 subnets, route tables, security groups, NACLs.</li> <li>GCP: VPC Network \u2014 global VPC, subnets are regional.</li> <li>Azure: Virtual Network (VNet) \u2014 similar concept; supports peering.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#load-balancers-traffic-management","title":"Load Balancers / Traffic Management","text":"<ul> <li>AWS: ELB family \u2014 ALB (Layer 7), NLB (Layer 4), CLB (classic, legacy); Route\u00a053 for DNS &amp; routing policies.</li> <li>GCP: Cloud Load Balancing (HTTP(S), TCP/SSL, Internal LB); Cloud DNS.</li> <li>Azure: Azure Load Balancer (L4), Application Gateway (L7), Front Door (global L7 / CDN + WAF); Azure DNS.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#api-gateway","title":"API Gateway","text":"<ul> <li>AWS: Amazon API Gateway (REST/WebSocket) and HTTP API (lighter-weight).</li> <li>GCP: API Gateway and Endpoint (ESPv2/OpenAPI via Cloud Endpoints).</li> <li>Azure: Azure API Management (APIM).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#service-mesh-managed","title":"Service Mesh (managed)","text":"<ul> <li>AWS: no single managed first-party service, but AWS App Mesh exists as a managed control-plane compatible with Envoy.</li> <li>GCP: no first-class managed service mesh product; Anthos Service Mesh is available (based on Istio) for Anthos users.</li> <li>Azure: Azure Service Fabric (different paradigm) and can run Istio/Linkerd on AKS; no ubiquitous managed Istio across all customers.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#identity-access-management-iam","title":"Identity &amp; Access Management (IAM)","text":"<ul> <li>Identity &amp; Access<ul> <li>AWS: IAM (Identity and Access Management) for users/roles/policies; AWS Organizations for multi-account management; Cognito for app identity.</li> <li>GCP: Cloud IAM (resource-centric roles) and Cloud Identity / Identity Platform for user auth; Organizations / Folders for resource hierarchy.</li> <li>Azure: Azure Active Directory (Azure AD) \u2014 identity platform for users, apps, and service principals; Azure RBAC for resource permissions.</li> </ul> </li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#devops-ci-cd","title":"DevOps / CI \u00b7 CD","text":"<p>(Emphasis: build, test, deploy, artifact storage, release orchestration)</p>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#cicd-platforms-pipelines","title":"CI/CD Platforms / Pipelines","text":"<ul> <li>AWS: AWS CodePipeline (orchestration), CodeBuild (build), CodeDeploy (deployment), CodeCommit (git). These are AWS-native but many teams use third-party CI (GitHub Actions, Jenkins, GitLab CI, CircleCI).</li> <li>GCP: Cloud Build (build &amp; simple pipelines); Cloud Deploy (continuous delivery) is newer; many integrate with Cloud Source Repositories or GitHub.</li> <li>Azure: Azure DevOps Pipelines \u2014 full feature CI/CD, with Boards, Repos, Artifacts; also GitHub Actions (Microsoft owns GitHub) is widely used.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#artifact-repositories-package-management","title":"Artifact Repositories / Package Management","text":"<ul> <li>AWS: CodeArtifact for npm/Maven/PyPI packages; ECR for container images.</li> <li>GCP: Artifact Registry \u2014 packages &amp; container images.</li> <li>Azure: Azure Artifacts (part of Azure DevOps) and ACR for containers.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#buildrunner-infrastructure","title":"Build/Runner Infrastructure","text":"<ul> <li>AWS: CodeBuild or self-hosted runners on EC2/EKS; Batch for heavy workloads.</li> <li>GCP: Cloud Build pools or self-hosted runners.</li> <li>Azure: Hosted agents in Azure DevOps, self-hosted agents, or GitHub-hosted runners.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#release-feature-management","title":"Release &amp; Feature Management","text":"<ul> <li>AWS: no first-party feature flag service (third-party options common). AWS AppConfig is for feature/config rollout.</li> <li>GCP: no widely used managed feature flagging product; third-party tools used.</li> <li>Azure: Azure App Configuration for feature toggles; also third-party solutions.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#bluegreen-canary-support","title":"Blue/Green &amp; Canary Support","text":"<p>All three clouds support blue/green and canary deployments via their LB + deployment services, or through Kubernetes operators and traffic-shifting tools.</p> <ul> <li>AWS CodeDeploy has built-in blue/green hooks;</li> <li>GCP Cloud Deploy supports progressive delivery;</li> <li>Azure DevOps can orchestrate staged deployments.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#secret-management-for-devops","title":"Secret Management (for DevOps)","text":"<ul> <li>AWS: Secrets Manager (rotating secrets), Systems Manager Parameter Store (less feature-rich but free tier).</li> <li>GCP: Secret Manager \u2014 integrated with IAM and audit logging.</li> <li>Azure: Azure Key Vault \u2014 keys, secrets, certificates; integrates with Managed Identities.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#infrastructure-automation-devops-focused","title":"Infrastructure Automation (DevOps-focused)","text":"<ul> <li>See Infrastructure as Code section below (CloudFormation / Deployment Manager / ARM / Bicep / Terraform).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#infrastructure-as-code-iac","title":"Infrastructure as Code (IaC)","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#native-cloud-template-tools","title":"Native / Cloud Template Tools","text":"<ul> <li>AWS: CloudFormation \u2014 declarative templates (YAML/JSON), supports change sets, drift detection.</li> <li>GCP: Deployment Manager (less popular); Cloud Deployment Manager has limited adoption compared to Terraform.</li> <li>Azure: ARM Templates (JSON) and Bicep (domain-specific language, recommended over raw ARM).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#cross-cloud-de-facto-standard","title":"Cross-cloud / De-facto standard","text":"<ul> <li>Terraform (HashiCorp) \u2014 widely used across all three clouds; stateful, declarative; large provider ecosystem.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#config-management","title":"Config Management","text":"<ul> <li>AWS: supports Puppet, Chef, Ansible; AWS Systems Manager (SSM) includes State Manager and Run Command for remote execution.</li> <li>GCP: supports the same tools; OS Config provides patching and config management.</li> <li>Azure: supports Ansible, Chef, Puppet; Azure Automation for runbooks and update management.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#databases-managed","title":"Databases (Managed)","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#relational-rdbms","title":"Relational / RDBMS","text":"<ul> <li>AWS: RDS (MySQL, PostgreSQL, MariaDB, Oracle, SQL Server, Aurora). Aurora is Amazon's cloud-native, compatible DB with better performance. </li> <li>GCP: Cloud SQL (MySQL, PostgreSQL, SQL Server). Spanner for globally-distributed relational DB (unique differentiator).</li> <li>Azure: Azure SQL Database (managed SQL Server-compatible), Azure Database for PostgreSQL/MySQL/MariaDB.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#nosql-key-value","title":"NoSQL / Key-Value","text":"<ul> <li>AWS: DynamoDB \u2014 key-value / document DB with single-digit millisecond latency and global tables.</li> <li>GCP: Firestore / Datastore \u2014 document DB; Bigtable for wide-column workloads.</li> <li>Azure: Cosmos DB \u2014 multi-model (key-value, document, graph) with global distribution.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#data-warehousing","title":"Data Warehousing","text":"<ul> <li>AWS: Redshift \u2014 columnar data warehouse.</li> <li>GCP: BigQuery \u2014 serverless, highly scalable analytics engine (query-first model).</li> <li>Azure: Azure Synapse Analytics (formerly SQL Data Warehouse).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#monitoring-logging-observability","title":"Monitoring, Logging &amp; Observability","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#logging-log-management","title":"Logging / Log Management","text":"<ul> <li>AWS: CloudWatch Logs; CloudWatch for metrics and alarms; X-Ray for distributed tracing.</li> <li>GCP: Cloud Logging (formerly Stackdriver Logging); Cloud Monitoring for metrics; Cloud Trace for distributed tracing.</li> <li>Azure: Azure Monitor (Logs via Log Analytics), Application Insights for app monitoring and traces.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#apm-tracing-metrics","title":"APM / Tracing / Metrics","text":"<ul> <li>All providers offer first-party APM/tracing. Third-party options (Datadog, New Relic) are common in multi-cloud setups.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#managed-prometheus-metrics","title":"Managed Prometheus / Metrics","text":"<ul> <li>AWS: Managed Service for Prometheus + Managed Grafana.</li> <li>GCP: Managed Service for Prometheus (via Ops) and Cloud Monitoring supports Prometheus scraping.</li> <li>Azure: Azure Monitor for Containers and Azure Managed Grafana.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#security-compliance","title":"Security &amp; Compliance","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#waf-ddos-protection","title":"WAF / DDoS Protection","text":"<ul> <li>AWS: AWS WAF, Shield (Standard included, Advanced paid) for DDoS protection; Inspector for vulnerability assessment.</li> <li>GCP: Cloud Armor (WAF + DDoS protection); Security Command Center for posture.</li> <li>Azure: Azure WAF (part of Application Gateway and Front Door); Azure DDoS Protection; Azure Security Center (now part of Microsoft Defender for Cloud).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#key-management","title":"Key Management","text":"<ul> <li>AWS: KMS (Key Management Service) \u2014 manage encryption keys; integrates with CloudHSM.</li> <li>GCP: Cloud KMS.</li> <li>Azure: Key Vault + Managed HSM.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#policy-posture-management","title":"Policy &amp; Posture Management","text":"<ul> <li>AWS: AWS Config, Security Hub, IAM Access Analyzer.</li> <li>GCP: Security Command Center, Organization Policy Service.</li> <li>Azure: Azure Policy, Microsoft Defender for Cloud.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#messaging-streaming-eventing","title":"Messaging, Streaming &amp; Eventing","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#pubsub-messaging","title":"Pub/Sub / Messaging","text":"<ul> <li>AWS: SNS (Simple Notification Service) for pub/sub and fan-out; SQS for queuing.</li> <li>GCP: Pub/Sub \u2014 global messaging/streaming service.</li> <li>Azure: Service Bus (advanced messaging) and Event Grid for event routing; Queues for simple queuing.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#streaming-event-hub","title":"Streaming / Event Hub","text":"<ul> <li>AWS: Kinesis (Data Streams, Data Firehose) for streaming ingestion.</li> <li>GCP: Dataflow + Pub/Sub for streaming pipelines; Datastream for CDC.</li> <li>Azure: Event Hubs for big data streaming; Azure Stream Analytics for real-time processing.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#cdn-edge","title":"CDN &amp; Edge","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#content-delivery","title":"Content Delivery","text":"<ul> <li>AWS: CloudFront \u2014 global CDN, integrates with S3, Lambda@Edge.</li> <li>GCP: Cloud CDN \u2014 integrates with Cloud Storage and Load Balancing; Edge CDN partnerships exist.</li> <li>Azure: Azure CDN and Azure Front Door (global, L7, WAF-capable).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#edge-compute","title":"Edge Compute","text":"<ul> <li>AWS: Lambda@Edge, CloudFront Functions, Wavelength (carrier edge), IoT Greengrass for devices.</li> <li>GCP: Cloud Functions (limited) and partner edge offerings; Anthos on edge available for specific cases.</li> <li>Azure: Azure IoT Edge, Front Door + CDN; Azure Edge Zones.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#machine-learning-analytics","title":"Machine Learning &amp; Analytics","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#managed-ml-platforms","title":"Managed ML Platforms","text":"<ul> <li>AWS: SageMaker \u2014 end-to-end ML platform (training, deployment, feature store, model registry).</li> <li>GCP: Vertex AI \u2014 integrated platform for training, tuning, and deployment; strong AutoML lineage.</li> <li>Azure: Azure Machine Learning \u2014 model training and lifecycle management.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#big-data-etl","title":"Big Data / ETL","text":"<ul> <li>AWS: Glue (ETL), EMR (managed Hadoop/Spark).</li> <li>GCP: Dataflow (stream &amp; batch), Dataproc (managed Spark/Hadoop).</li> <li>Azure: Data Factory (ETL), Synapse (analytics + orchestration).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#governance-billing-cost-management","title":"Governance, Billing &amp; Cost Management","text":""},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#billing-cost-tools","title":"Billing &amp; Cost Tools","text":"<ul> <li>AWS: AWS Cost Explorer, Budgets, Trusted Advisor for recommendations.</li> <li>GCP: Cloud Billing reports and Cost Management tools.</li> <li>Azure: Cost Management + Billing (integrated with Azure Portal).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#multi-account-multi-project-governance","title":"Multi-account / Multi-project governance","text":"<ul> <li>AWS: Organizations, SCPs (Service Control Policies).</li> <li>GCP: Organizations, Folders, Projects with IAM policies.</li> <li>Azure: Management Groups and Subscriptions.</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#migration-hybrid-tools","title":"Migration &amp; Hybrid Tools","text":"<ul> <li> <p>Lift &amp; Shift / Migration</p> <ul> <li>AWS: Application Migration Service (MGN), Database Migration Service (DMS).</li> <li>GCP: Migrate for Compute Engine, Database Migration Service.</li> <li>Azure: Azure Migrate, Database Migration Service.</li> </ul> </li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#hybrid-multi-cloud-management","title":"Hybrid / Multi-cloud management","text":"<ul> <li>AWS: Outposts (on-premises AWS hardware), AWS Local Zones / Wavelength.</li> <li>GCP: Anthos \u2014 consistent K8s &amp; services across on-prem and other clouds.</li> <li>Azure: Azure Arc \u2014 manage on-prem &amp; multi-cloud resources via Azure control plane; Azure Stack (on-prem hardware).</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#comparative-notes-observations-devops-focused","title":"Comparative Notes &amp; Observations (DevOps-focused)","text":"<ul> <li>CI/CD &amp; DevOps tool parity: All three clouds offer pipeline/orchestration, build, and deployment services. Azure DevOps and GitHub Actions are particularly feature-rich for pipelines; GCP's Cloud Build and Cloud Deploy are improving quickly; AWS Code* tools are feature-complete but often seen as more tightly coupled to AWS.</li> <li>IaC reality: Terraform is the de-facto standard in multi-cloud organizations. Native templates (CloudFormation, ARM/Bicep, Deployment Manager) are used for deep cloud-specific automation or where an organisation prefers a single-cloud native solution.</li> <li>Secret &amp; identity management: Each cloud has secrets and key management; Azure AD is the dominant identity provider for enterprise Windows shops while AWS IAM remains resource-centric and flexible for service roles.</li> <li>Managed Kubernetes: GKE is often praised for reliability and upstream alignment; EKS is the AWS choice with strong integrations; AKS simplifies Azure authentication and Developer Experience for Microsoft stacks.</li> <li> <p>Where features are missing:</p> <ul> <li>Feature flags: No first-party feature flagging solution is universally available \u2014 clouds provide config rollout tools (AppConfig, App Configuration) but teams often use third-party feature-flag services (LaunchDarkly, Flagsmith).</li> <li>Managed full-service service mesh: While all clouds support service mesh tooling, a universal, fully-managed Istio-like control plane is not equally available as a single turnkey service to all customers. Anthos (GCP) and App Mesh (AWS) offer pieces but require setup/management.</li> </ul> </li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#quick-reference-common-devops-equivalents","title":"Quick Reference: Common DevOps Equivalents","text":"<ul> <li>CI/CD: CodePipeline (AWS) \u21c4 Cloud Build / Cloud Deploy (GCP) \u21c4 Azure DevOps Pipelines / GitHub Actions (Azure)</li> <li>Container registry: ECR \u21c4 Artifact Registry \u21c4 ACR</li> <li>Managed K8s: EKS \u21c4 GKE \u21c4 AKS</li> <li>Secrets: Secrets Manager / SSM Parameter Store \u21c4 Secret Manager \u21c4 Key Vault</li> <li>IaC native: CloudFormation \u21c4 Deployment Manager \u21c4 ARM/Bicep</li> <li>Object storage: S3 \u21c4 Cloud Storage \u21c4 Blob Storage</li> </ul>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#appendix-suggested-repo-layout-for-devops-docs","title":"Appendix \u2014 Suggested repo layout for DevOps docs","text":"<pre><code>/docs/\n  /architecture/\n  /runbooks/\n  /ci-cd/\n  /kubernetes/\n  /iac/\n  /monitoring/\n  /security/\n  glossary.md   &lt;-- this file\n</code></pre>"},{"location":"sec_cloud/aws-gcp-azure_glossary_enhanced/#expandable","title":"[expandable]","text":"<p>2025.08.09</p>"},{"location":"sec_cloud/jakarta-ee-azure/","title":"A Jakarta Enterprise Application on Azure","text":"<p>This is a helicopter-view look at what's involved in building and deploying an almost realistic Java (Jakarta EE / Java EE) enterprise web application on Azure + Azure DevOps:</p> <ul> <li>architecture and components (what pieces to build and why)</li> <li>Azure services to host them (options and tradeoffs)</li> <li>a typical CI/CD pipeline (YAML) for Maven/Gradle \u2192 container \u2192 deploy</li> <li>security, storage, DB, messaging, monitoring, infra-as-code notes</li> </ul> <p>In other words, technical mockumentation.</p>"},{"location":"sec_cloud/jakarta-ee-azure/#overview","title":"Overview","text":"<p>Goal: We're building a modern enterprise web application in Java EE (Jakarta EE) and deploying it to Microsoft Azure, with an automated CI/CD pipeline in Azure DevOps.</p> <p>Why this matters: This approach is used in real production systems \u2014 from banks to e-commerce \u2014 to deliver reliable, secure, and scalable services.</p>"},{"location":"sec_cloud/jakarta-ee-azure/#key-terms","title":"Key Terms","text":"<ul> <li>Java EE / Jakarta EE: Java technologies for building large business applications including security and APIs</li> <li>PaaS (Platform-as-a-Service): Cloud service that runs our app without managing servers</li> <li>AKS (Azure Kubernetes Service): Managed service to run apps inside Docker containers</li> <li>Lift-and-Shift: Moving our existing app to the cloud without rewriting it</li> <li>CI/CD (Continuous Integration / Continuous Deployment): Automated build, test, and deployment processes triggered by code changes</li> <li>Infrastructure as Code (IaC): Managing cloud resources using code files instead of manual portal actions</li> <li>Managed Identity: Azure identity for apps to securely access resources without passwords</li> <li>Blob Storage: Cloud storage for files like images and videos</li> <li>Service Bus: Messaging service for sending messages between app components</li> <li>Key Vault: Secure storage for passwords, certificates, and keys</li> </ul>"},{"location":"sec_cloud/jakarta-ee-azure/#typical-components-of-a-java-ee-app-on-azure","title":"Typical Components of a Java EE App on Azure","text":"<p>A Java EE app on Azure will likely comprise multiple, layered components:</p> Layer / Module Purpose Azure Service Example Example Technologies Presentation Layer User interface and API endpoints Azure App Service / AKS JAX-RS REST, JSF, Servlets Business Logic Layer Implements rules and workflows Same as above CDI, EJB Persistence Layer Reads/writes data from a database Azure SQL Database / MySQL / PostgreSQL JPA (Hibernate, EclipseLink) File/Object Storage Stores user uploads, documents Azure Blob Storage Azure Storage SDK for Java Messaging/Event Handling Asynchronous workflows and integrations Azure Service Bus, Event Grid JMS API Caching Layer Faster data retrieval Azure Cache for Redis Redis API Security &amp; Secrets Protects app and data Azure AD, Key Vault OAuth2, Managed Identity Monitoring Observes app health and performance Application Insights Azure Monitor SDK Infrastructure Provisioning &amp; configuration ARM/Bicep/Terraform IaC tools <p>The following is a visual representation of the component layers:</p> flowchart TD     accTitle: Layered architecture diagram showing Azure's 4 main layers     accDescr: Layered architecture diagram showing Azure's 4 main layers: Presentation Layer at top, Business Logic Layer below it, then Data &amp; Persistence layer containing Persistence Layer connected to Azure SQL/MySQL/PostgreSQL database and Azure Blob Storage for files. Alongside are Messaging &amp; Caching layer with Service Bus/Event Grid and Azure Cache for Redis, plus Security &amp; Monitoring layer with Azure AD/Key Vault and Application Insights. Arrows show data flow from Presentation to Business Logic to Persistence, with Business Logic also connecting to messaging, caching, security and monitoring components.     A[\"Presentation Layer\"]     B[\"Business Logic Layer\"]      subgraph DataLayer [\"Data &amp; Persistence\"]         C[\"Persistence Layer\"]         D[\"DB: Azure SQL/MySQL/PostgreSQL\"]         E[\"File/Obj Storage: Azure Blob Storage\"]     end      subgraph MessagingCache [\"Messaging &amp; Caching\"]         F[\"Msg/Event Handling: SvcBus/Event Grid\"]         G[\"Caching: Azure Cache for Redis\"]     end      subgraph CrossCutting [\"Security &amp; Monitoring\"]         H[\"Security/Secrets: Azure AD, Key Vault\"]         I[\"Monitoring: Application Insights\"]     end      A --&gt; B     B --&gt; C     C --&gt; D     C --&gt; E     B --&gt; F     B --&gt; G     B --&gt; H     B --&gt; I"},{"location":"sec_cloud/jakarta-ee-azure/#hosting-options-on-azure","title":"Hosting Options on Azure","text":"<p>Azure provides several hosting options, depending on the type and nature of the service or application. The following is a visual representation:</p> graph LR   accTitle: Simple decision flowchart showing Developer/BA choosing among 4 Azure hosting options   accDescr: Simple decision flowchart showing Developer/BA choosing among 4 Azure hosting options: Azure App Service for simple deployment, Azure Kubernetes Service AKS for complex apps, Azure Spring Apps for Spring projects, and Virtual Machines for legacy lift-and-shift.   User[\"Developer/BA\"] --&gt; Choice{\"Choose Hosting\"}   Choice --&gt; AppService[\"Azure App Service\"]   Choice --&gt; AKS[\"Azure Kubernetes Service (AKS)\"]   Choice --&gt; Spring[\"Azure Spring Apps\"]   Choice --&gt; VMs[\"Virtual Machines (VMs)\"]  Option What It Is Best For Trade-offs Azure App Service Managed web app hosting (Tomcat, JBoss, etc.) Simple deployment, minimal ops Less control over OS/runtime Azure Kubernetes Service (AKS) Full container orchestration Microservices, complex apps More setup/maintenance Azure Spring Apps Managed Spring Boot hosting Spring-heavy projects Limited if not using Spring VMs Full control server hosting Lift-and-shift of legacy Java EE Highest maintenance"},{"location":"sec_cloud/jakarta-ee-azure/#high-level-architecture","title":"High-Level Architecture","text":"<p>The following is a visual, high-level representation of an Azure Enterprise App's architecture:</p> flowchart LR     accTitle: Flowchart diagram showing an Azure Enterprise App's system architecture     accDescr: Flowchart diagram showing an Azure Enterprise App's system architecture: user browser connecting via HTTPS to Azure Front Door WAF for security and routing, which connects to App Service or AKS Ingress, then to Java EE App containing business and API layers. The Java EE App connects to 6 Azure services: SQL/MySQL/PostgreSQL database, Blob Storage for files, Cache for Redis, Service Bus/Event Grid for messaging, Key Vault for secrets, and Application Insights for monitoring. Data flows from browser through security layer to app, then branches to all backend services.   subgraph Client     Browser[\"User Browser / Mobile App\"]   end    subgraph Azure_Cloud     FrontDoor[\"Azure Front Door / WAF (Security &amp; Routing)\"]     API[\"App Service / AKS Ingress\"]     App[\"Java EE App (Business + API Layers)\"]     DB[\"Azure SQL / MySQL / PostgreSQL\"]     Blob[\"Azure Blob Storage\"]     Cache[\"Azure Cache for Redis\"]     Msg[\"Azure Service Bus / Event Grid\"]     KV[\"Azure Key Vault\"]     Insights[\"Application Insights\"]   end    Browser --&gt;|HTTPS| FrontDoor   FrontDoor --&gt; API   API --&gt; App   App --&gt; DB   App --&gt; Blob   App --&gt; Cache   App --&gt; Msg   App --&gt; KV   App --&gt; Insights"},{"location":"sec_cloud/jakarta-ee-azure/#cicd-pipeline-flow","title":"CI/CD Pipeline Flow","text":"graph TD     accTitle: CI/CD pipeline flowchart showing 5 phases     accDescr: CI/CD pipeline flowchart showing 5 phases: Development (Code, Commit &amp; Push), Continuous Integration (Build/Test/Scan, Create Artifact, Push to ACR), Staging &amp; Testing (Deploy to Staging, User Acceptance Testing, Approval), Continuous Deployment (Deploy to Production, Monitoring &amp; Feedback). Process flows linearly from development through testing to production deployment with feedback loop.      A[\"Developer Pushes Code\"]     B[\"Azure DevOps Pipeline\"]      subgraph BuildTest [\"Build &amp; Test\"]         C1[\"Build\"]         C2[\"Test\"]     end      subgraph QualitySec [\"Quality &amp; Security\"]         D1[\"Static Code Analysis\"]         D2[\"Security Scan\"]     end      subgraph PackageReg [\"Package &amp; Registry\"]         E[\"Package Artifacts\"]         F1[\"Build Docker Image\"]         F2[\"Push Image to ACR\"]     end      subgraph StagingEnv [\"Staging Environment\"]         G[\"Deploy to Staging\"]         H[\"Run Acceptance Tests\"]     end      subgraph ProdDeploy [\"Production Deployment\"]         I[\"Manual Approval Gate\"]         J[\"Deploy to Production\"]         K[\"Monitor via Application Insights\"]     end      A --&gt; B     B --&gt; C1     C1 --&gt; C2     C2 --&gt; D1     D1 --&gt; D2     D2 --&gt; E     E --&gt; F1     F1 --&gt; F2     F2 --&gt; G     G --&gt; H     H --&gt; I     I --&gt; J     J --&gt; K"},{"location":"sec_cloud/jakarta-ee-azure/#security-checklist","title":"Security Checklist","text":"Concern What to Ask / Check Authentication Is Azure Active Directory used for login? Authorization Are user roles &amp; permissions clearly defined? Secret Management Are passwords/API keys in Key Vault, not in code? Data in Transit Is HTTPS enforced? Data at Rest Are databases and blobs encrypted? Access Control Are Managed Identities used instead of stored credentials?"},{"location":"sec_cloud/jakarta-ee-azure/#typical-development-to-deployment-steps","title":"Typical Development-to-Deployment Steps","text":"<p>Here is the typical CI/CD flow used in most enterprise software shops today. While nothing in this pipeline is specific to Jakarta EE, it represents the standard approach for delivering reliably and at scale.</p> graph TD     accTitle: Diagram showing the CI/CD pipeline in detail     accDescr: Diagram showing the CI/CD pipeline in detail; a step-by-step process from Developer Pushes Code through Azure DevOps Pipeline to 4 main stages: Build &amp; Test (Build, Test), Quality &amp; Security (Static Code Analysis, Security Scan), Package &amp; Registry (Package Artifacts, Build Docker Image, Push to ACR), Staging Environment (Deploy to Staging, Run Acceptance Tests), ending with Production Deployment (Manual Approval Gate, Deploy to Production, Monitor via Application Insights). Each stage flows sequentially with colored groupings for different phases.     subgraph Development [\"Development Phase\"]         A[\"Code\"]         B[\"Commit &amp; Push\"]     end      subgraph CI [\"Continuous Integration\"]         C[\"CI Pipeline:Build, Test, Scan\"]         D[\"Create Artifact:WAR/JAR\"]         E[\"Push Image to ACR\"]     end      subgraph Staging [\"Staging &amp; Testing\"]         F[\"Deploy to Staging\"]         G[\"User AcceptanceTesting\"]         H[\"Approval\"]     end      subgraph CD [\"Continuous Deployment\"]         I[\"Deploy toProduction\"]         J[\"Monitoring &amp;Feedback\"]     end      A --&gt; B     B --&gt; C     C --&gt; D     D --&gt; E     E --&gt; F     F --&gt; G     G --&gt; H     H --&gt; I     I --&gt; J      classDef devStyle fill:#fff3cd,stroke:#f0ad4e,stroke-width:2px,color:#856404     classDef ciStyle fill:#d4edda,stroke:#28a745,stroke-width:2px,color:#155724     classDef stagingStyle fill:#f8d7da,stroke:#dc3545,stroke-width:2px,color:#721c24     classDef cdStyle fill:#cce5ff,stroke:#007bff,stroke-width:2px,color:#004085      class Development devStyle     class CI ciStyle     class Staging stagingStyle     class CD cdStyle"},{"location":"sec_cloud/jakarta-ee-azure/#storage-event-handling-patterns","title":"Storage &amp; Event Handling Patterns","text":"Need Service Example Store large files Azure Blob Storage User profile pictures Notify multiple systems Azure Event Grid New file upload triggers processing Process queued work Azure Service Bus Payment processing queue Handle high-volume telemetry Event Hubs IoT device streams"},{"location":"sec_cloud/jakarta-ee-azure/#pitfalls-to-avoid","title":"Pitfalls to Avoid","text":"<ul> <li>Skipping staging \u2014 Always test in a staging environment first.</li> <li>Storing secrets in code \u2014 Always use Key Vault + Managed Identity.</li> <li>Overengineering too soon \u2014 Start with PaaS (App Service) unless we truly need AKS.</li> <li>Ignoring monitoring \u2014 Without Application Insights, issues are harder to detect.</li> </ul> <p>2025.08.11</p>"},{"location":"sec_ehealth/","title":"eHealth","text":"<p>I'll just start accumulating some eHealth-related resources, references and cheat sheets here.</p> <ul> <li>SMART-on-FHIR and Integration \u2014 Quick Reference</li> <li>SMART-on-FHIR and Integration \u2014 UML Diagrams</li> <li>Ontario eHealth and HALO Integration Glossary</li> <li>Deep Dive / Workshop</li> </ul>"},{"location":"sec_ehealth/gloss_ontario_halo/","title":"Ontario eHealth &amp; HALO Integration Glossary","text":"<p>This glossary is tailored for Ontario HALO integration projects and should be used alongside official eHealth Ontario documentation and implementation guides.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#core-systems-platforms","title":"Core Systems &amp; Platforms","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#halo-health-assets-longitudinal-overview","title":"HALO (Health Assets Longitudinal Overview)","text":"<p>Ontario's centralized provincial health information system that aggregates patient health data from various sources across the province. HALO provides healthcare providers with a comprehensive view of patient information including medications, lab results, diagnostic imaging, hospital visits, and other clinical data.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#ehealth-ontario","title":"eHealth Ontario","text":"<p>The provincial agency responsible for managing Ontario's digital health infrastructure and systems, including HALO, the Provincial Client Registry, and various other health information exchange platforms.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#dhr-digital-health-record","title":"DHR (Digital Health Record)","text":"<p>Ontario's initiative to create comprehensive digital health records accessible across the healthcare system. HALO is a key component of this broader digital health strategy.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#connectingontario","title":"ConnectingOntario","text":"<p>The province's clinical information integration platform that enables the secure sharing of patient information across healthcare organizations, often working in conjunction with HALO.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#health-information-standards","title":"Health Information Standards","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#hl7-health-level-seven","title":"HL7 (Health Level Seven)","text":"<p>An international organization and set of standards for exchanging, integrating, sharing, and retrieving electronic health information. The \"Level Seven\" refers to the seventh layer of the OSI model (application layer).</p> <p>Key HL7 Versions: - HL7 v2.x: Legacy messaging standard still widely used for ADT (Admit/Discharge/Transfer), lab results, orders - HL7 v3: More structured, XML-based standard with limited adoption - HL7 CDA (Clinical Document Architecture): Standard for clinical document exchange</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#fhir-fast-healthcare-interoperability-resources","title":"FHIR (Fast Healthcare Interoperability Resources)","text":"<p>HL7's modern API-based standard for exchanging healthcare information electronically. FHIR combines the best features of previous HL7 standards while leveraging modern web technologies (RESTful APIs, JSON, XML).</p> <p>Key FHIR Concepts: - Resources: Basic units of data (e.g., Patient, Observation, Medication) - RESTful API: Uses standard HTTP methods (GET, POST, PUT, DELETE) - Profiles: Customizations of base resources for specific use cases - Extensions: Mechanism to add data elements not in the base specification</p> <p>FHIR Versions: - DSTU2 (Draft Standard for Trial Use 2) - STU3 (Standard for Trial Use 3) - R4 (Release 4) - Current stable version - R5 (Release 5) - Latest version</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#smart-on-fhir","title":"SMART-on-FHIR","text":"<p>A set of open specifications that enable secure, standards-based integration of apps with EHR systems using FHIR APIs. SMART stands for \"Substitutable Medical Applications, Reusable Technologies.\"</p> <p>Key Components: - OAuth 2.0: Authorization framework for secure access - FHIR API: Data access layer - Launch Contexts: EHR launch, standalone launch, backend services - Scopes: Define what data an app can access (e.g., patient/*.read, user/Observation.read)</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#cds-hooks-clinical-decision-support-hooks","title":"CDS Hooks (Clinical Decision Support Hooks)","text":"<p>A standard for integrating clinical decision support tools into EHR workflows at the point of care, often used alongside SMART-on-FHIR.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#data-exchange-messaging","title":"Data Exchange &amp; Messaging","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#adt-admit-discharge-transfer","title":"ADT (Admit, Discharge, Transfer)","text":"<p>Standard HL7 messages that communicate patient registration, admission, discharge, and transfer events between systems.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#mllp-minimal-lower-layer-protocol","title":"MLLP (Minimal Lower Layer Protocol)","text":"<p>The standard protocol for transmitting HL7 v2.x messages over TCP/IP networks.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#restful-api-representational-state-transfer","title":"RESTful API (Representational State Transfer)","text":"<p>Architectural style for designing networked applications, used extensively in FHIR. Uses standard HTTP methods and is stateless.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#json-javascript-object-notation","title":"JSON (JavaScript Object Notation)","text":"<p>Lightweight data interchange format commonly used in FHIR implementations alongside XML.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#xml-extensible-markup-language","title":"XML (eXtensible Markup Language)","text":"<p>Markup language used in HL7 v3, CDA documents, and some FHIR implementations.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#identifiers-registration","title":"Identifiers &amp; Registration","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#pcr-provincial-client-registry","title":"PCR (Provincial Client Registry)","text":"<p>Ontario's master patient index that maintains demographic information and assigns unique provincial identifiers to patients.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#hcn-health-card-number","title":"HCN (Health Card Number)","text":"<p>Ontario's health insurance number used to identify patients. Format: 10 digits followed by 2 letter version code.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#mrn-medical-record-number","title":"MRN (Medical Record Number)","text":"<p>Local patient identifier assigned by individual healthcare organizations.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#oid-object-identifier","title":"OID (Object Identifier)","text":"<p>Globally unique identifier used in health IT to identify organizations, systems, and coding systems (e.g., 2.16.840.1.113883.3.239 for Ontario).</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#ihi-individual-health-identifier","title":"IHI (Individual Health Identifier)","text":"<p>Unique patient identifier used across healthcare systems (term varies by jurisdiction).</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#clinical-terminologies-coding","title":"Clinical Terminologies &amp; Coding","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#snomed-ct-systematized-nomenclature-of-medicine-clinical-terms","title":"SNOMED CT (Systematized Nomenclature of Medicine Clinical Terms)","text":"<p>Comprehensive clinical terminology covering diseases, findings, procedures, organisms, and more. Used extensively in Canadian healthcare.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#loinc-logical-observation-identifiers-names-and-codes","title":"LOINC (Logical Observation Identifiers Names and Codes)","text":"<p>Standard for identifying laboratory and clinical observations. Essential for lab result interoperability.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#icd-10-ca-international-classification-of-diseases-10th-revision-canadian-enhancement","title":"ICD-10-CA (International Classification of Diseases, 10th Revision, Canadian Enhancement)","text":"<p>Standard for coding diagnoses in Canada, maintained by CIHI.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#cci-canadian-classification-of-health-interventions","title":"CCI (Canadian Classification of Health Interventions)","text":"<p>Canadian standard for classifying health interventions, maintained by CIHI.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#rxnorm","title":"RxNorm","text":"<p>Standardized nomenclature for clinical drugs, widely used in medication orders and prescriptions.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#din-drug-identification-number","title":"DIN (Drug Identification Number)","text":"<p>Health Canada's 8-digit identifier assigned to prescription and over-the-counter medications.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#security-privacy","title":"Security &amp; Privacy","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#phipa-personal-health-information-protection-act","title":"PHIPA (Personal Health Information Protection Act)","text":"<p>Ontario's privacy legislation governing the collection, use, and disclosure of personal health information.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#oauth-20","title":"OAuth 2.0","text":"<p>Industry-standard authorization protocol used in SMART-on-FHIR for delegating access without sharing credentials.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#saml-security-assertion-markup-language","title":"SAML (Security Assertion Markup Language)","text":"<p>XML-based standard for exchanging authentication and authorization data, often used in healthcare SSO.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#pki-public-key-infrastructure","title":"PKI (Public Key Infrastructure)","text":"<p>Encryption framework using digital certificates for secure communications in healthcare networks.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#audit-trail","title":"Audit Trail","text":"<p>Record of all access to and modifications of patient health information, required for compliance and security.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#consent-management","title":"Consent Management","text":"<p>System for recording and enforcing patient consent preferences for information sharing.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#integration-patterns-architecture","title":"Integration Patterns &amp; Architecture","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#hie-health-information-exchange","title":"HIE (Health Information Exchange)","text":"<p>System enabling the sharing of health information across organizational boundaries while maintaining data security and privacy.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#interface-engine","title":"Interface Engine","text":"<p>Middleware that facilitates communication between disparate healthcare systems, often handling HL7 v2.x message routing and transformation.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#empi-enterprise-master-patient-index","title":"EMPI (Enterprise Master Patient Index)","text":"<p>System that maintains unique patient identifiers across multiple systems within an organization or region.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#etl-extract-transform-load","title":"ETL (Extract, Transform, Load)","text":"<p>Process for moving data from source systems into data warehouses or integration platforms.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#api-gateway","title":"API Gateway","text":"<p>Component that manages API requests, handling authentication, rate limiting, and routing for backend services.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#microservices","title":"Microservices","text":"<p>Architectural pattern where applications are built as collections of small, independent services.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#clinical-data-types","title":"Clinical Data Types","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#ccr-continuity-of-care-record","title":"CCR (Continuity of Care Record)","text":"<p>Summary of patient health information covering diagnoses, medications, allergies, and care plan. Predecessor to CCD.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#ccd-continuity-of-care-document","title":"CCD (Continuity of Care Document)","text":"<p>HL7 CDA-based standard for patient summary documents, evolved from CCR.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#ereferral","title":"eReferral","text":"<p>Electronic referral from primary care to specialists, often including clinical context and supporting documents.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#dipacs-diagnostic-imaging-picture-archiving-and-communication-system","title":"DI/PACS (Diagnostic Imaging / Picture Archiving and Communication System)","text":"<p>Systems for storing and transmitting medical images (X-rays, CT, MRI, etc.).</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#lis-laboratory-information-system","title":"LIS (Laboratory Information System)","text":"<p>System managing laboratory workflows and results.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#cpoe-computerized-provider-order-entry","title":"CPOE (Computerized Provider Order Entry)","text":"<p>Electronic system for entering medical orders, replacing paper-based ordering.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#ontario-specific-components","title":"Ontario-Specific Components","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#one-id","title":"ONE ID","text":"<p>Ontario's provincial authentication service for healthcare providers accessing digital health systems.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#hrm-hospital-report-manager","title":"HRM (Hospital Report Manager)","text":"<p>Ontario's system for distributing hospital discharge summaries and other reports to community providers.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#olis-ontario-laboratories-information-system","title":"OLIS (Ontario Laboratories Information System)","text":"<p>Provincial repository containing laboratory test results from hospitals and community labs across Ontario.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#dis-diagnostic-imaging-services","title":"DIS (Diagnostic Imaging Services)","text":"<p>Ontario's provincial diagnostic imaging repository providing access to radiology reports and images.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#digital-health-drug-repository","title":"Digital Health Drug Repository","text":"<p>Provincial system containing medication dispensing records from Ontario pharmacies.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#dhdr-digital-health-drug-repository","title":"DHDR (Digital Health Drug Repository)","text":"<p>Alternative acronym for the medication dispensing repository.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#chris-client-health-and-related-information-system","title":"CHRIS (Client Health and Related Information System)","text":"<p>System used by public health units in Ontario for managing communicable disease information.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#implementation-concepts","title":"Implementation Concepts","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#use-case","title":"Use Case","text":"<p>Specific scenario describing how a system will be used, essential for defining integration requirements.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#user-story","title":"User Story","text":"<p>Agile development technique describing features from end-user perspective (format: \"As a [role], I want [feature] so that [benefit]\").</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#interoperability","title":"Interoperability","text":"<p>Ability of different systems to exchange and use information seamlessly.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#data-mapping","title":"Data Mapping","text":"<p>Process of matching fields between different data models or systems during integration.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#conformancecapability-statement","title":"Conformance/Capability Statement","text":"<p>FHIR resource describing what operations and resources a server supports.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#implementation-guide","title":"Implementation Guide","text":"<p>Detailed specification for implementing standards in specific contexts (e.g., Ontario FHIR Implementation Guide).</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#profile","title":"Profile","text":"<p>Constrained version of a FHIR resource specifying which elements are required, forbidden, or have specific bindings for a use case.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#validation","title":"Validation","text":"<p>Process of ensuring data conforms to specified standards and business rules.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#transformation","title":"Transformation","text":"<p>Converting data from one format to another (e.g., HL7 v2 to FHIR).</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#testing-quality-assurance","title":"Testing &amp; Quality Assurance","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#unit-testing","title":"Unit Testing","text":"<p>Testing individual components in isolation.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#integration-testing","title":"Integration Testing","text":"<p>Testing interactions between integrated components or systems.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#uat-user-acceptance-testing","title":"UAT (User Acceptance Testing)","text":"<p>Testing by end users to validate system meets business requirements.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#touchstone","title":"Touchstone","text":"<p>HL7's official FHIR testing platform for validating conformance.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#synthetic-data","title":"Synthetic Data","text":"<p>Artificially generated test data that mimics real patient data without privacy concerns.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#test-harness","title":"Test Harness","text":"<p>Framework for automated testing of integrations and interfaces.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#performance-operations","title":"Performance &amp; Operations","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#throughput","title":"Throughput","text":"<p>Volume of transactions or messages a system can process in a given time period.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#latency","title":"Latency","text":"<p>Time delay between request and response in system communications.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#sla-service-level-agreement","title":"SLA (Service Level Agreement)","text":"<p>Contract specifying expected performance, availability, and support levels.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#high-availability-ha","title":"High Availability (HA)","text":"<p>System design ensuring minimal downtime through redundancy and failover capabilities.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#scalability","title":"Scalability","text":"<p>System's ability to handle growing amounts of work or increased demand.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#monitoring","title":"Monitoring","text":"<p>Continuous observation of system performance, availability, and security.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#governance-standards-bodies","title":"Governance &amp; Standards Bodies","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#cihi-canadian-institute-for-health-information","title":"CIHI (Canadian Institute for Health Information)","text":"<p>National organization responsible for Canadian health data standards and reporting.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#infoway-canada-health-infoway","title":"Infoway (Canada Health Infoway)","text":"<p>Federal organization accelerating adoption of digital health solutions across Canada.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#hl7-international","title":"HL7 International","text":"<p>Global organization developing healthcare IT interoperability standards.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#hl7-canada","title":"HL7 Canada","text":"<p>Canadian affiliate of HL7 International, developing Canadian-specific implementation guides.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#fhir-foundation","title":"FHIR Foundation","text":"<p>Organization promoting and supporting FHIR adoption globally.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#ontariomd","title":"OntarioMD","text":"<p>Organization supporting primary care physicians' adoption of EMRs and digital health tools in Ontario.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#project-management-methodology","title":"Project Management &amp; Methodology","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#agile","title":"Agile","text":"<p>Iterative development methodology emphasizing flexibility and collaboration.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#scrum","title":"Scrum","text":"<p>Agile framework using sprints, daily standups, and defined roles (Product Owner, Scrum Master, Team).</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#sprint","title":"Sprint","text":"<p>Time-boxed iteration (typically 2-4 weeks) in Agile development.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#epic","title":"Epic","text":"<p>Large body of work broken down into smaller user stories.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#backlog","title":"Backlog","text":"<p>Prioritized list of features and requirements waiting to be implemented.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#mvp-minimum-viable-product","title":"MVP (Minimum Viable Product)","text":"<p>Version with minimum features needed to validate concept and gather feedback.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#additional-technical-terms","title":"Additional Technical Terms","text":""},{"location":"sec_ehealth/gloss_ontario_halo/#middleware","title":"Middleware","text":"<p>Software connecting different applications or systems to enable data exchange.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#web-service","title":"Web Service","text":"<p>Software system supporting interoperable machine-to-machine interaction over a network.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#soap-simple-object-access-protocol","title":"SOAP (Simple Object Access Protocol)","text":"<p>Messaging protocol for exchanging structured information in web services (older alternative to REST).</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#endpoint","title":"Endpoint","text":"<p>URL or URI where an API or service can be accessed.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#payload","title":"Payload","text":"<p>Actual data content in a message or transaction, excluding headers and metadata.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#schema","title":"Schema","text":"<p>Structure defining how data is organized, including data types and relationships.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#namespace","title":"Namespace","text":"<p>Context for identifiers to prevent naming conflicts (common in XML/HL7).</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#message-queue","title":"Message Queue","text":"<p>System for asynchronous message passing between applications, ensuring reliable delivery.</p>"},{"location":"sec_ehealth/gloss_ontario_halo/#quick-reference-common-fhir-resources-for-halo-integration","title":"Quick Reference: Common FHIR Resources for HALO Integration","text":"<ul> <li>Patient: Demographics and identifiers</li> <li>Observation: Lab results, vital signs, clinical observations</li> <li>MedicationRequest: Prescription orders</li> <li>MedicationStatement: Patient's medication history</li> <li>Condition: Diagnoses and health concerns</li> <li>Encounter: Hospital visits, appointments</li> <li>AllergyIntolerance: Patient allergies and adverse reactions</li> <li>Procedure: Procedures performed on patient</li> <li>DiagnosticReport: Lab reports, imaging reports</li> <li>DocumentReference: Clinical documents, discharge summaries</li> <li>Immunization: Vaccination records</li> <li>Organization: Healthcare facilities and providers</li> <li>Practitioner: Healthcare provider information</li> <li>Location: Physical locations within facilities</li> </ul>"},{"location":"sec_ehealth/quick_ref/","title":"SMART-on-FHIR and Integration Quick Reference","text":""},{"location":"sec_ehealth/quick_ref/#quick-start-checklist","title":"Quick Start Checklist","text":"<ul> <li>[ ] Register app with EHR/HALO</li> <li>[ ] Obtain <code>client_id</code> (and <code>client_secret</code> for confidential clients)</li> <li>[ ] Configure redirect URIs</li> <li>[ ] Discover SMART endpoints via <code>.well-known/smart-configuration</code></li> <li>[ ] Implement OAuth 2.0 authorization flow with PKCE</li> <li>[ ] Handle token lifecycle (refresh, expiration)</li> <li>[ ] Test in sandbox environment</li> </ul>"},{"location":"sec_ehealth/quick_ref/#discovery-endpoint","title":"Discovery Endpoint","text":"<pre><code>GET https://[fhir-base]/.well-known/smart-configuration\n</code></pre> <p>Returns: <pre><code>{\n  \"authorization_endpoint\": \"https://auth.example.com/authorize\",\n  \"token_endpoint\": \"https://auth.example.com/token\",\n  \"token_endpoint_auth_methods_supported\": [\"client_secret_basic\"],\n  \"registration_endpoint\": \"https://auth.example.com/register\",\n  \"scopes_supported\": [\"launch\", \"launch/patient\", \"patient/*.read\"],\n  \"response_types_supported\": [\"code\"],\n  \"capabilities\": [\n    \"launch-ehr\",\n    \"launch-standalone\",\n    \"client-public\",\n    \"client-confidential-symmetric\",\n    \"context-ehr-patient\",\n    \"sso-openid-connect\"\n  ]\n}\n</code></pre></p>"},{"location":"sec_ehealth/quick_ref/#authorization-flow","title":"Authorization Flow","text":""},{"location":"sec_ehealth/quick_ref/#step-1-authorization-request-ehr-launch","title":"Step 1: Authorization Request (EHR Launch)","text":"<pre><code>GET /authorize?\n  response_type=code&amp;\n  client_id=[YOUR_CLIENT_ID]&amp;\n  redirect_uri=[YOUR_REDIRECT_URI]&amp;\n  scope=launch/patient patient/*.read&amp;\n  state=[RANDOM_STRING]&amp;\n  aud=[FHIR_BASE_URL]&amp;\n  launch=[LAUNCH_TOKEN]&amp;\n  code_challenge=[SHA256_HASH]&amp;\n  code_challenge_method=S256\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#step-2-authorization-request-standalone-launch","title":"Step 2: Authorization Request (Standalone Launch)","text":"<pre><code>GET /authorize?\n  response_type=code&amp;\n  client_id=[YOUR_CLIENT_ID]&amp;\n  redirect_uri=[YOUR_REDIRECT_URI]&amp;\n  scope=patient/*.read openid fhirUser&amp;\n  state=[RANDOM_STRING]&amp;\n  aud=[FHIR_BASE_URL]&amp;\n  code_challenge=[SHA256_HASH]&amp;\n  code_challenge_method=S256\n</code></pre> <p>Note: No <code>launch</code> parameter in standalone!</p>"},{"location":"sec_ehealth/quick_ref/#step-3-token-exchange","title":"Step 3: Token Exchange","text":"<pre><code>POST /token\nContent-Type: application/x-www-form-urlencoded\nAuthorization: Basic [BASE64(client_id:client_secret)]  // For confidential clients\n\ngrant_type=authorization_code&amp;\ncode=[AUTH_CODE]&amp;\nredirect_uri=[YOUR_REDIRECT_URI]&amp;\nclient_id=[YOUR_CLIENT_ID]&amp;\ncode_verifier=[ORIGINAL_VERIFIER]\n</code></pre> <p>Response: <pre><code>{\n  \"access_token\": \"eyJ0eXAiOiJKV1Qi...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3600,\n  \"scope\": \"launch/patient patient/*.read\",\n  \"patient\": \"123456\",\n  \"encounter\": \"789\",\n  \"refresh_token\": \"eyJ0eXAiOiJKV1Qi...\",\n  \"id_token\": \"eyJ0eXAiOiJKV1Qi...\"  // If openid scope\n}\n</code></pre></p>"},{"location":"sec_ehealth/quick_ref/#step-4-token-refresh","title":"Step 4: Token Refresh","text":"<pre><code>POST /token\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=refresh_token&amp;\nrefresh_token=[REFRESH_TOKEN]&amp;\nclient_id=[YOUR_CLIENT_ID]&amp;\nscope=[ORIGINAL_SCOPES]\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#smart-scopes","title":"SMART Scopes","text":""},{"location":"sec_ehealth/quick_ref/#context-scopes","title":"Context Scopes","text":"Scope Description <code>launch</code> Indicates EHR launch <code>launch/patient</code> Request patient context at launch <code>launch/encounter</code> Request encounter context at launch"},{"location":"sec_ehealth/quick_ref/#patient-specific-scopes","title":"Patient-Specific Scopes","text":"Scope Description <code>patient/*.read</code> Read all resources for patient in context <code>patient/*.write</code> Write all resources for patient in context <code>patient/*.*</code> Read and write all resources <code>patient/Observation.read</code> Read only Observations for patient <code>patient/Condition.read</code> Read only Conditions for patient <code>patient/MedicationRequest.read</code> Read only MedicationRequests"},{"location":"sec_ehealth/quick_ref/#user-scopes","title":"User Scopes","text":"Scope Description <code>user/*.read</code> Read all resources user can access <code>user/*.write</code> Write all resources user can access <code>user/Practitioner.read</code> Read Practitioner resources"},{"location":"sec_ehealth/quick_ref/#system-scopes-backend-services","title":"System Scopes (Backend Services)","text":"Scope Description <code>system/*.read</code> Read all resources (backend only) <code>system/*.write</code> Write all resources (backend only)"},{"location":"sec_ehealth/quick_ref/#special-scopes","title":"Special Scopes","text":"Scope Description <code>openid</code> OpenID Connect authentication <code>fhirUser</code> Get FHIR resource reference for user <code>profile</code> Get user profile info <code>offline_access</code> Request refresh token <code>online_access</code> Token valid only while user online"},{"location":"sec_ehealth/quick_ref/#fhir-api-requests","title":"FHIR API Requests","text":""},{"location":"sec_ehealth/quick_ref/#read-single-resource","title":"Read Single Resource","text":"<pre><code>GET /Patient/123456\nAuthorization: Bearer [ACCESS_TOKEN]\nAccept: application/fhir+json\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#search-resources","title":"Search Resources","text":"<pre><code>GET /Observation?patient=123456&amp;category=vital-signs&amp;date=ge2024-01-01\nAuthorization: Bearer [ACCESS_TOKEN]\nAccept: application/fhir+json\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#common-search-parameters","title":"Common Search Parameters","text":"<ul> <li><code>patient</code> - Filter by patient</li> <li><code>_id</code> - Resource ID</li> <li><code>_lastUpdated</code> - Last update time</li> <li><code>_count</code> - Number of results</li> <li><code>_sort</code> - Sort order</li> <li><code>date</code> - Date range (use <code>ge</code>, <code>le</code>, <code>gt</code>, <code>lt</code> prefixes)</li> <li><code>code</code> - Filter by code</li> <li><code>status</code> - Filter by status</li> </ul>"},{"location":"sec_ehealth/quick_ref/#create-resource","title":"Create Resource","text":"<pre><code>POST /Observation\nAuthorization: Bearer [ACCESS_TOKEN]\nContent-Type: application/fhir+json\n\n{\n  \"resourceType\": \"Observation\",\n  \"status\": \"final\",\n  \"code\": {\n    \"coding\": [{\n      \"system\": \"http://loinc.org\",\n      \"code\": \"29463-7\",\n      \"display\": \"Body Weight\"\n    }]\n  },\n  \"subject\": { \"reference\": \"Patient/123456\" },\n  \"valueQuantity\": {\n    \"value\": 70,\n    \"unit\": \"kg\",\n    \"system\": \"http://unitsofmeasure.org\",\n    \"code\": \"kg\"\n  }\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#update-resource","title":"Update Resource","text":"<pre><code>PUT /Observation/789\nAuthorization: Bearer [ACCESS_TOKEN]\nContent-Type: application/fhir+json\n\n{\n  \"resourceType\": \"Observation\",\n  \"id\": \"789\",\n  ... [complete updated resource]\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#delete-resource","title":"Delete Resource","text":"<pre><code>DELETE /Observation/789\nAuthorization: Bearer [ACCESS_TOKEN]\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#pkce-implementation","title":"PKCE Implementation","text":""},{"location":"sec_ehealth/quick_ref/#generate-code-verifier","title":"Generate Code Verifier","text":"<pre><code>function generateCodeVerifier() {\n  const array = new Uint8Array(32);\n  crypto.getRandomValues(array);\n  return base64URLEncode(array);\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#generate-code-challenge","title":"Generate Code Challenge","text":"<pre><code>async function generateCodeChallenge(verifier) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(verifier);\n  const hash = await crypto.subtle.digest('SHA-256', data);\n  return base64URLEncode(new Uint8Array(hash));\n}\n\nfunction base64URLEncode(buffer) {\n  return btoa(String.fromCharCode(...buffer))\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#common-fhir-resources","title":"Common FHIR Resources","text":""},{"location":"sec_ehealth/quick_ref/#patient","title":"Patient","text":"<pre><code>{\n  \"resourceType\": \"Patient\",\n  \"id\": \"123\",\n  \"name\": [{ \"family\": \"Smith\", \"given\": [\"John\"] }],\n  \"birthDate\": \"1970-01-01\",\n  \"gender\": \"male\",\n  \"identifier\": [{\n    \"system\": \"http://hospital.org/mrn\",\n    \"value\": \"12345\"\n  }]\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#observation-vital-signs","title":"Observation (Vital Signs)","text":"<pre><code>{\n  \"resourceType\": \"Observation\",\n  \"status\": \"final\",\n  \"category\": [{\n    \"coding\": [{\n      \"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\",\n      \"code\": \"vital-signs\"\n    }]\n  }],\n  \"code\": {\n    \"coding\": [{\n      \"system\": \"http://loinc.org\",\n      \"code\": \"85354-9\",\n      \"display\": \"Blood pressure\"\n    }]\n  },\n  \"subject\": { \"reference\": \"Patient/123\" },\n  \"effectiveDateTime\": \"2024-01-15T10:30:00Z\",\n  \"component\": [\n    {\n      \"code\": {\n        \"coding\": [{\n          \"system\": \"http://loinc.org\",\n          \"code\": \"8480-6\",\n          \"display\": \"Systolic\"\n        }]\n      },\n      \"valueQuantity\": { \"value\": 120, \"unit\": \"mmHg\" }\n    },\n    {\n      \"code\": {\n        \"coding\": [{\n          \"system\": \"http://loinc.org\",\n          \"code\": \"8462-4\",\n          \"display\": \"Diastolic\"\n        }]\n      },\n      \"valueQuantity\": { \"value\": 80, \"unit\": \"mmHg\" }\n    }\n  ]\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#condition-diagnosis","title":"Condition (Diagnosis)","text":"<pre><code>{\n  \"resourceType\": \"Condition\",\n  \"clinicalStatus\": {\n    \"coding\": [{\n      \"system\": \"http://terminology.hl7.org/CodeSystem/condition-clinical\",\n      \"code\": \"active\"\n    }]\n  },\n  \"code\": {\n    \"coding\": [{\n      \"system\": \"http://snomed.info/sct\",\n      \"code\": \"73211009\",\n      \"display\": \"Diabetes mellitus\"\n    }]\n  },\n  \"subject\": { \"reference\": \"Patient/123\" },\n  \"onsetDateTime\": \"2020-03-15\"\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#medicationrequest","title":"MedicationRequest","text":"<pre><code>{\n  \"resourceType\": \"MedicationRequest\",\n  \"status\": \"active\",\n  \"intent\": \"order\",\n  \"medicationCodeableConcept\": {\n    \"coding\": [{\n      \"system\": \"http://www.nlm.nih.gov/research/umls/rxnorm\",\n      \"code\": \"206765\",\n      \"display\": \"Metformin 500 MG\"\n    }]\n  },\n  \"subject\": { \"reference\": \"Patient/123\" },\n  \"dosageInstruction\": [{\n    \"text\": \"Take 1 tablet twice daily with meals\",\n    \"timing\": {\n      \"repeat\": { \"frequency\": 2, \"period\": 1, \"periodUnit\": \"d\" }\n    },\n    \"doseAndRate\": [{\n      \"doseQuantity\": { \"value\": 1, \"unit\": \"tablet\" }\n    }]\n  }]\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#error-handling","title":"Error Handling","text":""},{"location":"sec_ehealth/quick_ref/#oauth-errors-authorization-callback","title":"OAuth Errors (Authorization Callback)","text":"<pre><code>const params = new URLSearchParams(window.location.search);\nif (params.has('error')) {\n  const error = params.get('error');\n  const description = params.get('error_description');\n\n  switch(error) {\n    case 'access_denied':\n      // User denied consent\n      break;\n    case 'invalid_scope':\n      // Requested scope not available\n      break;\n    case 'server_error':\n      // Server error occurred\n      break;\n  }\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#http-status-codes","title":"HTTP Status Codes","text":"Code Meaning Action 200 OK Success 201 Created Resource created successfully 400 Bad Request Fix request format/validation 401 Unauthorized Token expired/invalid - refresh or re-auth 403 Forbidden Insufficient scope - request more scopes 404 Not Found Resource doesn't exist 429 Too Many Requests Implement backoff, check Retry-After header 500 Server Error Retry with exponential backoff"},{"location":"sec_ehealth/quick_ref/#fhir-operationoutcome","title":"FHIR OperationOutcome","text":"<pre><code>{\n  \"resourceType\": \"OperationOutcome\",\n  \"issue\": [{\n    \"severity\": \"error\",\n    \"code\": \"invalid\",\n    \"diagnostics\": \"Missing required field: subject\",\n    \"location\": [\"Observation.subject\"]\n  }]\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#testing-tools","title":"Testing Tools","text":""},{"location":"sec_ehealth/quick_ref/#smart-app-launcher","title":"SMART App Launcher","text":"<p><pre><code>https://launch.smarthealthit.org/\n</code></pre> - Test EHR and standalone launches - Inspect requests/responses - Multiple patient scenarios</p>"},{"location":"sec_ehealth/quick_ref/#hapi-fhir-server-public-test-server","title":"HAPI FHIR Server (Public Test Server)","text":"<pre><code>https://hapi.fhir.org/baseR4\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#postman-collection","title":"Postman Collection","text":"<p>Import SMART-on-FHIR collection for API testing</p>"},{"location":"sec_ehealth/quick_ref/#curl-examples","title":"curl Examples","text":"<p>Get Patient: <pre><code>curl -H \"Authorization: Bearer YOUR_TOKEN\" \\\n     -H \"Accept: application/fhir+json\" \\\n     https://fhir.example.com/Patient/123\n</code></pre></p> <p>Search Observations: <pre><code>curl -H \"Authorization: Bearer YOUR_TOKEN\" \\\n     -H \"Accept: application/fhir+json\" \\\n     \"https://fhir.example.com/Observation?patient=123&amp;category=vital-signs\"\n</code></pre></p>"},{"location":"sec_ehealth/quick_ref/#halo-specific-gotchas","title":"HALO-Specific Gotchas","text":""},{"location":"sec_ehealth/quick_ref/#token-expiration","title":"Token Expiration","text":"<ul> <li>Default: 1 hour</li> <li>Action: Implement proactive refresh (e.g., at 55 minutes)</li> <li>Test: Verify refresh token flow works</li> </ul>"},{"location":"sec_ehealth/quick_ref/#rate-limiting","title":"Rate Limiting","text":"<ul> <li>Typical Limit: 100 requests/minute</li> <li>Headers: Check <code>X-RateLimit-*</code> headers</li> <li>Strategy: Implement exponential backoff and request batching</li> </ul>"},{"location":"sec_ehealth/quick_ref/#redirect-uri-matching","title":"Redirect URI Matching","text":"<ul> <li>Must match exactly (including trailing slash, protocol, port)</li> <li>Test: <code>https://app.com/callback</code> \u2260 <code>https://app.com/callback/</code></li> </ul>"},{"location":"sec_ehealth/quick_ref/#scope-requirements","title":"Scope Requirements","text":"<ul> <li>Some HALO deployments require specific scopes beyond SMART standard</li> <li>Check: HALO documentation for custom scopes</li> <li>Example: <code>halo/custom.read</code></li> </ul>"},{"location":"sec_ehealth/quick_ref/#tenant-isolation","title":"Tenant Isolation","text":"<ul> <li>Multi-tenant HALO deployments may require tenant ID in requests</li> <li>Header: <code>X-Tenant-ID: your-tenant-id</code></li> <li>Check: HALO configuration docs</li> </ul>"},{"location":"sec_ehealth/quick_ref/#fhir-profiles","title":"FHIR Profiles","text":"<ul> <li>HALO may use custom FHIR profiles with additional required fields</li> <li>Validate: Resources against HALO's CapabilityStatement</li> <li>Example: Custom extensions on Patient resource</li> </ul>"},{"location":"sec_ehealth/quick_ref/#security-best-practices","title":"Security Best Practices","text":""},{"location":"sec_ehealth/quick_ref/#do","title":"\u2705 DO","text":"<ul> <li>Use PKCE for all public clients</li> <li>Validate <code>state</code> parameter on callback</li> <li>Store tokens securely (httpOnly cookies, secure storage)</li> <li>Use HTTPS everywhere</li> <li>Implement token rotation</li> <li>Request minimal necessary scopes</li> <li>Set short token expiration times</li> <li>Log security events</li> <li>Validate JWT signatures</li> <li>Sanitize all user input</li> </ul>"},{"location":"sec_ehealth/quick_ref/#dont","title":"\u274c DON'T","text":"<ul> <li>Store tokens in localStorage (XSS vulnerable)</li> <li>Include tokens in URLs</li> <li>Share client credentials</li> <li>Use implicit flow (deprecated)</li> <li>Skip state validation</li> <li>Request more scopes than needed</li> <li>Ignore token expiration</li> <li>Log sensitive data (tokens, PHI)</li> <li>Trust client-side data without validation</li> </ul>"},{"location":"sec_ehealth/quick_ref/#quick-reference-urls","title":"Quick Reference URLs","text":"Resource URL SMART Spec http://hl7.org/fhir/smart-app-launch/ FHIR R4 Spec http://hl7.org/fhir/R4/ SMART Sandbox https://launch.smarthealthit.org/ OAuth 2.0 RFC https://tools.ietf.org/html/rfc6749 PKCE RFC https://tools.ietf.org/html/rfc7636 JWT RFC https://tools.ietf.org/html/rfc7519"},{"location":"sec_ehealth/quick_ref/#debugging-checklist","title":"Debugging Checklist","text":"<ul> <li>[ ] Verify SMART configuration endpoint is accessible</li> <li>[ ] Check redirect URI matches exactly</li> <li>[ ] Confirm client_id is correct</li> <li>[ ] Validate state parameter</li> <li>[ ] Check PKCE verifier/challenge match</li> <li>[ ] Verify scopes are supported by EHR</li> <li>[ ] Check token hasn't expired</li> <li>[ ] Confirm Authorization header format: <code>Bearer &lt;token&gt;</code></li> <li>[ ] Validate FHIR resource structure</li> <li>[ ] Check for CORS issues (browser console)</li> <li>[ ] Review server logs for detailed errors</li> <li>[ ] Test with known-good access token</li> <li>[ ] Verify network connectivity to FHIR server</li> <li>[ ] Check for rate limiting (429 responses)</li> <li>[ ] Validate aud parameter matches FHIR base URL</li> </ul>"},{"location":"sec_ehealth/quick_ref/#common-integration-patterns","title":"Common Integration Patterns","text":""},{"location":"sec_ehealth/quick_ref/#pattern-1-simple-patient-dashboard","title":"Pattern 1: Simple Patient Dashboard","text":"<ol> <li>EHR launches app with patient context</li> <li>App exchanges code for token (includes patient ID)</li> <li>App fetches: Patient, Observations, Conditions, Medications</li> <li>Display summary dashboard</li> </ol>"},{"location":"sec_ehealth/quick_ref/#pattern-2-clinical-decision-support","title":"Pattern 2: Clinical Decision Support","text":"<ol> <li>App requests <code>patient/*.read</code> and <code>user/Practitioner.read</code></li> <li>Fetch patient data and analyze</li> <li>Display recommendations based on clinical rules</li> <li>Optionally write back results with <code>patient/*.write</code></li> </ol>"},{"location":"sec_ehealth/quick_ref/#pattern-3-data-entry-app","title":"Pattern 3: Data Entry App","text":"<ol> <li>Request <code>patient/*.write</code> scope</li> <li>Validate input data against FHIR profiles</li> <li>POST/PUT resources to FHIR server</li> <li>Handle validation errors and retry</li> </ol>"},{"location":"sec_ehealth/quick_ref/#pattern-4-batch-data-analysis-backend","title":"Pattern 4: Batch Data Analysis (Backend)","text":"<ol> <li>Use system scopes (<code>system/*.read</code>)</li> <li>Authenticate with client credentials</li> <li>Query multiple patient records</li> <li>Perform population-level analytics</li> </ol>"},{"location":"sec_ehealth/quick_ref/#pro-tips","title":"Pro Tips","text":""},{"location":"sec_ehealth/quick_ref/#optimize-fhir-queries","title":"Optimize FHIR Queries","text":"<pre><code># Use _revinclude to get related resources in one call\nGET /Patient/123?_revinclude=Observation:patient\n\n# Use _elements to limit returned fields\nGET /Patient/123?_elements=id,name,birthDate\n\n# Use _summary for lightweight responses\nGET /Patient/123?_summary=true\n\n# Batch requests to reduce round trips\nPOST / \nContent-Type: application/fhir+json\n{\n  \"resourceType\": \"Bundle\",\n  \"type\": \"batch\",\n  \"entry\": [\n    { \"request\": { \"method\": \"GET\", \"url\": \"Patient/123\" } },\n    { \"request\": { \"method\": \"GET\", \"url\": \"Observation?patient=123\" } }\n  ]\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#token-management-strategy","title":"Token Management Strategy","text":"<pre><code>class TokenManager {\n  constructor() {\n    this.refreshThreshold = 300000; // 5 minutes before expiry\n  }\n\n  shouldRefresh(expiresAt) {\n    return Date.now() &gt;= (expiresAt - this.refreshThreshold);\n  }\n\n  async getValidToken() {\n    const tokenData = this.getStoredToken();\n\n    if (this.shouldRefresh(tokenData.expiresAt)) {\n      return await this.refreshToken();\n    }\n\n    return tokenData.accessToken;\n  }\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#error-recovery-pattern","title":"Error Recovery Pattern","text":"<pre><code>async function fhirRequestWithRetry(url, options, maxRetries = 3) {\n  for (let i = 0; i &lt; maxRetries; i++) {\n    try {\n      const response = await fetch(url, options);\n\n      if (response.status === 401) {\n        // Token expired, refresh and retry\n        await refreshToken();\n        continue;\n      }\n\n      if (response.status === 429) {\n        // Rate limited, wait and retry\n        const retryAfter = response.headers.get('Retry-After') || Math.pow(2, i);\n        await sleep(retryAfter * 1000);\n        continue;\n      }\n\n      if (response.ok) {\n        return await response.json();\n      }\n\n      throw new Error(`HTTP ${response.status}`);\n\n    } catch (error) {\n      if (i === maxRetries - 1) throw error;\n      await sleep(Math.pow(2, i) * 1000); // Exponential backoff\n    }\n  }\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#secure-token-storage-browser","title":"Secure Token Storage (Browser)","text":"<pre><code>// \u2705 Use httpOnly cookie (set by backend)\n// Backend sets cookie after token exchange\nres.cookie('smart_token', tokenData, {\n  httpOnly: true,\n  secure: true,\n  sameSite: 'strict',\n  maxAge: 3600000\n});\n\n// \u2705 Use sessionStorage for temporary data\nsessionStorage.setItem('patient_context', JSON.stringify({\n  patientId: tokenData.patient,\n  encounterId: tokenData.encounter\n}));\n\n// \u274c Never use localStorage for tokens (XSS vulnerable)\nlocalStorage.setItem('access_token', token); // DON'T DO THIS!\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#learning-path","title":"\ud83c\udf93 Learning Path","text":""},{"location":"sec_ehealth/quick_ref/#beginner","title":"Beginner","text":"<ol> <li>Understand OAuth 2.0 basics</li> <li>Set up SMART sandbox account</li> <li>Try EHR launch with sample app</li> <li>Read basic FHIR resources (Patient, Observation)</li> <li>Implement simple patient dashboard</li> </ol>"},{"location":"sec_ehealth/quick_ref/#intermediate","title":"Intermediate","text":"<ol> <li>Implement PKCE flow from scratch</li> <li>Handle token refresh logic</li> <li>Work with complex FHIR resources (Bundle, DocumentReference)</li> <li>Implement error handling and retry logic</li> <li>Add write capabilities</li> </ol>"},{"location":"sec_ehealth/quick_ref/#advanced","title":"Advanced","text":"<ol> <li>Implement backend services with system scopes</li> <li>Custom FHIR profiles and extensions</li> <li>Performance optimization (batching, caching)</li> <li>Production deployment and monitoring</li> <li>Security hardening and penetration testing</li> </ol>"},{"location":"sec_ehealth/quick_ref/#troubleshooting-guide","title":"Troubleshooting Guide","text":""},{"location":"sec_ehealth/quick_ref/#issue-invalid-redirect-uri","title":"Issue: \"Invalid redirect URI\"","text":"<p>Cause: URI mismatch between request and registration Solution:  - Check exact match including protocol, port, path, trailing slash - Verify registration in EHR app registry - Test: <code>https://app.com/callback</code> vs <code>https://app.com/callback/</code></p>"},{"location":"sec_ehealth/quick_ref/#issue-invalid-scope","title":"Issue: \"Invalid scope\"","text":"<p>Cause: Requested scope not supported by EHR Solution: - Check <code>.well-known/smart-configuration</code> for <code>scopes_supported</code> - Request only necessary scopes - Verify EHR supports SMART App Launch 2.0</p>"},{"location":"sec_ehealth/quick_ref/#issue-token-expired-immediately","title":"Issue: Token expired immediately","text":"<p>Cause: Clock skew between systems Solution: - Sync system clocks (use NTP) - Add buffer time when checking expiration - Implement proactive token refresh</p>"},{"location":"sec_ehealth/quick_ref/#issue-403-forbidden-on-fhir-request","title":"Issue: 403 Forbidden on FHIR request","text":"<p>Cause: Insufficient scope or patient context mismatch Solution: - Verify token includes required scope - Check patient ID matches context - Review OperationOutcome for details</p>"},{"location":"sec_ehealth/quick_ref/#issue-cors-errors-in-browser","title":"Issue: CORS errors in browser","text":"<p>Cause: Browser blocking cross-origin requests Solution: - Proxy FHIR requests through your backend - Configure CORS headers on FHIR server (if you control it) - Use server-side token exchange</p>"},{"location":"sec_ehealth/quick_ref/#issue-rate-limit-errors-429","title":"Issue: Rate limit errors (429)","text":"<p>Cause: Too many requests in short time Solution: - Implement exponential backoff - Use batch requests to consolidate calls - Cache responses when appropriate - Check <code>Retry-After</code> header</p>"},{"location":"sec_ehealth/quick_ref/#pre-production-checklist","title":"Pre-Production Checklist","text":""},{"location":"sec_ehealth/quick_ref/#security","title":"Security","text":"<ul> <li>[ ] PKCE implemented for public clients</li> <li>[ ] State parameter validated</li> <li>[ ] Tokens stored securely (not in localStorage)</li> <li>[ ] HTTPS enforced everywhere</li> <li>[ ] Client secret secured (if confidential client)</li> <li>[ ] Input validation on all user data</li> <li>[ ] JWT signatures verified</li> <li>[ ] Sensitive data not logged</li> </ul>"},{"location":"sec_ehealth/quick_ref/#functionality","title":"Functionality","text":"<ul> <li>[ ] Token refresh implemented</li> <li>[ ] Error handling for all API calls</li> <li>[ ] Offline mode (if applicable)</li> <li>[ ] Data validation before FHIR POST/PUT</li> <li>[ ] Loading states in UI</li> <li>[ ] Graceful degradation</li> </ul>"},{"location":"sec_ehealth/quick_ref/#performance","title":"Performance","text":"<ul> <li>[ ] Request batching where possible</li> <li>[ ] Response caching strategy</li> <li>[ ] Rate limiting handling</li> <li>[ ] Lazy loading of data</li> <li>[ ] Optimized FHIR queries (_elements, _summary)</li> </ul>"},{"location":"sec_ehealth/quick_ref/#compliance","title":"Compliance","text":"<ul> <li>[ ] HIPAA compliance review</li> <li>[ ] Patient consent flow</li> <li>[ ] Audit logging</li> <li>[ ] Data retention policy</li> <li>[ ] Privacy policy updated</li> <li>[ ] Terms of service</li> </ul>"},{"location":"sec_ehealth/quick_ref/#testing","title":"Testing","text":"<ul> <li>[ ] Unit tests for core logic</li> <li>[ ] Integration tests with FHIR server</li> <li>[ ] E2E tests for critical flows</li> <li>[ ] Security testing (OWASP Top 10)</li> <li>[ ] Load testing</li> <li>[ ] Cross-browser testing</li> </ul>"},{"location":"sec_ehealth/quick_ref/#monitoring","title":"Monitoring","text":"<ul> <li>[ ] Error tracking (e.g., Sentry)</li> <li>[ ] Performance monitoring (e.g., New Relic)</li> <li>[ ] Uptime monitoring</li> <li>[ ] Log aggregation</li> <li>[ ] Alert configuration</li> <li>[ ] Dashboard for key metrics</li> </ul>"},{"location":"sec_ehealth/quick_ref/#support-resources","title":"Support Resources","text":""},{"location":"sec_ehealth/quick_ref/#official-documentation","title":"Official Documentation","text":"<ul> <li>SMART App Launch: http://hl7.org/fhir/smart-app-launch/</li> <li>FHIR R4: http://hl7.org/fhir/R4/</li> <li>HL7 FHIR Chat: https://chat.fhir.org/</li> </ul>"},{"location":"sec_ehealth/quick_ref/#community","title":"Community","text":"<ul> <li>FHIR Zulip: https://chat.fhir.org/</li> <li>HL7 FHIR List: https://chat.fhir.org/#narrow/stream/179166-implementers</li> <li>Stack Overflow: Tag <code>fhir</code> or <code>smart-on-fhir</code></li> </ul>"},{"location":"sec_ehealth/quick_ref/#testing-tools_1","title":"Testing Tools","text":"<ul> <li>SMART App Launcher: https://launch.smarthealthit.org/</li> <li>HAPI Test Server: https://hapi.fhir.org/baseR4</li> <li>Inferno Test Suite: https://inferno.healthit.gov/</li> <li>Touchstone Testing: https://touchstone.aegis.net/</li> </ul>"},{"location":"sec_ehealth/quick_ref/#libraries","title":"Libraries","text":"<ul> <li>JavaScript: fhirclient.js (https://github.com/smart-on-fhir/client-js)</li> <li>Python: fhirclient (https://github.com/smart-on-fhir/client-py)</li> <li>Java: HAPI FHIR (https://hapifhir.io/)</li> <li>.NET: Firely SDK (https://fire.ly/)</li> </ul>"},{"location":"sec_ehealth/quick_ref/#halo-specific-quick-reference","title":"HALO-Specific Quick Reference","text":""},{"location":"sec_ehealth/quick_ref/#typical-halo-configuration","title":"Typical HALO Configuration","text":"<pre><code>{\n  fhirBaseUrl: 'https://fhir.halo.yourdomain.com',\n  authEndpoint: 'https://auth.halo.yourdomain.com/oauth2/authorize',\n  tokenEndpoint: 'https://auth.halo.yourdomain.com/oauth2/token',\n  clientId: 'your-registered-client-id',\n  scopes: ['launch/patient', 'patient/*.read', 'offline_access'],\n\n  // HALO-specific\n  tenantId: 'your-tenant-id',\n  apiVersion: 'R4',\n  rateLimit: 100, // requests per minute\n  tokenExpiry: 3600 // 1 hour\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#halo-common-headers","title":"HALO Common Headers","text":"<pre><code>{\n  'Authorization': 'Bearer YOUR_ACCESS_TOKEN',\n  'Accept': 'application/fhir+json',\n  'Content-Type': 'application/fhir+json',\n  'X-Tenant-ID': 'your-tenant-id', // If multi-tenant\n  'X-Request-ID': 'unique-request-id' // For tracing\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#halo-rate-limit-handling","title":"HALO Rate Limit Handling","text":"<pre><code>async function haloRequest(url, options) {\n  const response = await fetch(url, options);\n\n  // Check rate limit headers\n  const remaining = response.headers.get('X-RateLimit-Remaining');\n  const reset = response.headers.get('X-RateLimit-Reset');\n\n  if (response.status === 429) {\n    const retryAfter = response.headers.get('Retry-After') || 60;\n    console.warn(`Rate limited. Retry after ${retryAfter}s`);\n    await sleep(retryAfter * 1000);\n    return haloRequest(url, options); // Retry\n  }\n\n  return response;\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#halo-custom-extensions-example","title":"HALO Custom Extensions (Example)","text":"<pre><code>{\n  \"resourceType\": \"Patient\",\n  \"id\": \"123\",\n  \"extension\": [\n    {\n      \"url\": \"http://halo.example.com/fhir/StructureDefinition/patient-priority\",\n      \"valueString\": \"VIP\"\n    },\n    {\n      \"url\": \"http://halo.example.com/fhir/StructureDefinition/last-sync\",\n      \"valueDateTime\": \"2024-01-15T10:30:00Z\"\n    }\n  ],\n  \"name\": [{ \"family\": \"Smith\", \"given\": [\"John\"] }]\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#common-gotchas-solutions","title":"Common Gotchas &amp; Solutions","text":""},{"location":"sec_ehealth/quick_ref/#gotcha-1-token-in-url","title":"Gotcha #1: Token in URL","text":"<pre><code>// \u274c Do NOT expose token in URL/logs\nwindow.location.href = `/dashboard?token=${accessToken}`;\n\n// \u2705 Use secure storage\nsessionStorage.setItem('token_data', JSON.stringify(tokenData));\nwindow.location.href = '/dashboard';\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#gotcha-2-not-validating-state","title":"Gotcha #2: Not Validating State","text":"<pre><code>// \u274c CSRF \u2014 vulnerable\nconst code = new URLSearchParams(window.location.search).get('code');\nexchangeCodeForToken(code);\n\n// \u2705 Validate state\nconst params = new URLSearchParams(window.location.search);\nconst state = params.get('state');\nconst storedState = sessionStorage.getItem('oauth_state');\n\nif (state !== storedState) {\n  throw new Error('State mismatch - possible CSRF attack');\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#gotcha-3-hardcoded-fhir-base-url","title":"Gotcha #3: Hardcoded FHIR Base URL","text":"<pre><code>// \u274c Doesn't work across environments\nconst fhirBase = 'https://fhir.production.com';\n\n// \u2705 Discover dynamically\nconst iss = new URLSearchParams(window.location.search).get('iss');\nconst config = await fetch(`${iss}/.well-known/smart-configuration`)\n  .then(r =&gt; r.json());\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#gotcha-4-ignoring-token-expiration","title":"Gotcha #4: Ignoring Token Expiration","text":"<pre><code>// \u274c Do NOT use expired token\nconst token = sessionStorage.getItem('access_token');\nfetch(fhirUrl, { headers: { Authorization: `Bearer ${token}` } });\n\n// \u2705 Check expiration\nasync function getValidToken() {\n  const tokenData = JSON.parse(sessionStorage.getItem('token_data'));\n\n  if (Date.now() &gt;= tokenData.expiresAt - 60000) { // 1 min buffer\n    return await refreshToken();\n  }\n\n  return tokenData.accessToken;\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#gotcha-5-not-handling-bundle-pagination","title":"Gotcha #5: Not Handling Bundle Pagination","text":"<pre><code>// \u274c Do NOT get first page only\nconst response = await fetch(`${fhirBase}/Observation?patient=123`);\nconst bundle = await response.json();\nconst observations = bundle.entry; // Missing subsequent pages!\n\n// \u2705 Follow next links\nasync function getAllResources(initialUrl) {\n  let allResources = [];\n  let url = initialUrl;\n\n  while (url) {\n    const response = await fetch(url, { headers: await getHeaders() });\n    const bundle = await response.json();\n\n    if (bundle.entry) {\n      allResources.push(...bundle.entry.map(e =&gt; e.resource));\n    }\n\n    // Get next page URL\n    url = bundle.link?.find(l =&gt; l.relation === 'next')?.url;\n  }\n\n  return allResources;\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#gotcha-6-creating-resources-without-validation","title":"Gotcha #6: Creating Resources Without Validation","text":"<pre><code>// \u274c Missing required fields\nawait fetch(`${fhirBase}/Observation`, {\n  method: 'POST',\n  body: JSON.stringify({ resourceType: 'Observation' })\n  // Missing: status, code, subject - will fail!\n});\n\n// \u2705 Validate before sending\nfunction validateObservation(obs) {\n  const required = ['status', 'code', 'subject'];\n  const missing = required.filter(field =&gt; !obs[field]);\n\n  if (missing.length &gt; 0) {\n    throw new Error(`Missing required fields: ${missing.join(', ')}`);\n  }\n\n  if (!['final', 'amended', 'corrected'].includes(obs.status)) {\n    throw new Error(`Invalid status: ${obs.status}`);\n  }\n\n  return true;\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#code-snippets-library","title":"Code Snippets Library","text":""},{"location":"sec_ehealth/quick_ref/#complete-smart-launch-minimal","title":"Complete SMART Launch (Minimal)","text":"<pre><code>// 1. Handle launch\nconst urlParams = new URLSearchParams(window.location.search);\nconst iss = urlParams.get('iss');\nconst launch = urlParams.get('launch');\n\nif (iss &amp;&amp; launch) {\n  // Discover endpoints\n  const config = await fetch(`${iss}/.well-known/smart-configuration`)\n    .then(r =&gt; r.json());\n\n  // Generate PKCE\n  const verifier = generateRandomString(128);\n  const challenge = await sha256(verifier).then(base64url);\n  sessionStorage.setItem('verifier', verifier);\n\n  // Redirect to authorize\n  const authUrl = new URL(config.authorization_endpoint);\n  authUrl.searchParams.set('response_type', 'code');\n  authUrl.searchParams.set('client_id', 'my-app-id');\n  authUrl.searchParams.set('redirect_uri', window.location.origin + '/callback');\n  authUrl.searchParams.set('scope', 'launch/patient patient/*.read');\n  authUrl.searchParams.set('state', generateRandomString(32));\n  authUrl.searchParams.set('aud', iss);\n  authUrl.searchParams.set('launch', launch);\n  authUrl.searchParams.set('code_challenge', challenge);\n  authUrl.searchParams.set('code_challenge_method', 'S256');\n\n  window.location.href = authUrl.toString();\n}\n\n// 2. Handle callback\nconst code = urlParams.get('code');\nif (code) {\n  const verifier = sessionStorage.getItem('verifier');\n\n  const tokenResponse = await fetch(tokenEndpoint, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: new URLSearchParams({\n      grant_type: 'authorization_code',\n      code: code,\n      redirect_uri: window.location.origin + '/callback',\n      client_id: 'my-app-id',\n      code_verifier: verifier\n    })\n  }).then(r =&gt; r.json());\n\n  sessionStorage.setItem('token', tokenResponse.access_token);\n  sessionStorage.setItem('patient', tokenResponse.patient);\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#fhir-search-with-filters","title":"FHIR Search with Filters","text":"<pre><code>async function searchObservations(patientId, filters = {}) {\n  const url = new URL(`${fhirBase}/Observation`);\n\n  // Base filter\n  url.searchParams.set('patient', patientId);\n\n  // Optional filters\n  if (filters.category) {\n    url.searchParams.set('category', filters.category);\n  }\n\n  if (filters.dateFrom) {\n    url.searchParams.set('date', `ge${filters.dateFrom}`);\n  }\n\n  if (filters.dateTo) {\n    url.searchParams.set('date', `le${filters.dateTo}`);\n  }\n\n  if (filters.code) {\n    url.searchParams.set('code', filters.code);\n  }\n\n  if (filters.count) {\n    url.searchParams.set('_count', filters.count);\n  }\n\n  if (filters.sort) {\n    url.searchParams.set('_sort', filters.sort);\n  }\n\n  const token = await getValidToken();\n  const response = await fetch(url.toString(), {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Accept': 'application/fhir+json'\n    }\n  });\n\n  return response.json();\n}\n\n// Usage\nconst vitals = await searchObservations('123', {\n  category: 'vital-signs',\n  dateFrom: '2024-01-01',\n  count: 50,\n  sort: '-date'\n});\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#create-observation-helper","title":"Create Observation Helper","text":"<pre><code>function createObservation(patientId, code, value, unit) {\n  return {\n    resourceType: 'Observation',\n    status: 'final',\n    category: [{\n      coding: [{\n        system: 'http://terminology.hl7.org/CodeSystem/observation-category',\n        code: 'vital-signs',\n        display: 'Vital Signs'\n      }]\n    }],\n    code: {\n      coding: [{\n        system: 'http://loinc.org',\n        code: code.code,\n        display: code.display\n      }]\n    },\n    subject: {\n      reference: `Patient/${patientId}`\n    },\n    effectiveDateTime: new Date().toISOString(),\n    valueQuantity: {\n      value: value,\n      unit: unit,\n      system: 'http://unitsofmeasure.org',\n      code: unit\n    }\n  };\n}\n\n// Usage\nconst weightObs = createObservation('123', \n  { code: '29463-7', display: 'Body Weight' },\n  70, 'kg'\n);\n\nawait fetch(`${fhirBase}/Observation`, {\n  method: 'POST',\n  headers: {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/fhir+json'\n  },\n  body: JSON.stringify(weightObs)\n});\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#performance-optimization-tips","title":"Performance Optimization Tips","text":""},{"location":"sec_ehealth/quick_ref/#1-use-batch-requests","title":"1. Use Batch Requests","text":"<pre><code>const batchRequest = {\n  resourceType: 'Bundle',\n  type: 'batch',\n  entry: [\n    {\n      request: {\n        method: 'GET',\n        url: 'Patient/123'\n      }\n    },\n    {\n      request: {\n        method: 'GET',\n        url: 'Observation?patient=123&amp;category=vital-signs&amp;_count=10'\n      }\n    },\n    {\n      request: {\n        method: 'GET',\n        url: 'Condition?patient=123&amp;clinical-status=active'\n      }\n    }\n  ]\n};\n\nconst response = await fetch(`${fhirBase}`, {\n  method: 'POST',\n  headers: {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/fhir+json'\n  },\n  body: JSON.stringify(batchRequest)\n});\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#2-implement-caching","title":"2. Implement Caching","text":"<pre><code>class FHIRCache {\n  constructor(ttl = 300000) { // 5 minutes default\n    this.cache = new Map();\n    this.ttl = ttl;\n  }\n\n  set(key, value) {\n    this.cache.set(key, {\n      value,\n      expiresAt: Date.now() + this.ttl\n    });\n  }\n\n  get(key) {\n    const item = this.cache.get(key);\n    if (!item) return null;\n\n    if (Date.now() &gt; item.expiresAt) {\n      this.cache.delete(key);\n      return null;\n    }\n\n    return item.value;\n  }\n\n  clear() {\n    this.cache.clear();\n  }\n}\n\nconst cache = new FHIRCache();\n\nasync function getPatient(patientId) {\n  const cacheKey = `patient-${patientId}`;\n  const cached = cache.get(cacheKey);\n\n  if (cached) return cached;\n\n  const patient = await fetch(`${fhirBase}/Patient/${patientId}`, {\n    headers: { 'Authorization': `Bearer ${token}` }\n  }).then(r =&gt; r.json());\n\n  cache.set(cacheKey, patient);\n  return patient;\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#3-lazy-load-data","title":"3. Lazy Load Data","text":"<pre><code>// Load critical data first, defer non-critical\nasync function loadPatientDashboard(patientId) {\n  // Critical: Load immediately\n  const patient = await getPatient(patientId);\n  renderPatientHeader(patient);\n\n  // Non-critical: Load in background\n  Promise.all([\n    getRecentVitals(patientId),\n    getActiveConditions(patientId),\n    getActiveMedications(patientId)\n  ]).then(([vitals, conditions, medications]) =&gt; {\n    renderVitals(vitals);\n    renderConditions(conditions);\n    renderMedications(medications);\n  });\n}\n</code></pre>"},{"location":"sec_ehealth/quick_ref/#final-checklist-before-going-live","title":"Final Checklist Before Going Live","text":""},{"location":"sec_ehealth/quick_ref/#documentation","title":"Documentation","text":"<ul> <li>[ ] API integration documented</li> <li>[ ] Error handling documented</li> <li>[ ] Security measures documented</li> <li>[ ] Deployment process documented</li> <li>[ ] Incident response plan created</li> </ul>"},{"location":"sec_ehealth/quick_ref/#legal-compliance","title":"Legal &amp; Compliance","text":"<ul> <li>[ ] BAA signed with EHR vendor</li> <li>[ ] Privacy policy reviewed by legal</li> <li>[ ] Terms of service finalized</li> <li>[ ] HIPAA compliance verified</li> <li>[ ] State-specific requirements checked</li> </ul>"},{"location":"sec_ehealth/quick_ref/#operations","title":"Operations","text":"<ul> <li>[ ] Monitoring dashboards configured</li> <li>[ ] Alert thresholds set</li> <li>[ ] On-call rotation established</li> <li>[ ] Backup and recovery tested</li> <li>[ ] Disaster recovery plan documented</li> </ul>"},{"location":"sec_ehealth/quick_ref/#support","title":"Support","text":"<ul> <li>[ ] User documentation created</li> <li>[ ] Support team trained</li> <li>[ ] Escalation paths defined</li> <li>[ ] Known issues documented</li> <li>[ ] FAQ prepared</li> </ul> <p>Last Updated: <code>[date]</code> Version: <code>[version #]</code> SMART App Launch Version: <code>2.0.0 (&lt;&lt;v2.2.0 \u2014 Dec 2025?&gt;&gt;)</code> FHIR Version: <code>R4 (4.0.1)</code> <code>(&lt;&lt;5?&gt;&gt;)</code></p>"},{"location":"sec_ehealth/smart-fhir-visuals/","title":"SMART-on-FHIR and Integration \u2014 Visuals","text":""},{"location":"sec_ehealth/smart-fhir-visuals/#smart-on-fhir-ehr-launch-flow","title":"SMART-on-FHIR EHR Launch Flow","text":"<pre>b7757d1956847ed81f326e13c38e0c9aab39682e35fb8927a4c468ab47a38c548779ab00e69d4a3d7596d4bf941e2fb49fb65a5c383f25a1f17851071f8016fb</pre><pre>bf421496e51db55c393a8924a7f6679acbe0a3671ee1e9adce3ceb27ad3e17bb547c0698d197d64741472ab7af807f5407d34a725d72e72806f2d27464ba9405</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#smart-on-fhir-standalone-launch-flow","title":"SMART-on-FHIR Standalone Launch Flow","text":"<pre>46b0bd05e49fc7697e1087aa338d9348801e02ae51c77776a98ae528523fded1b4a39b74160d4be7fc9e4cb98bb468861486026e6f9be2da957c9a4c531c158b</pre><pre>a8d9e5aa8a30b828231afa2aea63109214e92d8ebd892011b143efd4077fa22974533070376c7df84e41c95baafa6a52f34787629f114b51eb97147085f6445c</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#smart-on-fhir-token-refresh-flow","title":"SMART-on-FHIR Token Refresh Flow","text":"<pre>c2ba04dc0fa401cc56eb48c5d2f526036e77901014c79f8f6299be9ab8a1050d229f629439efe880275d15754cadba90bf49465f65d58b727eb6ae8937156843</pre><pre>de48d9412de89c9477fbc30de26b7440af9bee54e3a4830e74976ecccf2841e15c1447d0042e9ce118eb6f40d16dd0c28534088b31a38d4e06ed0d48168095f8</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#pkce-flow","title":"PKCE Flow","text":"<p>The following diagram shows the PKCE (Proof Key for Code Exchange) flow.</p> <pre>da083b85ca0e09a1e3c2bead0a291aa372822ae771d23686bedf3bc8561fccd3c154c3d94aedb38195bd251c7e0ab7a090d687d10750a4322faa849fa5379ead</pre><pre>121d4ba3649eb595e12ad94f9caf65bdbbe848b3271a3d63bf71a502a3c7b2c1760a890c6e613f0a4f93ac00b44d47ebe1dd5770837944f9a3703805c9c0de31</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#smart-scope-hierarchy-and-contexts","title":"SMART Scope Hierarchy and Contexts","text":"<pre>05609b9ad12d5da0acc1c516c81673f529eb3729c60acca9f85b1acee9b17c9a80e6b8244adc1b420d17406aaf4d85409778a415117930564982d8a52c05b273</pre><pre>64e4da7fbe1cb071e077337de1d257cabc49bd4d336a87935cb4009237f3187a222f5a35dfbec57a9934c720a11c1cbb1697d998a4576e8987f45fafb8120c9c</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#smart-on-fhir-error-handling-patterns","title":"SMART-on-FHIR Error Handling Patterns","text":"<pre>178e78ff9a6921acb13194f4d3ad49a5639501999696011a395047f831d18395ad3e9433b8a38759ac8df32a56de67023bbfc96beab1db7f379db117b01ccdd6</pre><pre>39b841e14ab96da6437164328a483d47b3132e000a79c228ea03d87f2d246d4ecf6f0698e5c51987a04e4e4dd2648eb923b2c9eddbc92541845fd87112f9e97e</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#smart-on-fhir-architecture","title":"SMART-on-FHIR Architecture","text":""},{"location":"sec_ehealth/smart-fhir-visuals/#1-smart-on-fhir-architecture-system-context","title":"1. SMART-on-FHIR Architecture, System Context","text":"<pre>67251c1f7578417c764500549913128c42a1ab4027c3bf112a2419c27e845e08d5532db1e9c5d71c033c281c924e6d671a06a14fcbd5ce6eb71c7ffb706055ae</pre><pre>5375f49a487c18f9f764a454b0f58ec39dfe992b5847372568ab833dbdc62d24e43146d9143de6662781570b38c83d2cbf0e3b4784933622927a1412f27dd0eb</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#2-smart-on-fhir-architecture-authorization-server-components","title":"2. SMART-on-FHIR Architecture, Authorization Server Components","text":"<pre>6c656b2ac1c251dca7b50184c8143867850864a7f2ac11f7897f119b6a4ffca716dfb5d5a396b954cfdb60c4e65a970716e79ca0351fc56cd1ee6a38ef4f1060</pre><pre>d966f7da7112fe88749bf9af58f04d61cc0b307371d7ac7b2d83d1e6e63246bb4cf7d26d43531a95878d78a77f53b07c11d5704271089eb0e2148a46a38a4337</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#3-smart-on-fhir-architecture-fhir-api-server-components","title":"3. SMART-on-FHIR Architecture, FHIR API Server Components","text":"<pre>d19f3ff09c9a98d38f883eca5c9beab3582b884af90c68877237412f61f77ff085290cae387fdb55fbd6bcf73c995268b78a19822d9ddf4d5bf38931de49b9ee</pre><pre>41c35e2c099a843fdb169f16ef09395055863fa1d0d17dd34e5cb6716980413fe3fb788263e64843cd84c80b450b2ccbec29f446097687528f994d8e4fe23332</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#4-smart-on-fhir-architecture-smart-api-request-flow","title":"4. SMART-on-FHIR Architecture, Smart API Request Flow","text":"<pre>33aa2aff5486da52cb6bb8c01691036d792dce2a2b8f1ac1c4e3e3ac00dbae19ed2c44c91957880d65f3c64661635d5f91fc46447fc112b05f6d1a3cd03813f7</pre><pre>27e84c9269111239a64fcdfdaa9d5b77df8e3a3f2c4c6cab958be7f6d13874faf5dcd286f35262ddbeb96990c7b6205336aab5790da8bff8faa40ceaf2850dd7</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#5-smart-on-fhir-architecture-smart-discovery-process","title":"5. SMART-on-FHIR Architecture, SMART Discovery Process","text":"<pre>540236e323b66025ef8983c79866c280addcbc69ed3b060b20eb377a411fb5cc2e70d5b84a5bc66fc4f90c1aab7530e1e3320d66aa78c238f5bf31c2f396e126</pre><pre>0bff110a0dc4c5186a95a6d8ddee6c2e933a4489adf1bc9f19726d015a137e158af5184d726f1f4baa6df737ef1e2cc926d1d21c6244b1c9ce947bb50c0904c9</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#halo-smart-integration-architecture","title":"HALO SMART Integration Architecture","text":""},{"location":"sec_ehealth/smart-fhir-visuals/#1-halo-smart-integration-high-level-architecture-context","title":"1. HALO SMART Integration, High-Level Architecture (Context)","text":"<pre>b9ee8175d2dc69b2a875af673a7f3f7ead8193b6451a790fffcfa228e71cdcac88a8d4a2b98e88c0c4f528330b967037c2d074e253ed0162296dd268267383ae</pre><pre>08042aee58422b2c78189e7dafbd57d4cb6b19709a7e003f1c4ddd1e90c6417972d174846df9d74ce8b7a06f4246e50ded8c51c8351a4c12fc9764647edfef4d</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#2-halo-smart-integration-authentication-flow","title":"2. HALO SMART Integration, Authentication Flow","text":"<pre>016edfc82a404a22d083c7a5b37db88ad5044db8cd249d009ca7d9321222a6fa24297205d3420cc38816e2a1b3adb848d8d0d339536c35b3adc79850074b6f94</pre><pre>80585b0e55a603bf7c2d2decff2f3d3c42534a43e0da539c2cd94da2565b1c856096a05299d673665564847dac208e579e7d910770b4a36875344b02f5c09733</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#3-halo-smart-integration-data-access-flow","title":"3. HALO SMART Integration, Data Access Flow","text":"<pre>91f1188fffafcc95aed1be824f5ef68b494ed54c1eb942c79af09b105cf2837dd7a1c3b3a449c483001cbdda3c62ae579c3e7b7cf005405c092f58b408ff6805</pre><pre>bd4f08d79415ccbd9a02b457dada42708ff3e037fb11af21480e491a758f156a389c61b84b0f64c7cf311af55ea774a1db42c004f27a8500ab7e5c057bc8b50f</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#security-best-practices","title":"Security Best Practices","text":"<pre>6d52f6b22f8f8ce32952b8a0d09d0696635322f46982d0a426e15ddd7d9c66959d8e14ba46e5df49474019787ea07264968b317f5213399c36cdd7b52c74f6c8</pre><pre>2f2751ee1dd8f512cbff1fbc61e86ecaef64c6f1b97688acfea79785cd2cfbbd7b84bfd73d5ccbda403df251245a7e4b54f7e261159b568857ca80503486ab1a</pre>"},{"location":"sec_ehealth/smart-fhir-visuals/#smart-on-fhir-data-flow","title":"SMART-on-FHIR Data Flow","text":"<pre>b7e172d9779aac278ddf8151e163452d32598604828c6cb1dff68f8a135c6b96cc794f188c38316fc7605110828a458b8be995a168068be68f5c9e53e39106b3</pre><pre>cc34007aaffc1e395c51ca0379f47c7c79ec578756e406bbed4c61d173e6f1ce12e7395841e048ef7dd3260530e43622332181988b5f19980e6203ef77757510</pre>"},{"location":"sec_ehealth/sec_deepdive/","title":"Deep Dive into SMART-on-FHIR","text":"<p>This section comprises a set of topics for a comprehensive exploration of SMART-on-FHIR using a sample client app and a public sandbox, focusing on FHIR resources and their relationships.</p> <ul> <li>Foundations</li> <li>FHIR Data Fundamentals</li> <li>Resource Relationships</li> <li>FHIR APIs</li> <li>Advanced Concepts</li> <li>SMART Auth</li> <li>Hands-on Practice</li> <li>Wrap-up</li> </ul> <p></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-01-foundations/","title":"Foundations","text":"<p>This set of topics provides a foundational introduction to FHIR and SMART-on-FHIR.</p> <ul> <li>Overview</li> <li>Architecture</li> <li>FHIR Resources</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-01-foundations/deepdive-overview-fhir-arch/","title":"SMART-on-FHIR Architecture Overview","text":"graph TB     subgraph \"SMART App\"         A[Client Application]         B[SMART Library]     end      subgraph \"Authorization Server\"         C[OAuth 2.0 Server]         D[Launch Context]     end      subgraph \"FHIR Server\"         E[FHIR API]         F[Resource Store]     end      A --&gt; B     B --&gt; C     C --&gt; D     B --&gt; E     E --&gt; F      A -.-&gt;|1. Launch Request| C     C -.-&gt;|2. Authorization Code| B     B -.-&gt;|3. Token Exchange| C     C -.-&gt;|4. Access Token| B     B -.-&gt;|5. API Requests| E     E -.-&gt;|6. FHIR Resources| B"},{"location":"sec_ehealth/sec_deepdive/eh-dd-01-foundations/deepdive-overview-fhir-resources/","title":"Key FHIR Resources","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-01-foundations/deepdive-overview-fhir-resources/#1-patient-resource","title":"1. Patient Resource","text":"<p>The Patient resource is the cornerstone of FHIR, representing demographics and administrative information.</p> <p>Key Elements:</p> <ul> <li><code>identifier</code>: Business identifiers (MRN, SSN)</li> <li><code>name</code>: Human names with given/family</li> <li><code>telecom</code>: Contact information</li> <li><code>gender</code>: Administrative gender</li> <li><code>birthDate</code>: Date of birth</li> <li><code>address</code>: Physical addresses</li> <li><code>contact</code>: Emergency contacts</li> <li><code>communication</code>: Languages</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-01-foundations/deepdive-overview-fhir-resources/#2-observation-resource","title":"2. Observation Resource","text":"<p>Observations represent measurements, assessments, and findings.</p> <p>Categories:</p> <ul> <li>Vital signs (blood pressure, heart rate, temperature)</li> <li>Laboratory results (glucose, hemoglobin)</li> <li>Social history (smoking status)</li> <li>Imaging findings</li> </ul> <p>Key Elements:</p> <ul> <li><code>status</code>: registered, preliminary, final, amended</li> <li><code>category</code>: Classification of observation type</li> <li><code>code</code>: What was observed (LOINC codes)</li> <li><code>subject</code>: Reference to Patient</li> <li><code>effectiveDateTime</code>: When observation occurred</li> <li><code>value[x]</code>: Result value (Quantity, CodeableConcept, String)</li> </ul> <p>Observation Resource Structure</p> graph TD     Observation[Observation Resource]      Observation --&gt; Meta[meta]     Observation --&gt; Status[status]     Observation --&gt; Category[category]     Observation --&gt; Code[code]     Observation --&gt; Subject[subject]     Observation --&gt; Encounter[encounter]     Observation --&gt; Effective[effective DateTime/Period]     Observation --&gt; Value[value X]     Observation --&gt; Interpretation[interpretation]     Observation --&gt; Reference[referenceRange]      Code --&gt; CodeSystem[system: LOINC]     Code --&gt; CodeCode[code]     Code --&gt; CodeDisplay[display]      Subject --&gt; SubjectRef[reference: Patient/123]      Value --&gt; ValueQuantity[valueQuantity]     Value --&gt; ValueConcept[valueCodeableConcept]     Value --&gt; ValueString[valueString]     Value --&gt; ValueBoolean[valueBoolean]      ValueQuantity --&gt; VQValue[value]     ValueQuantity --&gt; VQUnit[unit]     ValueQuantity --&gt; VQSystem[system: UCUM]      Reference --&gt; RefLow[low]     Reference --&gt; RefHigh[high]"},{"location":"sec_ehealth/sec_deepdive/eh-dd-01-foundations/deepdive-overview-fhir-resources/#3-condition-resource","title":"3. Condition Resource","text":"<p>Conditions represent diagnoses, problems, or clinical conditions.</p> <p>Key Elements:</p> <ul> <li><code>clinicalStatus</code>: active, inactive, resolved</li> <li><code>verificationStatus</code>: confirmed, provisional, differential</li> <li><code>category</code>: problem-list-item, encounter-diagnosis</li> <li><code>severity</code>: Subjective severity (mild, moderate, severe)</li> <li><code>code</code>: Identification of condition (SNOMED CT, ICD-10)</li> <li><code>subject</code>: Patient reference</li> <li><code>encounter</code>: Context of condition</li> <li><code>onset[x]</code>: When condition began</li> <li><code>abatement[x]</code>: When condition resolved</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-01-foundations/deepdive-overview-fhir-resources/#4-medicationrequest-resource","title":"4. MedicationRequest Resource","text":"<p>Represents an order or request for medication.</p> <p>Key Elements:</p> <ul> <li><code>status</code>: active, on-hold, cancelled, completed</li> <li><code>intent</code>: proposal, plan, order</li> <li><code>medication[x]</code>: What medication (CodeableConcept or Reference)</li> <li><code>subject</code>: Patient reference</li> <li><code>authoredOn</code>: When request was created</li> <li><code>requester</code>: Who ordered the medication</li> <li><code>dosageInstruction</code>: How medication should be taken</li> <li><code>dispenseRequest</code>: Dispensing details</li> </ul> <p>Medication Workflow Resources</p> graph LR     MR[MedicationRequest]     MD[MedicationDispense]     MA[MedicationAdministration]     MS[MedicationStatement]     Med[Medication]      MR --&gt;|prescribes| Med     MR --&gt;|leads to| MD     MD --&gt;|dispenses| Med     MD --&gt;|leads to| MA     MA --&gt;|administers| Med     MS --&gt;|documents| Med      Patient[Patient] -.-&gt;|subject| MR     Patient -.-&gt;|subject| MD     Patient -.-&gt;|subject| MA     Patient -.-&gt;|subject| MS      Practitioner[Practitioner] -.-&gt;|requester| MR     Practitioner -.-&gt;|performer| MD     Practitioner -.-&gt;|performer| MA"},{"location":"sec_ehealth/sec_deepdive/eh-dd-01-foundations/deepdive-overview-fhir-resources/#5-encounter-resource","title":"5. Encounter Resource","text":"<p>Represents interactions between patient and healthcare provider.</p> <p>Types:</p> <ul> <li>ambulatory (outpatient)</li> <li>emergency</li> <li>inpatient</li> <li>home health</li> <li>virtual</li> </ul> <p>Key Elements:</p> <ul> <li><code>status</code>: planned, arrived, in-progress, finished</li> <li><code>class</code>: Classification of encounter</li> <li><code>type</code>: Specific type of encounter</li> <li><code>subject</code>: Patient reference</li> <li><code>participant</code>: Healthcare providers involved</li> <li><code>period</code>: Start and end time</li> <li><code>reasonCode</code>: Why encounter occurred</li> <li><code>diagnosis</code>: Diagnoses relevant to encounter</li> <li><code>hospitalization</code>: Details if admitted</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-01-foundations/deepdive-overview/","title":"Overview of SMART-on-FHIR","text":"<p>SMART (Substitutable Medical Applications, Reusable Technologies) on FHIR is an open standard that enables third-party applications to integrate with Electronic Health Record (EHR) systems using the HL7 FHIR (Fast Healthcare Interoperability Resources) specification.</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/","title":"FHIR Data Fundamentals","text":"<p>This set of topics introduces basic information on FHIR data.</p> <ul> <li>FHIR Data Types</li> <li>Common FHIR Code Systems</li> <li>FHIR Resource Cardinality</li> <li>Complete Example Resource</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/deepdive-complete-resource-example/","title":"Complete Example Resource","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/deepdive-complete-resource-example/#complete-fhir-resource-example","title":"Complete FHIR Resource Example","text":"<pre><code>{\n  \"resourceType\": \"Patient\",\n  \"id\": \"example-patient-001\",\n  \"meta\": {\n    \"versionId\": \"3\",\n    \"lastUpdated\": \"2024-10-15T10:30:00Z\",\n    \"profile\": [\n      \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient\"\n    ],\n    \"tag\": [\n      {\n        \"system\": \"http://terminology.hl7.org/CodeSystem/v3-ActReason\",\n        \"code\": \"HTEST\",\n        \"display\": \"test health data\"\n      }\n    ]\n  },\n  \"text\": {\n    \"status\": \"generated\",\n    \"div\": \"&lt;div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"&gt;John Smith, Male, DOB: 1987-02-20&lt;/div&gt;\"\n  },\n  \"extension\": [\n    {\n      \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race\",\n      \"extension\": [\n        {\n          \"url\": \"ombCategory\",\n          \"valueCoding\": {\n            \"system\": \"urn:oid:2.16.840.1.113883.6.238\",\n            \"code\": \"2106-3\",\n            \"display\": \"White\"\n          }\n        },\n        {\n          \"url\": \"text\",\n          \"valueString\": \"White\"\n        }\n      ]\n    },\n    {\n      \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity\",\n      \"extension\": [\n        {\n          \"url\": \"ombCategory\",\n          \"valueCoding\": {\n            \"system\": \"urn:oid:2.16.840.1.113883.6.238\",\n            \"code\": \"2186-5\",\n            \"display\": \"Not Hispanic or Latino\"\n          }\n        },\n        {\n          \"url\": \"text\",\n          \"valueString\": \"Not Hispanic or Latino\"\n        }\n      ]\n    },\n    {\n      \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex\",\n      \"valueCode\": \"M\"\n    }\n  ],\n  \"identifier\": [\n    {\n      \"use\": \"usual\",\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n            \"code\": \"MR\",\n            \"display\": \"Medical Record Number\"\n          }\n        ]\n      },\n      \"system\": \"http://hospital.smarthealthit.org\",\n      \"value\": \"MRN123456\",\n      \"period\": {\n        \"start\": \"2020-01-01\"\n      },\n      \"assigner\": {\n        \"display\": \"Smart Health IT Hospital\"\n      }\n    },\n    {\n      \"use\": \"official\",\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n            \"code\": \"SS\",\n            \"display\": \"Social Security Number\"\n          }\n        ]\n      },\n      \"system\": \"http://hl7.org/fhir/sid/us-ssn\",\n      \"value\": \"123-45-6789\"\n    }\n  ],\n  \"active\": true,\n  \"name\": [\n    {\n      \"use\": \"official\",\n      \"family\": \"Smith\",\n      \"given\": [\n        \"John\",\n        \"Robert\"\n      ],\n      \"prefix\": [\n        \"Mr.\"\n      ],\n      \"period\": {\n        \"start\": \"1987-02-20\"\n      }\n    },\n    {\n      \"use\": \"nickname\",\n      \"given\": [\n        \"Johnny\"\n      ]\n    }\n  ],\n  \"telecom\": [\n    {\n      \"system\": \"phone\",\n      \"value\": \"+1-555-123-4567\",\n      \"use\": \"home\",\n      \"rank\": 1\n    },\n    {\n      \"system\": \"phone\",\n      \"value\": \"+1-555-987-6543\",\n      \"use\": \"mobile\",\n      \"rank\": 2\n    },\n    {\n      \"system\": \"email\",\n      \"value\": \"john.smith@example.com\",\n      \"use\": \"home\"\n    }\n  ],\n  \"gender\": \"male\",\n  \"birthDate\": \"1987-02-20\",\n  \"deceasedBoolean\": false,\n  \"address\": [\n    {\n      \"use\": \"home\",\n      \"type\": \"both\",\n      \"line\": [\n        \"123 Main Street\",\n        \"Apartment 4B\"\n      ],\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"postalCode\": \"02101\",\n      \"country\": \"USA\",\n      \"period\": {\n        \"start\": \"2020-01-01\"\n      }\n    }\n  ],\n  \"maritalStatus\": {\n    \"coding\": [\n      {\n        \"system\": \"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\",\n        \"code\": \"M\",\n        \"display\": \"Married\"\n      }\n    ]\n  },\n  \"multipleBirthBoolean\": false,\n  \"contact\": [\n    {\n      \"relationship\": [\n        {\n          \"coding\": [\n            {\n              \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0131\",\n              \"code\": \"C\",\n              \"display\": \"Emergency Contact\"\n            }\n          ]\n        },\n        {\n          \"coding\": [\n            {\n              \"system\": \"http://terminology.hl7.org/CodeSystem/v3-RoleCode\",\n              \"code\": \"WIFE\",\n              \"display\": \"Wife\"\n            }\n          ]\n        }\n      ],\n      \"name\": {\n        \"use\": \"official\",\n        \"family\": \"Smith\",\n        \"given\": [\n          \"Jane\"\n        ]\n      },\n      \"telecom\": [\n        {\n          \"system\": \"phone\",\n          \"value\": \"+1-555-234-5678\",\n          \"use\": \"mobile\"\n        }\n      ],\n      \"address\": {\n        \"use\": \"home\",\n        \"line\": [\n          \"123 Main Street\",\n          \"Apartment 4B\"\n        ],\n        \"city\": \"Boston\",\n        \"state\": \"MA\",\n        \"postalCode\": \"02101\",\n        \"country\": \"USA\"\n      }\n    }\n  ],\n  \"communication\": [\n    {\n      \"language\": {\n        \"coding\": [\n          {\n            \"system\": \"urn:ietf:bcp:47\",\n            \"code\": \"en-US\",\n            \"display\": \"English (United States)\"\n          }\n        ]\n      },\n      \"preferred\": true\n    },\n    {\n      \"language\": {\n        \"coding\": [\n          {\n            \"system\": \"urn:ietf:bcp:47\",\n            \"code\": \"es\",\n            \"display\": \"Spanish\"\n          }\n        ]\n      },\n      \"preferred\": false\n    }\n  ],\n  \"generalPractitioner\": [\n    {\n      \"reference\": \"Practitioner/example-practitioner-001\",\n      \"display\": \"Dr. Sarah Johnson\"\n    }\n  ],\n  \"managingOrganization\": {\n    \"reference\": \"Organization/example-org-001\",\n    \"display\": \"Smart Health IT Hospital\"\n  },\n  \"link\": [\n    {\n      \"other\": {\n        \"reference\": \"Patient/example-patient-002\"\n      },\n      \"type\": \"seealso\"\n    }\n  ]\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/deepdive-fhir-cardinality/","title":"FHIR Resource Cardinality","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/deepdive-fhir-cardinality/#resource-element-cardinality-diagram","title":"Resource Element Cardinality (diagram)","text":"<p>See also Comprehensive FHIR Resource Relationships for a focused cardinality diagram that covers some 20+ resources across domains.</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/deepdive-fhir-cardinality/#version1-mermaid-graph-td","title":"Version1 (mermaid graph TD)","text":"graph TD     Patient[Patient Resource]      Patient --&gt; id[id 0..1]     Patient --&gt; meta[meta 0..1]     Patient --&gt; identifier[identifier 0..*]     Patient --&gt; active[active 0..1]     Patient --&gt; name[name 0..*]     Patient --&gt; telecom[telecom 0..*]     Patient --&gt; gender[gender 0..1]     Patient --&gt; birthDate[birthDate 0..1]     Patient --&gt; address[address 0..*]     Patient --&gt; maritalStatus[maritalStatus 0..1]     Patient --&gt; contact[contact 0..*]     Patient --&gt; communication[communication 0..*]     Patient --&gt; managingOrg[managingOrganization 0..1]      Observation[Observation Resource]      Observation --&gt; Oid[id 0..1]     Observation --&gt; Ometa[meta 0..1]     Observation --&gt; Ostatus[status 1..1 REQUIRED]     Observation --&gt; Ocategory[category 0..*]     Observation --&gt; Ocode[code 1..1 REQUIRED]     Observation --&gt; Osubject[subject 0..1]     Observation --&gt; Oencounter[encounter 0..1]     Observation --&gt; Oeffective[effective 0..1]     Observation --&gt; Oissued[issued 0..1]     Observation --&gt; Operformer[performer 0..*]     Observation --&gt; Ovalue[value 0..1]     Observation --&gt; Ointerpretation[interpretation 0..*]     Observation --&gt; Onote[note 0..*]     Observation --&gt; Ocomponent[component 0..*]      Condition[Condition Resource]      Condition --&gt; Cid[id 0..1]     Condition --&gt; Cmeta[meta 0..1]     Condition --&gt; CclinicalStatus[clinicalStatus 0..1]     Condition --&gt; CverificationStatus[verificationStatus 0..1]     Condition --&gt; Ccategory[category 0..*]     Condition --&gt; Cseverity[severity 0..1]     Condition --&gt; Ccode[code 0..1]     Condition --&gt; Csubject[subject 1..1 REQUIRED]     Condition --&gt; Cencounter[encounter 0..1]     Condition --&gt; Conset[onset 0..1]     Condition --&gt; Cabatement[abatement 0..1]     Condition --&gt; Crecorder[recorder 0..1]     Condition --&gt; Casserter[asserter 0..1]     Condition --&gt; Cevidence[evidence 0..*]     Condition --&gt; Cnote[note 0..*]"},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/deepdive-fhir-cardinality/#version2-puml-erd","title":"Version2 (puml ERD)","text":"<pre>662426fe4ba01398a286d758c9a5272cc9b62280352e27320d2d95614ad0dd96b102b99c4828149d69fc34e46fd56041c2b1c5c820c5f72c820860e506067415</pre><pre>4c3b1295d1ee80694821d25b5d6e0571e28f31cc9b94f9a3ddcf7a6d83fd58f85a77c056dfd977e28851ae6d2ba8c62dbe275e7979dc2a9dd57973bf9d39e262</pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/deepdive-fhir-code-systems/","title":"Common FHIR Code Systems","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/deepdive-fhir-code-systems/#fhir-terminology-standards","title":"FHIR Terminology Standards","text":"<p>LOINC (Logical Observation Identifiers Names and Codes) System: http://loinc.org Used for: Laboratory tests, clinical observations, vital signs Examples: - 8302-2: Body height - 29463-7: Body weight - 85354-9: Blood pressure panel - 8867-4: Heart rate - 8310-5: Body temperature  </p> <p>SNOMED CT (Systematized Nomenclature of Medicine Clinical Terms) System: http://snomed.info/sct Used for: Clinical findings, procedures, body structures, organisms Examples: - 38341003: Hypertension - 73211009: Diabetes mellitus - 413839001: Chronic lung disease - 195967001: Asthma  </p> <p>RxNorm System: http://www.nlm.nih.gov/research/umls/rxnorm Used for: Medications and drug names Examples: - 308136: Lisinopril - 197361: Metformin - 1156972: Atorvastatin 20 MG Oral Tablet  </p> <p>ICD-10-CM (International Classification of Diseases, 10th Revision) System: http://hl7.org/fhir/sid/icd-10-cm Used for: Diagnoses and procedures (billing/administrative) Examples: - I10: Essential (primary) hypertension - E11.9: Type 2 diabetes mellitus without complications - J45.909: Unspecified asthma, uncomplicated  </p> <p>CPT (Current Procedural Terminology) System: http://www.ama-assn.org/go/cpt Used for: Procedures, services (billing) Examples: - 99213: Office visit, established patient - 80053: Comprehensive metabolic panel  </p> <p>CVX (Vaccine Administered) System: http://hl7.org/fhir/sid/cvx Used for: Immunization vaccines Examples: - 08: Hepatitis B vaccine - 21: Varicella vaccine - 141: Influenza vaccine  </p> <p>UCUM (Unified Code for Units of Measure) System: http://unitsofmeasure.org Used for: Units in quantities Examples: - kg: kilogram - cm: centimeter - mg/dL: milligrams per deciliter - mmHg: millimeter of mercury - %: percent  </p> <p>NDC (National Drug Code) System: http://hl7.org/fhir/sid/ndc Used for: Drug product identification (US) Example: - 00093-0058: Specific drug package  </p> <p>HL7 V3 Code Systems System: http://terminology.hl7.org/CodeSystem/ Used for: FHIR-specific administrative codes Examples: - observation-category: vital-signs, laboratory, survey - condition-clinical: active, inactive, resolved - medication-request-intent: proposal, plan, order - encounter-status: planned, arrived, in-progress  </p> <p>FHIR Value Sets Curated collections of codes from various systems Examples: - observation-status: registered, preliminary, final - administrative-gender: male, female, other, unknown - marital-status: married, single, divorced, widowed  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-02-fhir-data-fundamentals/deepdive-fhir-data-types/","title":"FHIR Data Types","text":"<p>FHIR Data Types Hierarchy</p> <pre>16c9afbbabdb2704510ca881f7d405f9012d5641e0956c5de0cee34267da4729989a0b019c66ae35275ded1bf7e27e2b14956f1bab1ee7e0e803896021c1c474</pre><pre>20ddb773275f4a4096172d156e986642d2ca1fc5bf190a908e3ccbb1b2ed40901b5d508663db118212b86c5c4aadfb1ceb8b5e6fd2173e45e072fb980d307544</pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/","title":"FHIR Resource Relationships","text":"<p>This set of topics introduces relationships among key FHIR resources.</p> <ul> <li>Core FHIR Resource Relationship</li> <li>FHIR Comprehensive Resource Relationships</li> <li>FHIR Resource Bundles</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-bundles/","title":"FHIR Resource Bundles","text":"<p>Bundles are collections of resources used for search results, batch operations, and transactions.</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-bundles/#fhir-bundle-types-and-structure","title":"FHIR Bundle Types and Structure","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-bundles/#diagram-version1","title":"Diagram (version1)","text":"graph TD     Bundle[Bundle Resource]      Bundle --&gt; Type[type]     Bundle --&gt; Total[total]     Bundle --&gt; Link[link array]     Bundle --&gt; Entry[entry array]      Type --&gt; TypeSearch[searchset]     Type --&gt; TypeBatch[batch]     Type --&gt; TypeTransaction[transaction]     Type --&gt; TypeHistory[history]     Type --&gt; TypeCollection[collection]     Type --&gt; TypeDocument[document]      Link --&gt; LinkSelf[self]     Link --&gt; LinkNext[next]     Link --&gt; LinkPrev[previous]     Link --&gt; LinkFirst[first]     Link --&gt; LinkLast[last]      Entry --&gt; FullUrl[fullUrl]     Entry --&gt; Resource[resource]     Entry --&gt; Search[search]     Entry --&gt; Request[request]     Entry --&gt; Response[response]      Search --&gt; SearchMode[mode: match/include]     Search --&gt; SearchScore[score]      Request --&gt; ReqMethod[method: GET/POST/PUT/DELETE]     Request --&gt; ReqUrl[url]     Request --&gt; ReqIfMatch[ifMatch]     Request --&gt; ReqIfNoneExist[ifNoneExist]      Response --&gt; RespStatus[status]     Response --&gt; RespLocation[location]     Response --&gt; RespEtag[etag]     Response --&gt; RespLastMod[lastModified]"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-bundles/#diagram-version-2","title":"Diagram (version 2)","text":"<pre>e10f976ff2b4da1021f9e040129cdf1184b338d547e86665c6447bf818b849e9d97597371468f66767869cf6f4d2fb2d44c9cf947c32c70e0ed69eb2f3522658</pre><pre>5ba91d6150fbbd36eb44fc4adfbb452d1a74c2344224e49d2a96bc55cc7215b689766eb084f9b805b67130ab018ff8a3c13a20b37c939812cdfdd6f68c1e78ee</pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/","title":"FHIR Comprehensive Resource Relationships","text":"<p>This page explores how FHIR resources interconnect across clinical, administrative, and scheduling domains. You\u2019ll see how <code>Encounter</code> anchors clinical events, how <code>PractitionerRole</code> mediates actor context, and how resources like <code>CarePlan</code>, <code>MedicationRequest</code>, and <code>Coverage</code> form a web of intent, execution, and reimbursement.</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#comprehensive-diagram-of-fhir-resource-relationships","title":"Comprehensive Diagram of FHIR Resource Relationships","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#diagram-version-1","title":"Diagram (version 1)","text":"graph TD     Patient[Patient]     Practitioner[Practitioner]     PractitionerRole[PractitionerRole]     Organization[Organization]     Location[Location]      Encounter[Encounter]     Condition[Condition]     Observation[Observation]     Procedure[Procedure]      MedicationRequest[MedicationRequest]     Medication[Medication]     MedicationDispense[MedicationDispense]     MedicationAdministration[MedicationAdministration]      AllergyIntolerance[AllergyIntolerance]     Immunization[Immunization]      DiagnosticReport[DiagnosticReport]     Specimen[Specimen]      CarePlan[CarePlan]     Goal[Goal]     ServiceRequest[ServiceRequest]      DocumentReference[DocumentReference]     Composition[Composition]      Appointment[Appointment]     Slot[Slot]     Schedule[Schedule]      Coverage[Coverage]     Claim[Claim]     ExplanationOfBenefit[ExplanationOfBenefit]      Patient --&gt;|subject| Encounter     Patient --&gt;|subject| Condition     Patient --&gt;|subject| Observation     Patient --&gt;|subject| Procedure     Patient --&gt;|subject| MedicationRequest     Patient --&gt;|patient| AllergyIntolerance     Patient --&gt;|patient| Immunization     Patient --&gt;|subject| DiagnosticReport     Patient --&gt;|subject| CarePlan     Patient --&gt;|subject| Goal     Patient --&gt;|subject| DocumentReference     Patient --&gt;|actor| Appointment     Patient --&gt;|beneficiary| Coverage      Practitioner --&gt;|practitioner| PractitionerRole     Organization --&gt;|organization| PractitionerRole     Location --&gt;|location| PractitionerRole      PractitionerRole --&gt;|participant| Encounter     PractitionerRole --&gt;|performer| Procedure     PractitionerRole --&gt;|requester| MedicationRequest     PractitionerRole --&gt;|performer| Observation     PractitionerRole --&gt;|asserter| Condition     PractitionerRole --&gt;|actor| Appointment      Organization --&gt;|managingOrganization| Patient     Organization --&gt;|serviceProvider| Encounter      Location --&gt;|location| Encounter      Encounter --&gt;|encounter| Condition     Encounter --&gt;|encounter| Observation     Encounter --&gt;|encounter| Procedure     Encounter --&gt;|encounter| MedicationRequest     Encounter --&gt;|encounter| DiagnosticReport      Condition --&gt;|evidence| Observation     Condition --&gt;|addresses| CarePlan      MedicationRequest --&gt;|medication| Medication     MedicationRequest --&gt;|basedOn| CarePlan     MedicationDispense --&gt;|medication| Medication     MedicationDispense --&gt;|authorizingPrescription| MedicationRequest     MedicationAdministration --&gt;|medication| Medication     MedicationAdministration --&gt;|request| MedicationRequest      DiagnosticReport --&gt;|result| Observation     DiagnosticReport --&gt;|specimen| Specimen     DiagnosticReport --&gt;|basedOn| ServiceRequest      Observation --&gt;|specimen| Specimen     Observation --&gt;|basedOn| ServiceRequest      CarePlan --&gt;|goal| Goal     CarePlan --&gt;|activity| ServiceRequest      ServiceRequest --&gt;|subject| Patient     ServiceRequest --&gt;|requester| PractitionerRole      DocumentReference --&gt;|subject| Patient     DocumentReference --&gt;|context| Encounter      Composition --&gt;|subject| Patient     Composition --&gt;|encounter| Encounter     Composition --&gt;|author| PractitionerRole      Appointment --&gt;|slot| Slot     Slot --&gt;|schedule| Schedule     Schedule --&gt;|actor| PractitionerRole     Schedule --&gt;|actor| Location      Claim --&gt;|patient| Patient     Claim --&gt;|provider| PractitionerRole     ExplanationOfBenefit --&gt;|patient| Patient     ExplanationOfBenefit --&gt;|claim| Claim     Coverage --&gt;|payor| Organization"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#diagram-version-2","title":"Diagram (version 2)","text":"<pre>9b18c2833751e06c74604fb46e18a34cca85b675c8b47744739f3a2a0bd57809c86c7ad7e8b23d41dde22113551f390688d9c0191a8f908a67cb9dbc23b0029d</pre><pre>227a6a0da46229cf24bdd4fa32d43359869ffe70b5040295104828f37143c970a885ec3f81b208a800e32e80eb137bfac81cd68aacfe09458fc6b9df0de1b0a6</pre> <p>Diagram Overview</p> <p>This graph shows the full set of FHIR resource relationships across domains. It\u2019s dense by design\u2014intended to surface every edge and anchor. Don\u2019t try to memorize it. Instead, use it as a reference map as we walk through each domain below.</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#domain-breakdown","title":"Domain Breakdown","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#actors-and-identity","title":"Actors and Identity","text":"<ul> <li><code>Patient</code>, <code>Practitioner</code>, <code>Organization</code>, and <code>Location</code> form the identity backbone.</li> <li><code>PractitionerRole</code> links these together, acting as a contextual wrapper for scheduling, authorship, and clinical participation.</li> </ul> <p>Why PractitionerRole Matters</p> <p><code>PractitionerRole</code> is often misunderstood. It\u2019s not just a job title\u2014it\u2019s the glue that binds <code>Practitioner</code>, <code>Organization</code>, and <code>Location</code> to specific actions like <code>Appointment</code>, <code>Procedure</code>, and <code>MedicationRequest</code>.</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#clinical-events","title":"Clinical Events","text":"<ul> <li><code>Encounter</code> anchors most clinical resources: <code>Condition</code>, <code>Observation</code>, <code>Procedure</code>, <code>DiagnosticReport</code>.</li> <li>These resources reference <code>Encounter</code> to maintain temporal and contextual integrity.</li> </ul> <p>\\ TBD"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#medication-flow","title":"Medication Flow","text":"<ul> <li><code>MedicationRequest</code> initiates intent.</li> <li><code>MedicationDispense</code> and <code>MedicationAdministration</code> execute that intent.</li> <li><code>Medication</code> is referenced throughout, but never acts alone.</li> </ul> <p>\\ TBD"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#care-planning","title":"Care Planning","text":"<ul> <li><code>CarePlan</code> outlines goals and activities.</li> <li><code>Goal</code> defines desired outcomes.</li> <li><code>ServiceRequest</code> triggers actual interventions.</li> </ul> <p>\\ TBD"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#documentation","title":"Documentation","text":"<ul> <li><code>DocumentReference</code> and <code>Composition</code> capture narrative and structured records.</li> <li>Both link back to <code>Patient</code> and <code>Encounter</code>.</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#scheduling","title":"Scheduling","text":"<ul> <li><code>Appointment</code> \u2192 <code>Slot</code> \u2192 <code>Schedule</code> forms the scheduling chain.</li> <li><code>Schedule.actor</code> can be a <code>PractitionerRole</code> or <code>Location</code>.</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#financials","title":"Financials","text":"<ul> <li><code>Coverage</code> defines payor relationships.</li> <li><code>Claim</code> and <code>ExplanationOfBenefit</code> track reimbursement.</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#see-also","title":"See Also","text":"<ul> <li>FHIR Data Fundamentals \u2014 for resource types.</li> <li>FHIR REST Operations \u2014 for how these resources are exchanged.</li> <li>SMART Auth \u2014 for access control over these resources.</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#resource-cardinality-scaffold","title":"Resource Cardinality Scaffold","text":"<p>See also FHIR Resource Cardinality for a focused cardinality diagram for three core resources: <code>Patient</code>, <code>Observation</code>, and <code>Condition</code>.</p> <pre>77466a09c8d6e7f2473f4c900199c57e7417acd3c799284b0bc7e86065bf9f164795c6845425506c66deb7bb94e8f1cf6a18dbae959193eed030a6ce79680ed5</pre><pre>4c0f0a97f5c1d9837f623c74c1d2c75660926984359ff3d1964944bd99a79639835ada9e290e04722a786c8140f8bc57e42189eae6f99c48c351c2cfa077cc4c</pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships-comprehensive/#whats-next","title":"What\u2019s Next","text":"<p>Next, let\u2019s explore how these resources are bundled and exchanged.</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/","title":"Deepdive fhir resource relationships","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/#core-fhir-resource-relationships","title":"Core FHIR Resource Relationships","text":"<p>\\ TBD graph TD     Patient[Patient]     Practitioner[Practitioner]     Organization[Organization]     Encounter[Encounter]     Condition[Condition]     Observation[Observation]     MedicationRequest[MedicationRequest]     Procedure[Procedure]     AllergyIntolerance[AllergyIntolerance]     DiagnosticReport[DiagnosticReport]     Immunization[Immunization]     CarePlan[CarePlan]      Patient --&gt;|subject| Condition     Patient --&gt;|subject| Observation     Patient --&gt;|subject| MedicationRequest     Patient --&gt;|subject| Procedure     Patient --&gt;|patient| AllergyIntolerance     Patient --&gt;|subject| Encounter     Patient --&gt;|subject| DiagnosticReport     Patient --&gt;|patient| Immunization     Patient --&gt;|subject| CarePlan      Practitioner --&gt;|performer| Procedure     Practitioner --&gt;|requester| MedicationRequest     Practitioner --&gt;|participant| Encounter      Organization --&gt;|managingOrganization| Patient     Organization --&gt;|serviceProvider| Encounter      Encounter --&gt;|encounter| Condition     Encounter --&gt;|encounter| Observation     Encounter --&gt;|encounter| Procedure      Condition --&gt;|evidence| Observation     DiagnosticReport --&gt;|result| Observation"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/#resource-relationships-by-domain","title":"Resource Relationships by Domain","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/#actors","title":"Actors","text":"<p>actorsPatientPatientPractitionerPractitionerPractitionerRolePractitionerRolePractitioner-&gt;PractitionerRolepractitionerOrganizationOrganizationOrganization-&gt;PatientmanagingOrganizationOrganization-&gt;PractitionerRoleorganizationLocationLocationLocation-&gt;PractitionerRolelocation</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/#clinical","title":"Clinical","text":"<p>clinicalEncounterEncounterConditionConditionEncounter-&gt;ConditionencounterObservationObservationEncounter-&gt;ObservationencounterProcedureProcedureEncounter-&gt;ProcedureencounterDiagnosticReportDiagnosticReportEncounter-&gt;DiagnosticReportencounterCondition-&gt;ObservationevidenceDiagnosticReport-&gt;ObservationresultSpecimenSpecimenDiagnosticReport-&gt;Specimenspecimen</p> <p>Diagram Overview</p> <p>This graph shows how Encounter anchors multiple clinical resources. It\u2019s the temporal spine of most patient interactions.</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/#medication","title":"Medication","text":"<p>medicationMedicationRequestMedicationRequestMedicationMedicationMedicationRequest-&gt;MedicationmedicationMedicationDispenseMedicationDispenseMedicationDispense-&gt;MedicationRequestauthorizingPrescriptionMedicationDispense-&gt;MedicationmedicationMedicationAdministrationMedicationAdministrationMedicationAdministration-&gt;MedicationRequestrequestMedicationAdministration-&gt;MedicationmedicationAllergyIntoleranceAllergyIntoleranceImmunizationImmunization</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/#care-planning","title":"Care Planning","text":"<p>careplanCarePlanCarePlanGoalGoalCarePlan-&gt;GoalgoalServiceRequestServiceRequestCarePlan-&gt;ServiceRequestactivityServiceRequest-&gt;CarePlanbasedOn</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/#documentation","title":"Documentation","text":"<p>documentationDocumentReferenceDocumentReferenceEncounterEncounterDocumentReference-&gt;EncountercontextCompositionCompositionComposition-&gt;Encounterencounter</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/#scheduling","title":"Scheduling","text":"<p>schedulingAppointmentAppointmentSlotSlotAppointment-&gt;SlotslotScheduleScheduleSlot-&gt;ScheduleschedulePractitionerRolePractitionerRoleSchedule-&gt;PractitionerRoleactorLocationLocationSchedule-&gt;Locationactor</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-03-fhir-resource-relationships/deepdive-fhir-resource-relationships/#financial","title":"Financial","text":"<p>financialCoverageCoverageOrganizationOrganizationCoverage-&gt;OrganizationpayorClaimClaimPatientPatientClaim-&gt;PatientpatientPractitionerRolePractitionerRoleClaim-&gt;PractitionerRoleproviderExplanationOfBenefitExplanationOfBenefitExplanationOfBenefit-&gt;Claimclaim</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/","title":"Working with FHIR Resource APIs","text":"<ul> <li>FHIR Search Parameters</li> <li>Common FHIR Operations (REST API)</li> <li>Error Handling and OperationOutcome</li> <li>FHIR Validation</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-error-handling/","title":"Error Handling and OperationOutcome","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-error-handling/#operationoutcome-example","title":"OperationOutcome Example","text":"<pre><code>{\n  \"resourceType\": \"OperationOutcome\",\n  \"issue\": [\n    {\n      \"severity\": \"error\",\n      \"code\": \"invalid\",\n      \"details\": {\n        \"text\": \"The resource does not conform to the profile\"\n      },\n      \"diagnostics\": \"Patient.birthDate: minimum required = 1, but only found 0\",\n      \"location\": [\n        \"Patient.birthDate\"\n      ],\n      \"expression\": [\n        \"Patient.birthDate\"\n      ]\n    },\n    {\n      \"severity\": \"warning\",\n      \"code\": \"business-rule\",\n      \"details\": {\n        \"text\": \"Patient age indicates pediatric patient but no guardian contact provided\"\n      },\n      \"diagnostics\": \"Consider adding guardian information for minors\"\n    }\n  ]\n}\n\n// Severity Codes:\n// - fatal: System is not available\n// - error: Operation failed\n// - warning: Operation succeeded but issues noted\n// - information: Additional information\n\n// Issue Type Codes (partial list):\n// - invalid: Content invalid against specification\n// - structure: Structural issue\n// - required: Required element missing\n// - value: Element value invalid\n// - invariant: Constraint rule violation\n// - security: Security problem\n// - login: Authentication needed\n// - unknown: Unknown error\n// - expired: Expired content\n// - forbidden: Forbidden operation\n// - suppressed: Content suppressed\n// - processing: Processing failure\n// - not-supported: Operation not supported\n// - duplicate: Duplicate resource\n// - not-found: Resource not found\n// - too-long: Content too long\n// - code-invalid: Invalid code\n// - extension: Extension issue\n// - too-costly: Operation too expensive\n// - business-rule: Business rule violation\n// - conflict: Version conflict\n// - incomplete: Incomplete resource\n// - transient: Transient processing error\n// - lock-error: Lock error\n// - no-store: No storage available\n// - exception: Unhandled exception\n// - timeout: Timeout\n// - throttled: Rate limited\n// - informational: Information only\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/","title":"Common FHIR Operations (REST API)","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#layout-1","title":"Layout 1","text":"<p>information laoyout 1</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#base-url","title":"Base URL","text":"<pre><code>https://launch.smarthealthit.org/v/r4/fhir\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#read-get-a-specific-resource-by-id","title":"READ - Get a specific resource by ID","text":"<p><code>GET [base]/[resourceType]/[id]</code>Example:<code>GET /Patient/smart-1288992</code>Response: <code>200 OK + Patient resource</code>Headers:</p> <ul> <li>Authorization: <code>Bearer [access_token]</code></li> <li>Accept: <code>application/fhir+json</code></li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#read-get-a-specific-version-of-a-resource","title":"READ - Get a specific version of a resource","text":"<p><code>GET [base]/[resourceType]/[id]/_history/[version]</code> Example: <code>GET /Patient/smart-1288992/_history/1</code> Response: <code>200 OK + versioned Patient resource</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#update-replace-an-existing-resource","title":"UPDATE - Replace an existing resource","text":"<p><code>PUT [base]/[resourceType]/[id]</code> Example: <code>PUT /Patient/smart-1288992</code> <code>Content-Type: application/fhir+json</code> Body: <code>Updated Patient resource</code> Response: <code>200 OK</code> or <code>201 Created</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#patch-partial-update-of-a-resource","title":"PATCH - Partial update of a resource","text":"<p><code>PATCH [base]/[resourceType]/[id]</code> Content-Type: <code>application/json-patch+json</code> Body: <code>JSON Patch document</code></p> <pre><code>[\n  { \"op\": \"replace\", \"path\": \"/name/0/given/0\", \"value\": \"John\" }\n]\n</code></pre> <p>Response: <code>200 OK</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#delete-remove-a-resource","title":"DELETE - Remove a resource","text":"<p><code>DELETE [base]/[resourceType]/[id]</code> Example: <code>DELETE /Observation/12345</code> Response: <code>204 No Content</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#create-create-a-new-resource","title":"CREATE - Create a new resource","text":"<p><code>POST [base]/[resourceType]</code> Content-Type: <code>application/fhir+json</code> Body: [New resource (without id)] Response: <code>201 Created</code> Location: <code>[base]/[resourceType]/[new-id]</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#search-query-for-resources","title":"SEARCH - Query for resources","text":"<p><code>GET [base]/[resourceType]?[parameters]</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#common-search-parameters","title":"Common search parameters","text":"<ul> <li><code>_id</code>: Resource ID</li> <li><code>_lastUpdated</code>: Last update time</li> <li><code>_tag</code>: Tag search</li> <li><code>_profile</code>: Profile search</li> <li><code>_security</code>: Security label search</li> <li><code>_text</code>: Text search</li> <li><code>_content</code>: Content search</li> <li><code>_list</code>: List membership</li> <li><code>_has</code>: Reverse chaining</li> <li><code>_type</code>: Resource type (for system searches)</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#result-parameters","title":"Result parameters:","text":"<ul> <li><code>_sort</code>: Sort results (+field ascending, -field descending)</li> <li><code>_count</code>: Page size</li> <li><code>_include</code>: Include referenced resources</li> <li><code>_revinclude</code>: Include resources that reference this</li> <li><code>_summary</code>: Return summary (true, text, data, count)</li> <li><code>_elements</code>: Return specific elements</li> <li><code>_contained</code>: Include contained resources</li> </ul> <p>Examples: <code>GET /Patient?name=Smith&amp;_count=10</code> <code>GET /Observation?patient=123&amp;category=vital-signs&amp;_sort=-date</code> <code>GET /Condition?subject=Patient/123&amp;clinical-status=active</code> Response: <code>200 OK + Bundle (searchset)</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#search-post-complex-searches","title":"SEARCH (POST) - Complex searches","text":"<p><code>POST [base]/[resourceType]/_search</code> Content-Type: <code>application/x-www-form-urlencoded</code> Body: <code>name=Smith&amp;birthdate=1970-01-01</code> Response: <code>200 OK + Bundle</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#history-get-resource-history","title":"HISTORY - Get resource history","text":"<p>Instance level: <code>GET [base]/[resourceType]/[id]/_history</code> Type level: <code>GET [base]/[resourceType]/_history</code> System level: <code>GET [base]/_history</code></p> <p>Parameters:</p> <ul> <li><code>_count</code>: Page size</li> <li><code>_since</code>: Start date</li> <li><code>_at</code>: Point in time</li> </ul> <p>Response: <code>200 OK + Bundle (history)</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#capabilities-get-server-capabilities","title":"CAPABILITIES - Get server capabilities","text":"<p><code>GET [base]/metadata</code> Response: <code>200 OK + CapabilityStatement</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#batch-multiple-independent-operations","title":"BATCH - Multiple independent operations","text":"<p><code>POST [base]</code> Content-Type: <code>application/fhir+json</code> Body: <code>Bundle with type=batch</code></p> <pre><code>{\n  \"resourceType\": \"Bundle\",\n  \"type\": \"batch\",\n  \"entry\": [\n    {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"Patient/123\"\n      }\n    },\n    {\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Observation\"\n      },\n      \"resource\": { ... }\n    }\n  ]\n}\n</code></pre> <p>Response: <code>200 OK + Bundle with responses</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#transaction-atomic-bundle-operation","title":"TRANSACTION - Atomic bundle operation","text":"<p><code>POST [base]</code> Content-Type: <code>application/fhir+json</code> Body: <code>Bundle with type=transaction</code></p> <pre><code>{\n  \"resourceType\": \"Bundle\",\n  \"type\": \"transaction\",\n  \"entry\": [\n    {\n      \"fullUrl\": \"urn:uuid:patient-temp-id\",\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Patient\"\n      },\n      \"resource\": { ... }\n    },\n    {\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Observation\"\n      },\n      \"resource\": {\n        \"subject\": {\n          \"reference\": \"urn:uuid:patient-temp-id\"\n        }\n      }\n    }\n  ]\n}\n</code></pre> <p>All succeed or all fail atomically. Response:  <code>200 OK + Bundle with responses</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#operations-named-operations","title":"OPERATIONS - Named operations","text":"<p>System level: <code>POST [base]/$[operation]</code> Type level: <code>POST [base]/[resourceType]/$[operation]</code> Instance level: <code>POST [base]/[resourceType]/[id]/$[operation]</code></p> <p>Common operations:</p> <ul> <li><code>$validate</code>: Validate a resource</li> <li><code>$meta</code>: Get/add/delete metadata</li> <li><code>$everything</code>: Get all related resources</li> <li><code>$document</code>: Generate document</li> <li><code>$translate</code>: Translate codes</li> <li><code>$expand</code>: Expand value set</li> </ul> <p>Examples: <code>POST /Patient/123/$everything</code> <code>POST /ValueSet/abc/$expand</code></p> <p>Content-Type: <code>application/fhir+json</code> Body: <code>Parameters resource</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#conditional-operations","title":"CONDITIONAL OPERATIONS","text":"<p>Conditional Read: <code>GET [base]/[type]?[search parameters]</code> If-None-Match: <code>W/\"[version]\"</code> Conditional Create: <code>POST [base]/[type]</code> If-None-Exist: <code>[search parameters]</code></p> <p>Conditional Update: <code>PUT [base]/[type]?[search parameters]</code> Conditional Delete: <code>DELETE [base]/[type]?[search parameters]</code> Example: <code>POST /Patient</code> If-None-Exist: <code>identifier=http://hospital.org|MRN123</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#search-modifiers","title":"SEARCH MODIFIERS","text":"<p><code>:exact</code> - Exact match <code>:contains</code> - Contains substring <code>:missing</code> - Element is missing (true/false) <code>:text</code> - Text search in narrative <code>:not</code> - Negation <code>:above</code> - Hierarchy above <code>:below</code> - Hierarchy below <code>:in</code> - Code in value set <code>:not-in</code> - Code not in value set <code>:of-type</code> - Type filter for references</p> <p>Examples: <code>GET /Patient?name:exact=Smith</code> <code>GET /Observation?code:text=glucose</code> <code>GET /Patient?active:missing=false</code> <code>GET /Condition?code:not=http://snomed.info/sct|1234</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#search-prefixes-for-numbers-dates-quantities","title":"SEARCH PREFIXES (for numbers, dates, quantities)","text":"<p><code>eq</code> - Equal (default) <code>ne</code> - Not equal <code>gt</code> - Greater than <code>lt</code> - Less than <code>ge</code> - Greater or equal <code>le</code> - Less or equal <code>sa</code> - Starts after <code>eb</code> - Ends before <code>ap</code> - Approximately</p> <p>Examples: <code>GET /Observation?date=ge2023-01-01</code> <code>GET /Observation?value-quantity=gt100</code> <code>GET /Patient?birthdate=le2000-01-01</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#chaining-and-reverse-chaining","title":"CHAINING AND REVERSE CHAINING","text":"<p>Forward chaining (.) - Search through references: <code>GET /Observation?subject.name=Smith</code> <code>GET /DiagnosticReport?result.code=http://loinc.org|789-8</code> <code>GET /Encounter?patient.identifier=12345</code></p> <p>Reverse chaining (_has) - Find resources that reference this: <code>GET /Patient?_has:Observation:patient:code=http://loinc.org|789-8</code> (Find patients who have observations with specific code)</p> <p><code>GET /Patient?_has:Condition:patient:code=http://snomed.info/sct|1234</code> (Find patients with specific condition)</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#composite-parameters","title":"COMPOSITE PARAMETERS","text":"<p>Multiple values combined: <code>GET /Observation?code-value-quantity=http://loinc.org|8480-6$gt100</code> (Blood pressure systolic &gt; 100)</p> <p><code>GET /Observation?component-code-value-quantity=...</code> (Component observations)</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#http-headers","title":"HTTP HEADERS","text":"<p>Request Headers:</p> <ul> <li>Authorization: <code>Bearer [token]</code></li> <li>Accept: <code>application/fhir+json (or application/fhir+xml)</code></li> <li>Content-Type: <code>application/fhir+json</code></li> <li>If-Modified-Since: <code>[date]</code></li> <li>If-None-Match: <code>W/\"[version]\"</code></li> <li>Prefer: <code>return=minimal|representation|OperationOutcome</code></li> </ul> <p>Response Headers:</p> <ul> <li>Content-Type: application/fhir+json</li> <li>ETag: W/\"[version]\"</li> <li>Last-Modified: [date]</li> <li>Location: [resource-url] (for creates)</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#http-status-codes","title":"HTTP STATUS CODES","text":"<p>Success:</p> <ul> <li><code>200 OK</code>: Successful read, search, or update</li> <li><code>201 Created</code>: Successful create</li> <li><code>204 No Content</code>: Successful delete</li> </ul> <p>Client Errors:</p> <ul> <li><code>400 Bad Request</code>: Invalid request</li> <li><code>401 Unauthorized</code>: Missing or invalid authentication</li> <li><code>403 Forbidden</code>: Not authorized for operation</li> <li><code>404 Not Found</code>: Resource not found</li> <li><code>405 Method Not Allowed</code>: HTTP method not supported</li> <li><code>409 Conflict</code>: Version conflict</li> <li><code>410 Gone</code>: Resource deleted</li> <li><code>412 Precondition Failed</code>: Conditional operation failed</li> <li><code>422 Unprocessable Entity</code>: Invalid resource content</li> </ul> <p>Server Errors:</p> <ul> <li><code>500 Internal Server Error</code>: Server error</li> <li><code>501 Not Implemented</code>: Operation not supported</li> <li><code>503 Service Unavailable</code>: Server temporarily unavailable</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#layout-2","title":"Layout 2","text":"<p>information layout 2</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#base-url_1","title":"Base URL","text":"<pre><code>https://launch.smarthealthit.org/v/r4/fhir\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#core-operations","title":"Core Operations","text":"Operation Method Endpoint Description Read <code>GET</code> <code>/Patient/{id}</code> Retrieve a resource by ID VRead <code>GET</code> <code>/Patient/{id}/_history/{version}</code> Retrieve a specific version Update <code>PUT</code> <code>/Patient/{id}</code> Replace an existing resource Patch <code>PATCH</code> <code>/Patient/{id}</code> Partial update using JSON Patch Delete <code>DELETE</code> <code>/Observation/{id}</code> Remove a resource Create <code>POST</code> <code>/Patient</code> Create a new resource Search (GET) <code>GET</code> <code>/Patient?name=Smith</code> Query resources with parameters Search (POST) <code>POST</code> <code>/Patient/_search</code> Complex search via form body History <code>GET</code> <code>/Patient/{id}/_history</code> View resource history Capabilities <code>GET</code> <code>/metadata</code> Server capability statement Batch <code>POST</code> <code>/</code> Multiple independent operations Transaction <code>POST</code> <code>/</code> Atomic bundle operation Operations <code>POST</code> <code>/Patient/{id}/$everything</code> Named operations Conditional Ops <code>GET/POST/PUT/DELETE</code> <code>/Patient?...</code> Conditional create/update/delete"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#search-parameters","title":"\ud83e\udde0 Search Parameters","text":"<p>Common Filters:</p> <ul> <li><code>_id</code>, <code>_lastUpdated</code>, <code>_tag</code>, <code>_profile</code>, <code>_security</code></li> <li><code>_text</code>, <code>_content</code>, <code>_list</code>, <code>_has</code>, <code>_type</code></li> </ul> <p>Result Modifiers:</p> <ul> <li><code>_sort</code>, <code>_count</code>, <code>_include</code>, <code>_revinclude</code></li> <li><code>_summary</code>, <code>_elements</code>, <code>_contained</code></li> </ul> <p>Examples:</p> <pre><code>GET /Patient?name=Smith&amp;_count=10\nGET /Observation?patient=123&amp;category=vital-signs&amp;_sort=-date\nGET /Condition?subject=Patient/123&amp;clinical-status=active\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#search-modifiers_1","title":"Search Modifiers","text":"Modifier Description <code>:exact</code> Exact match <code>:contains</code> Substring match <code>:missing</code> Element presence <code>:text</code> Narrative search <code>:not</code> Negation <code>:above</code>, <code>:below</code> Hierarchy filters <code>:in</code>, <code>:not-in</code> ValueSet filters <code>:of-type</code> Reference type filter <p>Examples:</p> <pre><code>GET /Patient?name:exact=Smith\nGET /Observation?code:text=glucose\nGET /Patient?active:missing=false\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#search-prefixes-quantities-dates","title":"Search Prefixes (Quantities, Dates)","text":"Prefix Meaning <code>eq</code> Equal <code>ne</code> Not equal <code>gt</code> Greater than <code>lt</code> Less than <code>ge</code> Greater or equal <code>le</code> Less or equal <code>sa</code> Starts after <code>eb</code> Ends before <code>ap</code> Approximately <p>Examples:</p> <pre><code>GET /Observation?date=ge2023-01-01\nGET /Observation?value-quantity=gt100\nGET /Patient?birthdate=le2000-01-01\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#chaining-reverse-chaining","title":"Chaining / Reverse Chaining","text":"<p>Forward Chaining (<code>.</code>):</p> <pre><code>GET /Observation?subject.name=Smith\nGET /Encounter?patient.identifier=12345\n</code></pre> <p>Reverse Chaining (<code>_has</code>):</p> <pre><code>GET /Patient?_has:Observation:patient:code=http://loinc.org|789-8\nGET /Patient?_has:Condition:patient:code=http://snomed.info/sct|1234\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#composite-parameters_1","title":"Composite Parameters","text":"<pre><code>GET /Observation?code-value-quantity=http://loinc.org|8480-6$gt100\nGET /Observation?component-code-value-quantity=...\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#http-headers_1","title":"HTTP Headers","text":"<p>Request:</p> <ul> <li><code>Authorization: Bearer [token]</code></li> <li><code>Accept: application/fhir+json</code></li> <li><code>Content-Type: application/fhir+json</code></li> <li><code>If-Modified-Since</code>, <code>If-None-Match</code>, <code>Prefer</code></li> </ul> <p>Response:</p> <ul> <li><code>Content-Type</code>, <code>ETag</code>, <code>Last-Modified</code>, <code>Location</code></li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-rest-common-ops/#http-status-codes_1","title":"HTTP Status Codes","text":"Code Meaning <code>200 OK</code> Success <code>201 Created</code> Resource created <code>204 No Content</code> Deleted <code>400\u2013422</code> Client errors <code>500\u2013503</code> Server errors"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-search-parameters/","title":"FHIR Search Parameters","text":"<p>&lt;&lt;&gt;&gt;</p> <p>FHIR Search Examples</p> <pre><code># Base URL\nBASE=\"https://launch.smarthealthit.org/v/r4/fhir\"\n\n# 1. Get a specific patient by ID\ncurl \"$BASE/Patient/smart-1288992\"\n\n# 2. Search patients by name\ncurl \"$BASE/Patient?name=Shaw\"\n\n# 3. Search patients by birthdate\ncurl \"$BASE/Patient?birthdate=1987-02-20\"\n\n# 4. Get observations for a patient\ncurl \"$BASE/Observation?patient=smart-1288992\"\n\n# 5. Get vital signs observations\ncurl \"$BASE/Observation?patient=smart-1288992&amp;category=vital-signs\"\n\n# 6. Get observations with specific code (blood pressure)\ncurl \"$BASE/Observation?patient=smart-1288992&amp;code=85354-9\"\n\n# 7. Get recent observations (sorted by date, descending)\ncurl \"$BASE/Observation?patient=smart-1288992&amp;_sort=-date&amp;_count=10\"\n\n# 8. Get observations within date range\ncurl \"$BASE/Observation?patient=smart-1288992&amp;date=ge2020-01-01&amp;date=le2023-12-31\"\n\n# 9. Get active conditions\ncurl \"$BASE/Condition?patient=smart-1288992&amp;clinical-status=active\"\n\n# 10. Get conditions by category\ncurl \"$BASE/Condition?patient=smart-1288992&amp;category=encounter-diagnosis\"\n\n# 11. Get active medication requests\ncurl \"$BASE/MedicationRequest?patient=smart-1288992&amp;status=active\"\n\n# 12. Get medications with intent=order\ncurl \"$BASE/MedicationRequest?patient=smart-1288992&amp;intent=order\"\n\n# 13. Get recent encounters\ncurl \"$BASE/Encounter?patient=smart-1288992&amp;_sort=-date&amp;_count=5\"\n\n# 14. Get encounters by type\ncurl \"$BASE/Encounter?patient=smart-1288992&amp;type=http://snomed.info/sct|185349003\"\n\n# 15. Get procedures for patient\ncurl \"$BASE/Procedure?patient=smart-1288992\"\n\n# 16. Get allergies\ncurl \"$BASE/AllergyIntolerance?patient=smart-1288992\"\n\n# 17. Get immunizations\ncurl \"$BASE/Immunization?patient=smart-1288992\"\n\n# 18. Get diagnostic reports\ncurl \"$BASE/DiagnosticReport?patient=smart-1288992\"\n\n# 19. Search with multiple parameters (AND logic)\ncurl \"$BASE/Observation?patient=smart-1288992&amp;category=laboratory&amp;date=ge2022-01-01\"\n\n# 20. Use _include to get referenced resources\ncurl \"$BASE/Observation?patient=smart-1288992&amp;_include=Observation:performer\"\n\n# 21. Use _revinclude to get referencing resources\ncurl \"$BASE/Patient/smart-1288992?_revinclude=Observation:patient\"\n\n# 22. Get only specific fields with _elements\ncurl \"$BASE/Patient/smart-1288992?_elements=name,birthDate,gender\"\n\n# 23. Use _summary for abbreviated results\ncurl \"$BASE/Patient/smart-1288992?_summary=true\"\n\n# 24. Pagination with _count and _offset\ncurl \"$BASE/Observation?patient=smart-1288992&amp;_count=20&amp;_offset=0\"\n\n# 25. Search by token (identifier)\ncurl \"$BASE/Patient?identifier=http://hospital.smarthealthit.org|smart-1288992\"\n\n# Search Prefixes:\n# eq - equals (default)\n# ne - not equals\n# gt - greater than\n# lt - less than\n# ge - greater or equal\n# le - less or equal\n# sa - starts after\n# eb - ends before\n# ap - approximately\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-validation/","title":"FHIR Validation","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-04-working-with-fhir-apis/deepdive-fhir-validation/#fhir-validation-process-diagram","title":"FHIR Validation Process (diagram)","text":"graph TD     Resource[FHIR Resource]      Resource --&gt; Syntax[Syntax Validation]     Syntax --&gt; Structure[Structure Validation]     Structure --&gt; Cardinality[Cardinality Check]     Cardinality --&gt; DataType[Data Type Validation]     DataType --&gt; ValueSet[Value Set Binding]     ValueSet --&gt; Invariant[Invariant Rules]     Invariant --&gt; Profile[Profile Conformance]     Profile --&gt; Business[Business Rules]      Syntax --&gt; SyntaxCheck{Valid JSON/XML?}     SyntaxCheck --&gt;|No| SyntaxError[Syntax Error]     SyntaxCheck --&gt;|Yes| Continue1[Continue]      Structure --&gt; StructCheck{Valid FHIRstructure?}     StructCheck --&gt;|No| StructError[Structure Error]     StructCheck --&gt;|Yes| Continue2[Continue]      Cardinality --&gt; CardCheck{Required elementspresent?}     CardCheck --&gt;|No| CardError[Missing Required]     CardCheck --&gt;|Yes| Continue3[Continue]      DataType --&gt; TypeCheck{Correctdata types?}     TypeCheck --&gt;|No| TypeError[Type Error]     TypeCheck --&gt;|Yes| Continue4[Continue]      ValueSet --&gt; VSCheck{Codes invalue sets?}     VSCheck --&gt;|No| VSError[Invalid Code]     VSCheck --&gt;|Yes| Continue5[Continue]      Invariant --&gt; InvCheck{Invariantssatisfied?}     InvCheck --&gt;|No| InvError[Constraint Violation]     InvCheck --&gt;|Yes| Continue6[Continue]      Profile --&gt; ProfCheck{Matchesprofile?}     ProfCheck --&gt;|No| ProfError[Profile Mismatch]     ProfCheck --&gt;|Yes| Continue7[Continue]      Business --&gt; BizCheck{Business rulessatisfied?}     BizCheck --&gt;|No| BizError[Business Rule Error]     BizCheck --&gt;|Yes| Valid[Valid Resource]"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/","title":"Advanced FHIR Concepts","text":"<p>This section introduces more advanced FHIR concepts and constructs.</p> <ul> <li>FHIR Profiles and Extensions</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/","title":"FHIR Profiles and Extensions","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#fhir-profiles","title":"FHIR Profiles","text":"<p>A Profile is a set of constraints on a base FHIR resource that: - Restricts cardinality (e.g., required elements) - Constrains data types - Specifies value sets for coded elements - Adds extensions - Provides additional documentation  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#common-profile-types","title":"Common Profile Types","text":"<p>US Core Profiles (US realm) - http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient - http://hl7.org/fhir/us/core/StructureDefinition/us-core-observation-lab - http://hl7.org/fhir/us/core/StructureDefinition/us-core-condition - http://hl7.org/fhir/us/core/StructureDefinition/us-core-medicationrequest  </p> <p>International Patient Summary (IPS) - http://hl7.org/fhir/uv/ips/StructureDefinition/Patient-uv-ips - http://hl7.org/fhir/uv/ips/StructureDefinition/Observation-results-uv-ips  </p> <p>SMART App Launch Profiles - http://hl7.org/fhir/smart-app-launch/StructureDefinition/patient-access-brands  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#declaring-profile-conformance","title":"Declaring Profile Conformance","text":"<p>In resource meta element:  </p> <pre><code>{\n  \"resourceType\": \"Patient\",\n  \"meta\": {\n    \"profile\": [\n      \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient\"\n    ]\n  },\n  ...\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#searching-by-profile","title":"Searching by Profile","text":"<pre><code>GET /Patient?_profile=http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#fhir-extensions","title":"FHIR Extensions","text":"<p>Extensions add additional data elements not in base FHIR specification.  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#extension-structure","title":"Extension Structure","text":"<pre><code>{\n  \"extension\": [\n    {\n      \"url\": \"http://example.org/fhir/StructureDefinition/patient-ethnicity\",\n      \"valueCodeableConcept\": {\n        \"coding\": [\n          {\n            \"system\": \"http://terminology.hl7.org/CodeSystem/v3-Ethnicity\",\n            \"code\": \"2135-2\",\n            \"display\": \"Hispanic or Latino\"\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#types-of-extensions","title":"Types of Extensions","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#simple-extensions-primitive-value","title":"Simple Extensions (primitive value)","text":"<pre><code>{\n  \"url\": \"http://example.org/favorite-color\",\n  \"valueString\": \"blue\"\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#complex-extensions-nested","title":"Complex Extensions (nested)","text":"<pre><code>{\n  \"url\": \"http://example.org/complex-data\",\n  \"extension\": [\n    {\n      \"url\": \"component1\",\n      \"valueString\": \"value1\"\n    },\n    {\n      \"url\": \"component2\",\n      \"valueInteger\": 42\n    }\n  ]\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#modifier-extensions-change-meaning","title":"Modifier Extensions (change meaning)","text":"<pre><code>{\n  \"modifierExtension\": [\n    {\n      \"url\": \"http://example.org/not-performed\",\n      \"valueBoolean\": true\n    }\n  ]\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#common-us-core-extensions","title":"Common US Core Extensions","text":"<p>Race:  </p> <pre><code>{\n  \"extension\": [\n    {\n      \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race\",\n      \"extension\": [\n        {\n          \"url\": \"ombCategory\",\n          \"valueCoding\": {\n            \"system\": \"urn:oid:2.16.840.1.113883.6.238\",\n            \"code\": \"2106-3\",\n            \"display\": \"White\"\n          }\n        },\n        {\n          \"url\": \"text\",\n          \"valueString\": \"White\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre> <p>Ethnicity:  </p> <pre><code>{\n  \"extension\": [\n    {\n      \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity\",\n      \"extension\": [\n        {\n          \"url\": \"ombCategory\",\n          \"valueCoding\": {\n            \"system\": \"urn:oid:2.16.840.1.113883.6.238\",\n            \"code\": \"2186-5\",\n            \"display\": \"Not Hispanic or Latino\"\n          }\n        },\n        {\n          \"url\": \"text\",\n          \"valueString\": \"Not Hispanic or Latino\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre> <p>Birth Sex:  </p> <pre><code>{\n  \"extension\": [\n    {\n      \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex\",\n      \"valueCode\": \"F\"\n    }\n  ]\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#must-support","title":"MUST Support","text":"<p>Elements marked as \"Must Support\" in profiles mean: - Systems must be able to store and retrieve the element - If data is available, it should be populated - Receiving systems must process the element meaningfully  </p> <p>Example US Core Patient Must Support Elements: - identifier (at least one) - name (at least one) - gender - race extension - ethnicity extension  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#slicing","title":"Slicing","text":"<p>Slicing divides arrays into constrained subsets.  </p> <p>Example - Observation with multiple components:</p> <pre><code>{\n  \"component\": [\n    {\n      \"code\": {\n        \"coding\": [{\n          \"system\": \"http://loinc.org\",\n          \"code\": \"8480-6\"\n        }]\n      },\n      \"valueQuantity\": { \"value\": 120 }\n    },\n    {\n      \"code\": {\n        \"coding\": [{\n          \"system\": \"http://loinc.org\",\n          \"code\": \"8462-4\"\n        }]\n      },\n      \"valueQuantity\": { \"value\": 80 }\n    }\n  ]\n}\n</code></pre> <p>Profile can define: - \"systolic\" slice: component where code = 8480-6 - \"diastolic\" slice: component where code = 8462-4  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-05-advanced-fhir-concepts/deepdive-fhir-profiles-and-extensions/#capability-statement","title":"Capability Statement","text":"<p>Servers declare their capabilities via <code>CapabilityStatement</code>:  </p> <pre><code>GET /metadata\n\nResponse includes:\n- Supported resources\n- Supported operations (read, search, create, update, delete)\n- Supported search parameters\n- Supported profiles\n- Security requirements\n- Format support (JSON, XML)\n</code></pre> <p>Example snippet:  </p> <pre><code>{\n  \"resourceType\": \"CapabilityStatement\",\n  \"status\": \"active\",\n  \"date\": \"2024-01-01\",\n  \"kind\": \"instance\",\n  \"fhirVersion\": \"4.0.1\",\n  \"format\": [\"json\", \"xml\"],\n  \"rest\": [\n    {\n      \"mode\": \"server\",\n      \"security\": {\n        \"extension\": [{\n          \"url\": \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\",\n          \"extension\": [\n            {\n              \"url\": \"authorize\",\n              \"valueUri\": \"https://auth.example.org/authorize\"\n            },\n            {\n              \"url\": \"token\",\n              \"valueUri\": \"https://auth.example.org/token\"\n            }\n          ]\n        }]\n      },\n      \"resource\": [\n        {\n          \"type\": \"Patient\",\n          \"profile\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient\",\n          \"interaction\": [\n            { \"code\": \"read\" },\n            { \"code\": \"search-type\" }\n          ],\n          \"searchParam\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"string\"\n            },\n            {\n              \"name\": \"birthdate\",\n              \"type\": \"date\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/","title":"SMART Authorization","text":"<p>This set of topics provides information on SMART Authorization and its flow.</p> <ul> <li>OAuth 2.0 Flow</li> <li>SMART Launch Flow</li> <li>SMART Scopes and Authorization</li> <li>SMART Configuration Discovery</li> <li>Security and Access Control</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-oauth-flow/","title":"OAuth 2.0 Flow","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-oauth-flow/#oauth-20-flow-details-diagram","title":"OAuth 2.0 Flow Details (diagram)","text":"sequenceDiagram     participant Browser     participant App as SMART App     participant Auth as Authorization Server     participant FHIR as FHIR Server      Note over Browser,FHIR: EHR Launch Flow      Browser-&gt;&gt;App: 1. Launch with iss and launch params     Note right of Browser: GET /launch?iss=...&amp;launch=...      App-&gt;&gt;Auth: 2. Discover endpoints     Note right of App: GET [iss]/.well-known/smart-configuration     Auth--&gt;&gt;App: Return configuration     Note left of Auth: authorization_endpoint, token_endpoint      App-&gt;&gt;Auth: 3. Authorization request     Note right of App: GET /authorize?response_type=codeclient_id=...redirect_uri=...scope=...state=...aud=...launch=...      Auth-&gt;&gt;Browser: 4. Display login screen     Browser-&gt;&gt;Auth: 5. User credentials      Auth-&gt;&gt;Browser: 6. Display consent screen     Browser-&gt;&gt;Auth: 7. User approves      Auth-&gt;&gt;App: 8. Redirect with code     Note right of Auth: GET /callback?code=...&amp;state=...      App-&gt;&gt;Auth: 9. Token request     Note right of App: POST /tokengrant_type=authorization_codecode=...redirect_uri=...client_id=...      Auth-&gt;&gt;FHIR: 10. Validate and create context     FHIR--&gt;&gt;Auth: Context created      Auth--&gt;&gt;App: 11. Access token response     Note left of Auth: access_tokentoken_type: Bearerexpires_inscopepatient (context)refresh_token      App-&gt;&gt;FHIR: 12. API request with token     Note right of App: GET /Patient/123Authorization: Bearer [token]      FHIR-&gt;&gt;FHIR: 13. Validate token and scope     FHIR--&gt;&gt;App: 14. Return resource      Note over Browser,FHIR: Token Refresh Flow      App-&gt;&gt;Auth: 15. Refresh token request     Note right of App: POST /tokengrant_type=refresh_tokenrefresh_token=...      Auth--&gt;&gt;App: 16. New access token     Note left of Auth: access_tokenexpires_inrefresh_token"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-security-and-access-control/","title":"Security and Access Control","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-security-and-access-control/#smart-security-layers-diagram","title":"SMART Security Layers (diagram)","text":"graph TD     Request[API Request]      Request --&gt; TLS[Transport Security TLS]     TLS --&gt; Auth[Authentication]     Auth --&gt; Token[Token Validation]     Token --&gt; Scope[Scope Authorization]     Scope --&gt; Context[Context Verification]     Context --&gt; Resource[Resource Access Control]     Resource --&gt; Consent[Consent Checking]     Consent --&gt; Audit[Audit Logging]     Audit --&gt; Response[Return Response]      TLS --&gt; TLSCheck{Valid HTTPS?}     TLSCheck --&gt;|No| Reject1[Reject - Insecure]     TLSCheck --&gt;|Yes| AuthCont[Continue]      Auth --&gt; AuthCheck{ValidCredentials?}     AuthCheck --&gt;|No| Reject2[401 Unauthorized]     AuthCheck --&gt;|Yes| TokenCont[Continue]      Token --&gt; TokenCheck{Valid AccessToken?}     TokenCheck --&gt;|No| Reject3[401 Invalid Token]     TokenCheck --&gt;|Expired| Reject4[401 Token Expired]     TokenCheck --&gt;|Yes| ScopeCont[Continue]      Scope --&gt; ScopeCheck{RequiredScope Present?}     ScopeCheck --&gt;|No| Reject5[403 Insufficient Scope]     ScopeCheck --&gt;|Yes| ContextCont[Continue]      Context --&gt; ContextCheck{Patient ContextMatches?}     ContextCheck --&gt;|No| Reject6[403 Invalid Context]     ContextCheck --&gt;|Yes| ResourceCont[Continue]      Resource --&gt; ResourceCheck{ResourceAuthorized?}     ResourceCheck --&gt;|No| Reject7[403 Forbidden]     ResourceCheck --&gt;|Yes| ConsentCont[Continue]      Consent --&gt; ConsentCheck{ConsentGranted?}     ConsentCheck --&gt;|No| Reject8[403 Consent Denied]     ConsentCheck --&gt;|Yes| AuditCont[Continue]"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-config-discovery/","title":"SMART Configuration Discovery","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-config-discovery/#smart-configuration-example","title":"SMART Configuration Example","text":"<pre><code>{\n  \"authorization_endpoint\": \"https://launch.smarthealthit.org/v/r4/auth/authorize\",\n  \"token_endpoint\": \"https://launch.smarthealthit.org/v/r4/auth/token\",\n  \"token_endpoint_auth_methods_supported\": [\n    \"client_secret_basic\",\n    \"client_secret_post\"\n  ],\n  \"registration_endpoint\": \"https://launch.smarthealthit.org/v/r4/auth/register\",\n  \"scopes_supported\": [\n    \"openid\",\n    \"fhirUser\",\n    \"launch\",\n    \"launch/patient\",\n    \"launch/encounter\",\n    \"offline_access\",\n    \"online_access\",\n    \"patient/*.read\",\n    \"patient/*.write\",\n    \"patient/*.*\",\n    \"user/*.read\",\n    \"user/*.write\",\n    \"user/*.*\",\n    \"patient/Patient.read\",\n    \"patient/Observation.read\",\n    \"patient/Observation.write\",\n    \"patient/Condition.read\",\n    \"patient/Condition.write\",\n    \"patient/MedicationRequest.read\",\n    \"patient/AllergyIntolerance.read\",\n    \"patient/Procedure.read\",\n    \"patient/Encounter.read\",\n    \"patient/Immunization.read\",\n    \"patient/DiagnosticReport.read\",\n    \"patient/DocumentReference.read\",\n    \"patient/CarePlan.read\",\n    \"user/Patient.read\",\n    \"user/Practitioner.read\",\n    \"user/Organization.read\"\n  ],\n  \"response_types_supported\": [\n    \"code\",\n    \"code id_token\",\n    \"id_token\",\n    \"refresh_token\"\n  ],\n  \"capabilities\": [\n    \"launch-ehr\",\n    \"launch-standalone\",\n    \"client-public\",\n    \"client-confidential-symmetric\",\n    \"context-ehr-patient\",\n    \"context-ehr-encounter\",\n    \"context-standalone-patient\",\n    \"context-standalone-encounter\",\n    \"permission-offline\",\n    \"permission-patient\",\n    \"permission-user\",\n    \"sso-openid-connect\"\n  ],\n  \"code_challenge_methods_supported\": [\n    \"S256\"\n  ],\n  \"grant_types_supported\": [\n    \"authorization_code\",\n    \"refresh_token\"\n  ],\n  \"introspection_endpoint\": \"https://launch.smarthealthit.org/v/r4/auth/introspect\",\n  \"revocation_endpoint\": \"https://launch.smarthealthit.org/v/r4/auth/revoke\",\n  \"management_endpoint\": \"https://launch.smarthealthit.org/v/r4/auth/manage\"\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-launch-flow/","title":"SMART Launch Flow","text":"<p>SMART Launch Sequence Diagram</p> sequenceDiagram     participant User     participant EHR     participant App     participant Auth as Authorization Server     participant FHIR as FHIR Server      User-&gt;&gt;EHR: Select SMART App     EHR-&gt;&gt;Auth: Launch request with iss, launch params     Auth-&gt;&gt;App: Redirect to app launch URL     App-&gt;&gt;Auth: Authorization request with client_id, scope, redirect_uri     Auth-&gt;&gt;User: Present authorization screen     User-&gt;&gt;Auth: Approve access     Auth-&gt;&gt;App: Redirect with authorization code     App-&gt;&gt;Auth: Exchange code for access token     Auth-&gt;&gt;App: Return access token + patient context     App-&gt;&gt;FHIR: Request resources with Bearer token     FHIR-&gt;&gt;App: Return FHIR resources     App-&gt;&gt;User: Display patient data"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/","title":"SMART Scopes and Authorization","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#smart-scope-patterns","title":"SMART Scope Patterns","text":"<p>Scope patterns in SMART-on-FHIR define the specific permissions an application can request to access a user's health data, using a predefined structure of <code>context/resource.actions</code>. </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#scope-syntax","title":"Scope Syntax","text":"<p>Pattern: <code>[context]/[resource].[permission]</code> </p> <p>Contexts:  </p> <ul> <li><code>patient/</code> - Access limited to current patient context  </li> <li><code>user/</code> - Access to resources user can access  </li> <li><code>system/</code> - Backend system access (no user)  </li> </ul> <p>Permissions:  </p> <ul> <li><code>read</code> - Read-only access  </li> <li><code>write</code> - Create/update access (implies read)  </li> <li><code>*</code> - Full access (read/write)  </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#common-scope-examples","title":"Common Scope Examples","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#patient-specific-scopes","title":"Patient-specific scopes","text":"<ul> <li><code>patient/Patient.read</code> - Read current patient demographics  </li> <li><code>patient/Observation.read</code> - Read observations for current patient</li> <li><code>patient/Condition.read</code> - Read conditions for current patient</li> <li><code>patient/MedicationRequest.read</code> - Read medication requests</li> <li><code>patient/AllergyIntolerance.read</code> - Read allergies</li> <li><code>patient/Immunization.read</code> - Read immunizations</li> <li><code>patient/Procedure.read</code> - Read procedures</li> <li><code>patient/DiagnosticReport.read</code> - Read diagnostic reports</li> <li><code>patient/Encounter.read</code> - Read encounters</li> <li><code>patient/DocumentReference.read</code> - Read documents</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#user-level-scopes-broader-access","title":"User-level scopes (broader access)","text":"<ul> <li><code>user/Patient.read</code> - Read any patient the user can access  </li> <li><code>user/Observation.read</code> - Read observations across patients  </li> <li><code>user/Practitioner.read</code> - Read practitioner information  </li> <li><code>user/Organization.read</code> - Read organization data  </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#write-permissions","title":"Write permissions","text":"<ul> <li><code>patient/Observation.write</code> - Create/update observations  </li> <li><code>patient/Condition.write</code> - Create/update conditions  </li> <li><code>user/Patient.write</code> - Create/update patient records  </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#wildcard-scopes","title":"Wildcard scopes","text":"<ul> <li><code>patient/*.read</code> - Read all resources for patient</li> <li><code>user/*.read</code> - Read all resources for user</li> <li><code>patient/*.write</code> - Full write access for patient</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#openid-connect-scopes","title":"OpenID Connect scopes","text":"<ul> <li><code>openid</code> - Required for OIDC authentication  </li> <li><code>profile</code> - Access to user profile  </li> <li><code>email</code> - Access to user email  </li> <li><code>fhirUser</code> - Get FHIR resource URL for user  </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#launch-context-scopes","title":"Launch context scopes","text":"<ul> <li><code>launch</code> - Required for EHR launch</li> <li><code>launch/patient</code> - Get patient in context</li> <li><code>launch/encounter</code> - Get encounter in context</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#offline-access","title":"Offline access","text":"<ul> <li><code>offline_access</code> - Request refresh token for long-term access  </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#typical-scope-combinations","title":"Typical Scope Combinations","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#basic-read-only-app","title":"Basic read-only app","text":"<ul> <li><code>openid fhirUser launch launch/patient</code> </li> <li><code>patient/Patient.read</code> <code>patient/Observation.read</code> <code>patient/Condition.read</code> </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#comprehensive-read-access","title":"Comprehensive read access","text":"<ul> <li><code>openid fhirUser launch launch/patient offline_access</code> </li> <li><code>patient/*.read</code> </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#clinical-documentation-app","title":"Clinical documentation app","text":"<ul> <li><code>openid fhirUser launch launch/patient launch/encounter</code> </li> <li><code>patient/Patient.read patient/Observation.write patient/Condition.write</code> </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#provider-facing-dashboard","title":"Provider-facing dashboard","text":"<ul> <li><code>openid profile fhirUser launch</code> </li> <li><code>user/Patient.read user/Observation.read user/Condition.read user/Encounter.read</code> </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#backend-service-no-user","title":"Backend service (no user)","text":"<p><code>system/Patient.read system/Observation.read</code></p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-06-smart-auth/deepdive-smart-scopes-and-auth/#scope-negotiation","title":"Scope Negotiation","text":"<ul> <li>App requests scopes during authorization  </li> <li>Authorization server may grant subset of requested scopes  </li> <li>Granted scopes returned in token response  </li> <li>App must check granted scopes before attempting operations  </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/","title":"Hands-On Practice","text":"<p>This set of topics comprises a workshop for developinging a client app and using a publicly available sandbox to test it with.</p> <ul> <li>Using the SMART Health IT Sandbox</li> <li>Practical Example: Building a SMART App</li> <li>SMART Client Implementation (Python)</li> <li>Practical Code Examples</li> <li>Testing and Debugging</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-smart-health-it-sandbox/","title":"Using the SMART Health IT Sandbox","text":"<p>The SMART Health IT project provides a public sandbox environment:</p> <p>https://launch.smarthealthit.org/v/r4/fhir</p> <p>Other sandboxes? (TBD)</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-smart_client_impl-practical-code-examples/","title":"Practical Code Examples","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-smart_client_impl-practical-code-examples/#smart-client-implementation-javascript","title":"SMART Client Implementation (JavaScript)","text":"<pre><code>// SMART-on-FHIR Client Implementation using fhirclient library\n// Install: npm install fhirclient\n\nimport FHIR from 'fhirclient';\n\n// ==========================================\n// 1. INITIALIZATION AND AUTHORIZATION\n// ==========================================\n\n/**\n * Initialize SMART launch sequence\n * Call this from your launch.html page\n */\nasync function initializeLaunch() {\n  try {\n    await FHIR.oauth2.authorize({\n      clientId: 'your-client-id',\n      scope: 'launch/patient patient/*.read offline_access openid fhirUser',\n      redirectUri: './index.html',\n      // For standalone launch, specify iss (FHIR server URL)\n      // iss: 'https://launch.smarthealthit.org/v/r4/fhir'\n    });\n  } catch (error) {\n    console.error('Authorization failed:', error);\n  }\n}\n\n/**\n * Initialize SMART client after redirect\n * Call this from your index.html page\n */\nasync function initializeClient() {\n  try {\n    const client = await FHIR.oauth2.ready();\n    return client;\n  } catch (error) {\n    console.error('Client initialization failed:', error);\n    throw error;\n  }\n}\n\n// ==========================================\n// 2. READING RESOURCES\n// ==========================================\n\n/**\n * Get current patient\n */\nasync function getCurrentPatient(client) {\n  try {\n    const patient = await client.patient.read();\n    console.log('Patient:', patient);\n    return patient;\n  } catch (error) {\n    console.error('Error reading patient:', error);\n    throw error;\n  }\n}\n\n/**\n * Search for observations\n */\nasync function getObservations(client, patientId, options = {}) {\n  try {\n    const query = {\n      patient: patientId,\n      _count: options.count || 10,\n      _sort: options.sort || '-date',\n      ...options.params\n    };\n\n    const observations = await client.request(\n      `Observation?${new URLSearchParams(query)}`\n    );\n\n    return observations;\n  } catch (error) {\n    console.error('Error fetching observations:', error);\n    throw error;\n  }\n}\n\n/**\n * Get vital signs\n */\nasync function getVitalSigns(client, patientId) {\n  try {\n    const vitals = await client.request(\n      `Observation?patient=${patientId}&amp;category=vital-signs&amp;_sort=-date&amp;_count=20`\n    );\n    return vitals;\n  } catch (error) {\n    console.error('Error fetching vital signs:', error);\n    throw error;\n  }\n}\n\n/**\n * Get specific observation by ID\n */\nasync function getObservationById(client, id) {\n  try {\n    const observation = await client.request(`Observation/${id}`);\n    return observation;\n  } catch (error) {\n    console.error('Error fetching observation:', error);\n    throw error;\n  }\n}\n\n/**\n * Get conditions\n */\nasync function getConditions(client, patientId, clinicalStatus = null) {\n  try {\n    let url = `Condition?patient=${patientId}`;\n    if (clinicalStatus) {\n      url += `&amp;clinical-status=${clinicalStatus}`;\n    }\n\n    const conditions = await client.request(url);\n    return conditions;\n  } catch (error) {\n    console.error('Error fetching conditions:', error);\n    throw error;\n  }\n}\n\n/**\n * Get medication requests\n */\nasync function getMedicationRequests(client, patientId, status = null) {\n  try {\n    let url = `MedicationRequest?patient=${patientId}&amp;_sort=-authoredon`;\n    if (status) {\n      url += `&amp;status=${status}`;\n    }\n\n    const medications = await client.request(url);\n    return medications;\n  } catch (error) {\n    console.error('Error fetching medications:', error);\n    throw error;\n  }\n}\n\n/**\n * Get encounters\n */\nasync function getEncounters(client, patientId, dateRange = null) {\n  try {\n    let url = `Encounter?patient=${patientId}&amp;_sort=-date`;\n    if (dateRange) {\n      url += `&amp;date=ge${dateRange.start}&amp;date=le${dateRange.end}`;\n    }\n\n    const encounters = await client.request(url);\n    return encounters;\n  } catch (error) {\n    console.error('Error fetching encounters:', error);\n    throw error;\n  }\n}\n\n// ==========================================\n// 3. CREATING RESOURCES\n// ==========================================\n\n/**\n * Create a new observation\n */\nasync function createObservation(client, observationData) {\n  try {\n    const response = await client.request({\n      url: 'Observation',\n      method: 'POST',\n      body: JSON.stringify(observationData),\n      headers: {\n        'Content-Type': 'application/fhir+json'\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error('Error creating observation:', error);\n    throw error;\n  }\n}\n\n/**\n * Example: Create blood pressure observation\n */\nfunction createBloodPressureObservation(patientId, systolic, diastolic) {\n  return {\n    resourceType: 'Observation',\n    status: 'final',\n    category: [{\n      coding: [{\n        system: 'http://terminology.hl7.org/CodeSystem/observation-category',\n        code: 'vital-signs',\n        display: 'Vital Signs'\n      }]\n    }],\n    code: {\n      coding: [{\n        system: 'http://loinc.org',\n        code: '85354-9',\n        display: 'Blood pressure panel'\n      }]\n    },\n    subject: {\n      reference: `Patient/${patientId}`\n    },\n    effectiveDateTime: new Date().toISOString(),\n    component: [\n      {\n        code: {\n          coding: [{\n            system: 'http://loinc.org',\n            code: '8480-6',\n            display: 'Systolic blood pressure'\n          }]\n        },\n        valueQuantity: {\n          value: systolic,\n          unit: 'mmHg',\n          system: 'http://unitsofmeasure.org',\n          code: 'mm[Hg]'\n        }\n      },\n      {\n        code: {\n          coding: [{\n            system: 'http://loinc.org',\n            code: '8462-4',\n            display: 'Diastolic blood pressure'\n          }]\n        },\n        valueQuantity: {\n          value: diastolic,\n          unit: 'mmHg',\n          system: 'http://unitsofmeasure.org',\n          code: 'mm[Hg]'\n        }\n      }\n    ]\n  };\n}\n\n// ==========================================\n// 4. UPDATING RESOURCES\n// ==========================================\n\n/**\n * Update an existing resource\n */\nasync function updateResource(client, resourceType, id, resourceData) {\n  try {\n    const response = await client.request({\n      url: `${resourceType}/${id}`,\n      method: 'PUT',\n      body: JSON.stringify(resourceData),\n      headers: {\n        'Content-Type': 'application/fhir+json'\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error('Error updating resource:', error);\n    throw error;\n  }\n}\n\n// ==========================================\n// 5. BATCH OPERATIONS\n// ==========================================\n\n/**\n * Execute batch request\n */\nasync function executeBatch(client, entries) {\n  const bundle = {\n    resourceType: 'Bundle',\n    type: 'batch',\n    entry: entries\n  };\n\n  try {\n    const response = await client.request({\n      url: '',\n      method: 'POST',\n      body: JSON.stringify(bundle),\n      headers: {\n        'Content-Type': 'application/fhir+json'\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error('Error executing batch:', error);\n    throw error;\n  }\n}\n\n/**\n * Example: Batch read multiple resources\n */\nfunction createBatchReadEntries(resourceRequests) {\n  return resourceRequests.map(req =&gt; ({\n    request: {\n      method: 'GET',\n      url: req\n    }\n  }));\n}\n\n// ==========================================\n// 6. PAGINATION\n// ==========================================\n\n/**\n * Get all pages of a search result\n */\nasync function getAllPages(client, initialUrl) {\n  const allResources = [];\n  let nextUrl = initialUrl;\n\n  while (nextUrl) {\n    try {\n      const bundle = await client.request(nextUrl);\n\n      if (bundle.entry) {\n        bundle.entry.forEach(entry =&gt; {\n          if (entry.resource) {\n            allResources.push(entry.resource);\n          }\n        });\n      }\n\n      // Find next link\n      nextUrl = null;\n      if (bundle.link) {\n        const nextLink = bundle.link.find(link =&gt; link.relation === 'next');\n        if (nextLink) {\n          nextUrl = nextLink.url;\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching page:', error);\n      break;\n    }\n  }\n\n  return allResources;\n}\n\n// ==========================================\n// 7. UTILITY FUNCTIONS\n// ==========================================\n\n/**\n * Extract patient name\n */\nfunction getPatientName(patient) {\n  if (!patient.name || patient.name.length === 0) {\n    return 'Unknown';\n  }\n\n  const name = patient.name[0];\n  const given = name.given ? name.given.join(' ') : '';\n  const family = name.family || '';\n\n  return `${given} ${family}`.trim();\n}\n\n/**\n * Extract observation value\n */\nfunction getObservationValue(observation) {\n  if (observation.valueQuantity) {\n    return `${observation.valueQuantity.value} ${observation.valueQuantity.unit}`;\n  }\n  if (observation.valueCodeableConcept) {\n    return observation.valueCodeableConcept.coding?.[0]?.display ||\n           observation.valueCodeableConcept.text;\n  }\n  if (observation.valueString) {\n    return observation.valueString;\n  }\n  if (observation.component) {\n    return observation.component.map(c =&gt; \n      `${c.code.coding[0].display}: ${c.valueQuantity.value} ${c.valueQuantity.unit}`\n    ).join(', ');\n  }\n  return 'N/A';\n}\n\n/**\n * Format FHIR date\n */\nfunction formatFhirDate(dateString) {\n  if (!dateString) return 'Unknown';\n  const date = new Date(dateString);\n  return date.toLocaleDateString();\n}\n\n// ==========================================\n// 8. EXAMPLE USAGE\n// ==========================================\n\nasync function main() {\n  try {\n    // Initialize client\n    const client = await initializeClient();\n\n    // Get current patient\n    const patient = await getCurrentPatient(client);\n    console.log('Patient Name:', getPatientName(patient));\n\n    // Get vital signs\n    const vitals = await getVitalSigns(client, patient.id);\n    console.log('Vital Signs Count:', vitals.total);\n\n    // Get active conditions\n    const conditions = await getConditions(client, patient.id, 'active');\n    console.log('Active Conditions:', conditions.total);\n\n    // Get active medications\n    const medications = await getMedicationRequests(client, patient.id, 'active');\n    console.log('Active Medications:', medications.total);\n\n  } catch (error) {\n    console.error('Application error:', error);\n  }\n}\n\n// Export functions\nexport {\n  initializeLaunch,\n  initializeClient,\n  getCurrentPatient,\n  getObservations,\n  getVitalSigns,\n  getConditions,\n  getMedicationRequests,\n  getEncounters,\n  createObservation,\n  createBloodPressureObservation,\n  updateResource,\n  executeBatch,\n  getAllPages,\n  getPatientName,\n  getObservationValue,\n  formatFhirDate\n};\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-smart_client_impl-sample-app/","title":"Practical Example: Building a SMART App","text":"<p>proc_appdev2::instr (TBD)</p> <p>Sample Application</p> <p>Here is a link to FHIR Resource Explorer, an interactive application that demonstrates querying a live FHIR R4 server (SMART Health IT Sandbox):</p> <p>Launch FHIR Resource Explorer \u2192{ .md-button .md-button--primary }</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-smart_client_impl/","title":"SMART Client Implementation (Python)","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-smart_client_impl/#python-example","title":"Python Example","text":"<pre><code>\"\"\"\nSMART-on-FHIR Client Implementation in Python\nInstall dependencies: pip install fhirclient\n\"\"\"\n\nfrom fhirclient import client\nfrom fhirclient.models import (\n    patient, observation, condition, medicationrequest,\n    encounter, procedure, allergyintolerance, immunization,\n    diagnosticreport, careplan\n)\nimport datetime\nimport json\n\n\nclass SmartFhirClient:\n    \"\"\"Wrapper for SMART-on-FHIR operations\"\"\"\n\n    def __init__(self, settings):\n        \"\"\"\n        Initialize SMART client\n\n        Args:\n            settings (dict): Configuration dictionary with:\n                - app_id: Client ID\n                - api_base: FHIR server base URL\n                - redirect_uri: OAuth redirect URI (optional)\n        \"\"\"\n        self.settings = {\n            'app_id': settings.get('app_id', 'my_app'),\n            'api_base': settings.get('api_base'),\n            'redirect_uri': settings.get('redirect_uri', 'http://localhost:8000')\n        }\n        self.smart = client.FHIRClient(settings=self.settings)\n\n    # ==========================================\n    # PATIENT OPERATIONS\n    # ==========================================\n\n    def get_patient(self, patient_id):\n        \"\"\"Get patient by ID\"\"\"\n        try:\n            pat = patient.Patient.read(patient_id, self.smart.server)\n            return pat\n        except Exception as e:\n            print(f\"Error reading patient: {e}\")\n            return None\n\n    def search_patients(self, **kwargs):\n        \"\"\"\n        Search for patients\n\n        Args:\n            **kwargs: Search parameters (name, birthdate, identifier, etc.)\n\n        Returns:\n            list: List of Patient resources\n        \"\"\"\n        try:\n            search = patient.Patient.where(struct=kwargs)\n            patients = search.perform_resources(self.smart.server)\n            return patients\n        except Exception as e:\n            print(f\"Error searching patients: {e}\")\n            return []\n\n    def get_patient_name(self, pat):\n        \"\"\"Extract formatted name from patient\"\"\"\n        if not pat.name:\n            return \"Unknown\"\n\n        name = pat.name[0]\n        given = ' '.join(name.given) if name.given else ''\n        family = name.family or ''\n        return f\"{given} {family}\".strip()\n\n    # ==========================================\n    # OBSERVATION OPERATIONS\n    # ==========================================\n\n    def get_observations(self, patient_id, category=None, code=None, \n                        date_range=None, count=10):\n        \"\"\"\n        Get observations for a patient\n\n        Args:\n            patient_id (str): Patient ID\n            category (str): Observation category (e.g., 'vital-signs', 'laboratory')\n            code (str): LOINC code\n            date_range (tuple): (start_date, end_date) as datetime objects\n            count (int): Maximum number of results\n\n        Returns:\n            list: List of Observation resources\n        \"\"\"\n        try:\n            search_params = {\n                'patient': patient_id,\n                '_count': count,\n                '_sort': '-date'\n            }\n\n            if category:\n                search_params['category'] = category\n\n            if code:\n                search_params['code'] = code\n\n            if date_range:\n                start, end = date_range\n                search_params['date'] = f\"ge{start.isoformat()}\"\n                if end:\n                    search_params['date'] = f\"{search_params['date']},le{end.isoformat()}\"\n\n            search = observation.Observation.where(struct=search_params)\n            observations = search.perform_resources(self.smart.server)\n            return observations\n        except Exception as e:\n            print(f\"Error fetching observations: {e}\")\n            return []\n\n    def get_vital_signs(self, patient_id, count=20):\n        \"\"\"Get vital signs for a patient\"\"\"\n        return self.get_observations(\n            patient_id, \n            category='vital-signs',\n            count=count\n        )\n\n    def get_lab_results(self, patient_id, count=20):\n        \"\"\"Get laboratory results for a patient\"\"\"\n        return self.get_observations(\n            patient_id,\n            category='laboratory',\n            count=count\n        )\n\n    def get_observation_value(self, obs):\n        \"\"\"Extract value from observation\"\"\"\n        if obs.valueQuantity:\n            return f\"{obs.valueQuantity.value} {obs.valueQuantity.unit}\"\n        elif obs.valueCodeableConcept:\n            if obs.valueCodeableConcept.coding:\n                return obs.valueCodeableConcept.coding[0].display\n            return obs.valueCodeableConcept.text\n        elif obs.valueString:\n            return obs.valueString\n        elif obs.component:\n            components = []\n            for comp in obs.component:\n                code_display = comp.code.coding[0].display if comp.code.coding else \"Unknown\"\n                value = f\"{comp.valueQuantity.value} {comp.valueQuantity.unit}\"\n                components.append(f\"{code_display}: {value}\")\n            return \", \".join(components)\n        return \"N/A\"\n\n    def create_observation(self, obs_data):\n        \"\"\"\n        Create a new observation\n\n        Args:\n            obs_data (dict): Observation data as dictionary\n\n        Returns:\n            Observation: Created observation resource\n        \"\"\"\n        try:\n            obs = observation.Observation(obs_data)\n            obs.create(self.smart.server)\n            return obs\n        except Exception as e:\n            print(f\"Error creating observation: {e}\")\n            return None\n\n    # ==========================================\n    # CONDITION OPERATIONS\n    # ==========================================\n\n    def get_conditions(self, patient_id, clinical_status=None, category=None):\n        \"\"\"\n        Get conditions for a patient\n\n        Args:\n            patient_id (str): Patient ID\n            clinical_status (str): Clinical status filter (active, inactive, resolved)\n            category (str): Category filter\n\n        Returns:\n            list: List of Condition resources\n        \"\"\"\n        try:\n            search_params = {'patient': patient_id}\n\n            if clinical_status:\n                search_params['clinical-status'] = clinical_status\n\n            if category:\n                search_params['category'] = category\n\n            search = condition.Condition.where(struct=search_params)\n            conditions = search.perform_resources(self.smart.server)\n            return conditions\n        except Exception as e:\n            print(f\"Error fetching conditions: {e}\")\n            return []\n\n    def get_active_conditions(self, patient_id):\n        \"\"\"Get active conditions for a patient\"\"\"\n        return self.get_conditions(patient_id, clinical_status='active')\n\n    # ==========================================\n    # MEDICATION OPERATIONS\n    # ==========================================\n\n    def get_medications(self, patient_id, status=None):\n        \"\"\"\n        Get medication requests for a patient\n\n        Args:\n            patient_id (str): Patient ID\n            status (str): Status filter (active, completed, stopped)\n\n        Returns:\n            list: List of MedicationRequest resources\n        \"\"\"\n        try:\n            search_params = {\n                'patient': patient_id,\n                '_sort': '-authoredon'\n            }\n\n            if status:\n                search_params['status'] = status\n\n            search = medicationrequest.MedicationRequest.where(struct=search_params)\n            medications = search.perform_resources(self.smart.server)\n            return medications\n        except Exception as e:\n            print(f\"Error fetching medications: {e}\")\n            return []\n\n    def get_active_medications(self, patient_id):\n        \"\"\"Get active medications for a patient\"\"\"\n        return self.get_medications(patient_id, status='active')\n\n    def get_medication_name(self, med_request):\n        \"\"\"Extract medication name from MedicationRequest\"\"\"\n        if med_request.medicationCodeableConcept:\n            if med_request.medicationCodeableConcept.coding:\n                return med_request.medicationCodeableConcept.coding[0].display\n            return med_request.medicationCodeableConcept.text\n        return \"Unknown medication\"\n\n    # ==========================================\n    # ENCOUNTER OPERATIONS\n    # ==========================================\n\n    def get_encounters(self, patient_id, status=None, date_range=None):\n        \"\"\"\n        Get encounters for a patient\n\n        Args:\n            patient_id (str): Patient ID\n            status (str): Encounter status\n            date_range (tuple): (start_date, end_date)\n\n        Returns:\n            list: List of Encounter resources\n        \"\"\"\n        try:\n            search_params = {\n                'patient': patient_id,\n                '_sort': '-date'\n            }\n\n            if status:\n                search_params['status'] = status\n\n            if date_range:\n                start, end = date_range\n                search_params['date'] = f\"ge{start.isoformat()}\"\n                if end:\n                    search_params['date'] = f\"{search_params['date']},le{end.isoformat()}\"\n\n            search = encounter.Encounter.where(struct=search_params)\n            encounters = search.perform_resources(self.smart.server)\n            return encounters\n        except Exception as e:\n            print(f\"Error fetching encounters: {e}\")\n            return []\n\n    # ==========================================\n    # PROCEDURE OPERATIONS\n    # ==========================================\n\n    def get_procedures(self, patient_id, date_range=None):\n        \"\"\"Get procedures for a patient\"\"\"\n        try:\n            search_params = {'patient': patient_id}\n\n            if date_range:\n                start, end = date_range\n                search_params['date'] = f\"ge{start.isoformat()}\"\n                if end:\n                    search_params['date'] = f\"{search_params['date']},le{end.isoformat()}\"\n\n            search = procedure.Procedure.where(struct=search_params)\n            procedures = search.perform_resources(self.smart.server)\n            return procedures\n        except Exception as e:\n            print(f\"Error fetching procedures: {e}\")\n            return []\n\n    # ==========================================\n    # ALLERGY OPERATIONS\n    # ==========================================\n\n    def get_allergies(self, patient_id, clinical_status=None):\n        \"\"\"Get allergies for a patient\"\"\"\n        try:\n            search_params = {'patient': patient_id}\n\n            if clinical_status:\n                search_params['clinical-status'] = clinical_status\n\n            search = allergyintolerance.AllergyIntolerance.where(struct=search_params)\n            allergies = search.perform_resources(self.smart.server)\n            return allergies\n        except Exception as e:\n            print(f\"Error fetching allergies: {e}\")\n            return []\n\n    # ==========================================\n    # IMMUNIZATION OPERATIONS\n    # ==========================================\n\n    def get_immunizations(self, patient_id):\n        \"\"\"Get immunizations for a patient\"\"\"\n        try:\n            search_params = {'patient': patient_id}\n            search = immunization.Immunization.where(struct=search_params)\n            immunizations = search.perform_resources(self.smart.server)\n            return immunizations\n        except Exception as e:\n            print(f\"Error fetching immunizations: {e}\")\n            return []\n\n    # ==========================================\n    # DIAGNOSTIC REPORT OPERATIONS\n    # ==========================================\n\n    def get_diagnostic_reports(self, patient_id, category=None):\n        \"\"\"Get diagnostic reports for a patient\"\"\"\n        try:\n            search_params = {'patient': patient_id}\n\n            if category:\n                search_params['category'] = category\n\n            search = diagnosticreport.DiagnosticReport.where(struct=search_params)\n            reports = search.perform_resources(self.smart.server)\n            return reports\n        except Exception as e:\n            print(f\"Error fetching diagnostic reports: {e}\")\n            return []\n\n    # ==========================================\n    # CARE PLAN OPERATIONS\n    # ==========================================\n\n    def get_care_plans(self, patient_id, status=None):\n        \"\"\"Get care plans for a patient\"\"\"\n        try:\n            search_params = {'patient': patient_id}\n\n            if status:\n                search_params['status'] = status\n\n            search = careplan.CarePlan.where(struct=search_params)\n            plans = search.perform_resources(self.smart.server)\n            return plans\n        except Exception as e:\n            print(f\"Error fetching care plans: {e}\")\n            return []\n\n    # ==========================================\n    # UTILITY FUNCTIONS\n    # ==========================================\n\n    def format_date(self, fhir_date):\n        \"\"\"Format FHIR date/datetime for display\"\"\"\n        if not fhir_date:\n            return \"Unknown\"\n\n        if isinstance(fhir_date, str):\n            try:\n                dt = datetime.datetime.fromisoformat(fhir_date.replace('Z', '+00:00'))\n                return dt.strftime('%Y-%m-%d')\n            except:\n                return fhir_date\n        return str(fhir_date)\n\n    def get_code_display(self, codeable_concept):\n        \"\"\"Extract display text from CodeableConcept\"\"\"\n        if not codeable_concept:\n            return \"Unknown\"\n\n        if codeable_concept.coding and len(codeable_concept.coding) &gt; 0:\n            return codeable_concept.coding[0].display or codeable_concept.coding[0].code\n\n        return codeable_concept.text or \"Unknown\"\n\n\n# ==========================================\n# EXAMPLE USAGE\n# ==========================================\n\ndef main():\n    \"\"\"Example usage of SMART FHIR client\"\"\"\n\n    # Configure client for SMART Health IT sandbox\n    settings = {\n        'app_id': 'my_app',\n        'api_base': 'https://launch.smarthealthit.org/v/r4/fhir'\n    }\n\n    # Initialize client\n    smart_client = SmartFhirClient(settings)\n\n    # Example patient ID from sandbox\n    patient_id = 'smart-1288992'\n\n    # Get patient demographics\n    print(\"=\" * 50)\n    print(\"PATIENT INFORMATION\")\n    print(\"=\" * 50)\n    pat = smart_client.get_patient(patient_id)\n    if pat:\n        print(f\"Name: {smart_client.get_patient_name(pat)}\")\n        print(f\"Gender: {pat.gender}\")\n        print(f\"Birth Date: {pat.birthDate.isostring if pat.birthDate else 'Unknown'}\")\n        print(f\"ID: {pat.id}\")\n\n    # Get vital signs\n    print(\"\\n\" + \"=\" * 50)\n    print(\"VITAL SIGNS\")\n    print(\"=\" * 50)\n    vitals = smart_client.get_vital_signs(patient_id, count=5)\n    for obs in vitals:\n        code_display = smart_client.get_code_display(obs.code)\n        value = smart_client.get_observation_value(obs)\n        date = smart_client.format_date(obs.effectiveDateTime.isostring if obs.effectiveDateTime else None)\n        print(f\"{code_display}: {value} ({date})\")\n\n    # Get active conditions\n    print(\"\\n\" + \"=\" * 50)\n    print(\"ACTIVE CONDITIONS\")\n    print(\"=\" * 50)\n    conditions = smart_client.get_active_conditions(patient_id)\n    for cond in conditions:\n        code_display = smart_client.get_code_display(cond.code)\n        onset = smart_client.format_date(cond.onsetDateTime.isostring if hasattr(cond, 'onsetDateTime') and cond.onsetDateTime else None)\n        print(f\"{code_display} (Onset: {onset})\")\n\n    # Get active medications\n    print(\"\\n\" + \"=\" * 50)\n    print(\"ACTIVE MEDICATIONS\")\n    print(\"=\" * 50)\n    medications = smart_client.get_active_medications(patient_id)\n    for med in medications:\n        med_name = smart_client.get_medication_name(med)\n        status = med.status\n        print(f\"{med_name} (Status: {status})\")\n        if med.dosageInstruction and len(med.dosageInstruction) &gt; 0:\n            dosage = med.dosageInstruction[0]\n            if dosage.text:\n                print(f\"  Dosage: {dosage.text}\")\n\n    # Get recent encounters\n    print(\"\\n\" + \"=\" * 50)\n    print(\"RECENT ENCOUNTERS\")\n    print(\"=\" * 50)\n    encounters = smart_client.get_encounters(patient_id)\n    for enc in encounters[:5]:  # Limit to 5\n        enc_type = smart_client.get_code_display(enc.type[0]) if enc.type and len(enc.type) &gt; 0 else \"Unknown\"\n        status = enc.status\n        period_start = smart_client.format_date(enc.period.start.isostring if enc.period and enc.period.start else None)\n        print(f\"{enc_type} - {status} ({period_start})\")\n\n    # Get allergies\n    print(\"\\n\" + \"=\" * 50)\n    print(\"ALLERGIES\")\n    print(\"=\" * 50)\n    allergies = smart_client.get_allergies(patient_id)\n    for allergy in allergies:\n        allergen = smart_client.get_code_display(allergy.code)\n        clinical_status = allergy.clinicalStatus.coding[0].code if allergy.clinicalStatus and allergy.clinicalStatus.coding else \"Unknown\"\n        print(f\"{allergen} (Status: {clinical_status})\")\n\n    # Get immunizations\n    print(\"\\n\" + \"=\" * 50)\n    print(\"IMMUNIZATIONS\")\n    print(\"=\" * 50)\n    immunizations = smart_client.get_immunizations(patient_id)\n    for imm in immunizations:\n        vaccine = smart_client.get_code_display(imm.vaccineCode)\n        date = smart_client.format_date(imm.occurrenceDateTime.isostring if hasattr(imm, 'occurrenceDateTime') and imm.occurrenceDateTime else None)\n        print(f\"{vaccine} ({date})\")\n\n\n# ==========================================\n# EXAMPLE: CREATING AN OBSERVATION\n# ==========================================\n\ndef create_blood_pressure_example(smart_client, patient_id):\n    \"\"\"Example: Create a blood pressure observation\"\"\"\n\n    obs_data = {\n        'resourceType': 'Observation',\n        'status': 'final',\n        'category': [{\n            'coding': [{\n                'system': 'http://terminology.hl7.org/CodeSystem/observation-category',\n                'code': 'vital-signs',\n                'display': 'Vital Signs'\n            }]\n        }],\n        'code': {\n            'coding': [{\n                'system': 'http://loinc.org',\n                'code': '85354-9',\n                'display': 'Blood pressure panel'\n            }],\n            'text': 'Blood pressure'\n        },\n        'subject': {\n            'reference': f'Patient/{patient_id}'\n        },\n        'effectiveDateTime': datetime.datetime.now().isoformat(),\n        'component': [\n            {\n                'code': {\n                    'coding': [{\n                        'system': 'http://loinc.org',\n                        'code': '8480-6',\n                        'display': 'Systolic blood pressure'\n                    }]\n                },\n                'valueQuantity': {\n                    'value': 120,\n                    'unit': 'mmHg',\n                    'system': 'http://unitsofmeasure.org',\n                    'code': 'mm[Hg]'\n                }\n            },\n            {\n                'code': {\n                    'coding': [{\n                        'system': 'http://loinc.org',\n                        'code': '8462-4',\n                        'display': 'Diastolic blood pressure'\n                    }]\n                },\n                'valueQuantity': {\n                    'value': 80,\n                    'unit': 'mmHg',\n                    'system': 'http://unitsofmeasure.org',\n                    'code': 'mm[Hg]'\n                }\n            }\n        ]\n    }\n\n    new_obs = smart_client.create_observation(obs_data)\n    if new_obs:\n        print(f\"Created observation with ID: {new_obs.id}\")\n    return new_obs\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/","title":"Testing and Debugging","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#public-sandboxes","title":"Public Sandboxes","text":"<p>SMART Health IT Sandbox URL: https://launch.smarthealthit.org Features: - R4 FHIR server - Pre-populated test patients - OAuth 2.0 authorization - Launch simulator - No registration required for testing  </p> <p>Test Patients: - smart-1288992 (Adult with various conditions) - smart-1032702 (Pediatric patient) - smart-1137192 (Elderly patient)  </p> <p>HAPI FHIR Server  URL: http://hapi.fhir.org/baseR4 Features: - Public R4 server - No authentication - Full CRUD operations - Good for basic FHIR testing  </p> <p>SMART App Gallery URL: https://gallery.smarthealthit.org Test your app with various EHR scenarios  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#testing-tools","title":"Testing Tools","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#postman-insomnia","title":"Postman / Insomnia","text":"<ul> <li>HTTP client for API testing  </li> <li>Create collections of FHIR requests  </li> <li>Manage OAuth tokens  </li> <li>Save test scenarios  </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#curl-examples","title":"cURL Examples","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#get-patient","title":"Get patient","text":"<pre><code>curl -H \"Accept: application/fhir+json\" \\\n   https://launch.smarthealthit.org/v/r4/fhir/Patient/smart-1288992\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#search-observations","title":"Search observations","text":"<pre><code>curl -H \"Accept: application/fhir+json\" \\\n   \"https://launch.smarthealthit.org/v/r4/fhir/Observation?patient=smart-1288992&amp;_count=5\"\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#with-authentication","title":"With authentication","text":"<pre><code>curl -H \"Accept: application/fhir+json\" \\\n   -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" \\\n   https://your-fhir-server/Patient/123\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#fhir-validator","title":"FHIR Validator","text":"<p>URL: https://validator.fhir.org  </p> <ul> <li>Validate FHIR resources  </li> <li>Check profile conformance  </li> <li>Test against specific IGs  </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#inferno-testing-tool","title":"Inferno Testing Tool","text":"<p>URL: https://inferno.healthit.gov - Test FHIR API conformance - US Core validation - SMART App Launch testing - Bulk Data testing  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#crucible","title":"Crucible","text":"<p>URL: https://projectcrucible.org - FHIR conformance testing - Automated test suites  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#debugging-techniques","title":"Debugging Techniques","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#1-check-server-metadata","title":"1. Check Server Metadata","text":"<p><code>GET /metadata</code></p> <p>Verify: - Supported resources - Available operations - OAuth endpoints - Supported search parameters  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#2-test-oauth-flow-step-by-step","title":"2. Test OAuth Flow Step-by-Step","text":"<p>Step 1: Get configuration  </p> <p><code>GET /.well-known/smart-configuration</code></p> <p>Step 2: Authorization request  </p> <ul> <li>Check redirect_uri matches registered value  </li> <li>Verify scope format  </li> <li>Include state parameter  </li> </ul> <p>Step 3: Token exchange  </p> <ul> <li>Verify code is fresh (&lt; 5 minutes)  </li> <li>Check client_id matches  </li> <li>Ensure redirect_uri is identical  </li> </ul> <p>Step 4: Validate token  </p> <ul> <li>Check token expiration  </li> <li>Verify scope in response  </li> <li>Confirm patient context  </li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#3-common-error-patterns","title":"3. Common Error Patterns","text":"<p>401 Unauthorized: - Missing Authorization header - Invalid or expired token - Token not found in request  </p> <p>403 Forbidden: - Insufficient scope - Patient context mismatch - Resource not allowed for user  </p> <p>404 Not Found: - Resource ID doesn't exist - Wrong FHIR server base URL - Resource deleted  </p> <p>422 Unprocessable Entity: - Invalid resource content - Missing required elements - Data type mismatch - Business rule violation  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#4-logging-and-monitoring","title":"4. Logging and Monitoring","text":"<p>Log these items: - All HTTP requests/responses - Token acquisition and refresh - Search parameters used - Error responses with details - Performance metrics  </p> <p>Example logging format: [2024-10-15 10:30:00] GET /Patient/123 Authorization: Bearer eyJ0eX... Response: 200 OK (234ms)  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#5-browser-developer-tools","title":"5. Browser Developer Tools","text":"<p>Network Tab: - Inspect all HTTP traffic - View request/response headers - Check timing information - Copy requests as cURL  </p> <p>Console Tab: - JavaScript errors - SMART client library logs - Custom debug messages  </p> <p>Application/Storage Tab: - Session storage (token info) - Cookies - IndexedDB (if used)  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#6-fhir-query-debugging","title":"6. FHIR Query Debugging","text":"<p>Start simple: GET /Patient/123  </p> <p>Add complexity gradually: GET /Patient?name=Smith GET /Patient?name=Smith&amp;birthdate=1980-01-01 GET /Patient?name=Smith&amp;_include=Patient:organization  </p> <p>Use _summary for quick checks: GET /Patient/123?_summary=true  </p> <p>Check total counts: GET /Observation?patient=123&amp;_summary=count  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#7-validate-resources-before-submission","title":"7. Validate Resources Before Submission","text":"<p>Use $validate operation: POST /Patient/$validate Content-Type: application/fhir+json  </p> <p>Body: Your patient resource  </p> <p>Response: OperationOutcome with validation results  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#8-test-data-scenarios","title":"8. Test Data Scenarios","text":"<p>Create test cases for: - Minimal valid resource - Complete resource with all optional elements - Invalid resources (missing required, wrong type) - Edge cases (empty arrays, null values) - Large datasets (pagination testing) - Concurrent requests - Rate limiting  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#9-performance-testing","title":"9. Performance Testing","text":"<p>Monitor: - Response times for common queries - Bundle processing time - Token refresh latency - Search result pagination - Large resource retrieval  </p> <p>Tools: - Apache JMeter - k6 load testing - Locust  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#common-pitfalls-and-solutions","title":"Common Pitfalls and Solutions","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#1-cors-issues-browser-apps","title":"1. CORS Issues (Browser Apps)","text":"<p>Problem: Cross-Origin Resource Sharing blocked Solution: - Server must include CORS headers - Use proxy in development - Check Access-Control-Allow-Origin header  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#2-token-expiration","title":"2. Token Expiration","text":"<p>Problem: 401 errors after token expires Solution: - Implement automatic token refresh - Check expires_in from token response - Handle 401 by refreshing token - Store refresh_token securely  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#3-patient-context-loss","title":"3. Patient Context Loss","text":"<p>Problem: Wrong patient data displayed Solution: - Always verify patient ID from token - Don't trust client-side patient ID - Validate patient context on each request  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#4-search-result-pagination","title":"4. Search Result Pagination","text":"<p>Problem: Only getting first page of results Solution: - Check bundle.link for \"next\" relation - Implement pagination loop - Use _count to control page size  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#5-reference-resolution","title":"5. Reference Resolution","text":"<p>Problem: Can't access referenced resources Solution: - Use _include to fetch related resources - Make separate requests for references - Check reference format (relative vs absolute)  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#6-datetime-formats","title":"6. Date/Time Formats","text":"<p>Problem: Invalid date format errors Solution: - Use ISO 8601 format - FHIR date: YYYY-MM-DD - FHIR dateTime: YYYY-MM-DDThh:mm:ss+zz:zz - FHIR instant: YYYY-MM-DDThh:mm:ss.sss+zz:zz  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#7-code-system-versions","title":"7. Code System Versions","text":"<p>Problem: Code validation failures Solution: - Include system URL with codes - Specify version if needed - Use standard terminologies (LOINC, SNOMED)  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#8-missing-required-elements","title":"8. Missing Required Elements","text":"<p>Problem: 422 Unprocessable Entity Solution: - Check resource profile requirements - Validate before submission - Review OperationOutcome details  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#9-scope-insufficient","title":"9. Scope Insufficient","text":"<p>Problem: 403 Forbidden despite authorization Solution: - Request appropriate scopes during auth - Check granted scopes in token response - Verify scope format (patient/Resource.read)  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#10-pkce-verification-failure","title":"10. PKCE Verification Failure","text":"<p>Problem: Token exchange fails with PKCE error Solution: - Store code_verifier in session - Send same verifier in token request - Use correct code_challenge_method (S256)  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#testing-checklist","title":"Testing Checklist","text":"<p>Authentication &amp; Authorization: \u25a1 App can discover SMART configuration \u25a1 Authorization request includes all required parameters \u25a1 Authorization redirects to correct URI \u25a1 Token exchange succeeds \u25a1 Access token is valid and not expired \u25a1 Refresh token works (if applicable) \u25a1 Appropriate scopes are granted \u25a1 Patient context is correct  </p> <p>Resource Operations: \u25a1 Can read individual resources \u25a1 Search returns expected results \u25a1 Create operation succeeds \u25a1 Update operation succeeds \u25a1 Delete operation succeeds (if supported) \u25a1 Batch/transaction operations work \u25a1 Conditional operations work  </p> <p>Data Quality: \u25a1 Required elements are present \u25a1 Data types are correct \u25a1 Code systems are valid \u25a1 References are valid \u25a1 Extensions are properly formatted \u25a1 Profile conformance is verified  </p> <p>Error Handling: \u25a1 401 errors trigger re-authentication \u25a1 403 errors are handled gracefully \u25a1 404 errors display appropriate message \u25a1 Network errors are caught \u25a1 Validation errors are displayed \u25a1 Timeout handling works  </p> <p>Performance: \u25a1 Queries complete in reasonable time \u25a1 Pagination works correctly \u25a1 Token refresh doesn't block UI \u25a1 Large result sets are handled \u25a1 Concurrent requests work properly  </p> <p>Security: \u25a1 HTTPS is enforced \u25a1 Tokens are stored securely \u25a1 PKCE is implemented (public clients) \u25a1 State parameter prevents CSRF \u25a1 Token expiration is respected \u25a1 Sensitive data is not logged  </p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#sample-test-script-python","title":"Sample Test Script (Python)","text":"<pre><code>import requests\nimport json\n\nBASE_URL = \"https://launch.smarthealthit.org/v/r4/fhir\"\nPATIENT_ID = \"smart-1288992\"\n\ndef test_read_patient():\n    \"\"\"Test reading a patient resource\"\"\"\n    url = f\"{BASE_URL}/Patient/{PATIENT_ID}\"\n    headers = {\"Accept\": \"application/fhir+json\"}\n\n    response = requests.get(url, headers=headers)\n    assert response.status_code == 200\n\n    patient = response.json()\n    assert patient[\"resourceType\"] == \"Patient\"\n    assert patient[\"id\"] == PATIENT_ID\n    print(\"\u2713 Patient read successful\")\n\ndef test_search_observations():\n    \"\"\"Test searching observations\"\"\"\n    url = f\"{BASE_URL}/Observation\"\n    params = {\n        \"patient\": PATIENT_ID,\n        \"category\": \"vital-signs\",\n        \"_count\": 5,\n        \"_sort\": \"-date\"\n    }\n    headers = {\"Accept\": \"application/fhir+json\"}\n\n    response = requests.get(url, params=params, headers=headers)\n    assert response.status_code == 200\n\n    bundle = response.json()\n    assert bundle[\"resourceType\"] == \"Bundle\"\n    assert bundle[\"type\"] == \"searchset\"\n    print(f\"\u2713 Found {bundle.get('total', 0)} observations\")\n\ndef test_search_with_include():\n    \"\"\"Test search with _include\"\"\"\n    url = f\"{BASE_URL}/Observation\"\n    params = {\n        \"patient\": PATIENT_ID,\n        \"_count\": 5,\n        \"_include\": \"Observation:patient\"\n    }\n    headers = {\"Accept\": \"application/fhir+json\"}\n\n    response = requests.get(url, params=params, headers=headers)\n    assert response.status_code == 200\n\n    bundle = response.json()\n    # Should include both observations and patient\n    resource_types = [e[\"resource\"][\"resourceType\"] for e in bundle.get(\"entry\", [])]\n    assert \"Observation\" in resource_types\n    assert \"Patient\" in resource_types\n    print(\"\u2713 Include parameter working\")\n\ndef test_invalid_resource():\n    \"\"\"Test that invalid resource ID returns 404\"\"\"\n    url = f\"{BASE_URL}/Patient/invalid-id-12345\"\n    headers = {\"Accept\": \"application/fhir+json\"}\n\n    response = requests.get(url, headers=headers)\n    assert response.status_code == 404\n    print(\"\u2713 404 handling correct\")\n\ndef test_metadata():\n    \"\"\"Test capability statement retrieval\"\"\"\n    url = f\"{BASE_URL}/metadata\"\n    headers = {\"Accept\": \"application/fhir+json\"}\n\n    response = requests.get(url, headers=headers)\n    assert response.status_code == 200\n\n    capability = response.json()\n    assert capability[\"resourceType\"] == \"CapabilityStatement\"\n    assert capability[\"fhirVersion\"] == \"4.0.1\"\n    print(\"\u2713 Metadata retrieved successfully\")\n\nif __name__ == \"__main__\":\n    test_read_patient()\n    test_search_observations()\n    test_search_with_include()\n    test_invalid_resource()\n    test_metadata()\n    print(\"\\n\u2713 All tests passed!\")\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-07-hands-on-practice/deepdive-testing-and-debugging/#debuggin-oauth-flow","title":"Debuggin OAuth Flow","text":"<ol> <li> <p>Authorization Request Debug:    console.log(\"Auth URL:\", authUrl);    console.log(\"Client ID:\", clientId);    console.log(\"Redirect URI:\", redirectUri);    console.log(\"Scopes:\", scopes);    console.log(\"State:\", state);  </p> </li> <li> <p>Token Response Debug:    console.log(\"Access Token:\", response.access_token.substring(0, 20) + \"...\");    console.log(\"Token Type:\", response.token_type);    console.log(\"Expires In:\", response.expires_in);    console.log(\"Scope:\", response.scope);    console.log(\"Patient:\", response.patient);  </p> </li> <li> <p>API Request Debug:    console.log(\"Request URL:\", url);    console.log(\"Method:\", method);    console.log(\"Headers:\", headers);    console.log(\"Token Present:\", !!headers.Authorization);  </p> </li> <li> <p>Error Response Debug:    console.error(\"Status:\", error.response.status);    console.error(\"Status Text:\", error.response.statusText);    console.error(\"Response Body:\", error.response.data);  </p> </li> </ol> <pre><code>if (error.response.data.resourceType === \"OperationOutcome\") {\n  error.response.data.issue.forEach(issue =&gt; {\n    console.error(`${issue.severity}: ${issue.diagnostics}`);\n  });\n}\n</code></pre>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-08-wrap-up/","title":"Wrap-Up","text":"<p>This section summarizes the workshop, wrapping up the 'deep dive'.</p> <ul> <li>Key Takeawyas</li> <li>Summary</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-08-wrap-up/deepdive-key-takeaways/","title":"Deepdive key takeaways","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-08-wrap-up/deepdive-key-takeaways/#key-takeaways","title":"Key Takeaways","text":"<p>Essential aspects of SMART-on-FHIR:</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-08-wrap-up/deepdive-key-takeaways/#core-concepts","title":"Core Concepts","text":"<ol> <li>SMART-on-FHIR combines OAuth 2.0 authorization with FHIR REST APIs to enable secure app integration with EHR systems</li> <li>FHIR Resources are the building blocks:</li> <li>Patient : Demographics and administrative data</li> <li>Observation : Clinical measurements and findings</li> <li>Condition : Diagnoses and problems</li> <li>MedicationRequest : Prescriptions and orders</li> <li>Encounter : Healthcare interactions</li> <li>And many more interconnected resources</li> <li>Authorization Flow :</li> <li>Launch \u2192 Authorization \u2192 Token Exchange \u2192 API Access</li> <li>Scopes control access granularity (patient/Resource.read)</li> <li>Context provides patient/encounter information</li> <li>FHIR Search is powerful:</li> <li>Parameter-based queries</li> <li>Chaining and reverse chaining</li> <li>Include/revinclude for related resources</li> <li>Pagination for large result sets</li> </ol>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-08-wrap-up/deepdive-key-takeaways/#practical-implementation","title":"Practical Implementation","text":"<p>The interactive React application demonstrates:</p> <ul> <li>Connecting to the SMART Health IT sandbox</li> <li>Retrieving various resource types</li> <li>Displaying clinical data in user-friendly format</li> <li>Handling errors gracefully</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-08-wrap-up/deepdive-key-takeaways/#best-practices","title":"Best Practices","text":"<ul> <li>Always validate resources before submission</li> <li>Implement proper error handling for 401/403/404 responses</li> <li>Use refresh tokens for long-running sessions</li> <li>Cache capability statements</li> <li>Log OAuth flow for debugging</li> <li>Test with multiple patient scenarios</li> <li>Follow US Core or relevant implementation guides</li> </ul>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-08-wrap-up/deepdive-key-takeaways/#resources-for-further-learning","title":"Resources for Further Learning","text":"<ul> <li>SMART App Launch:http://hl7.org/fhir/smart-app-launch/</li> <li>FHIR R4 Specification:http://hl7.org/fhir/R4/</li> <li>US Core Implementation Guide:http://hl7.org/fhir/us/core/</li> <li>SMART Health IT Sandbox:https://launch.smarthealthit.org</li> </ul> <p>Code examples (JavaScript and Python) and the interactive application should serve as a foundation to start building SMART-on-FHIR applications that integrate with healthcare systems.</p>"},{"location":"sec_ehealth/sec_deepdive/eh-dd-08-wrap-up/deepdive-summary/","title":"Summary","text":""},{"location":"sec_ehealth/sec_deepdive/eh-dd-08-wrap-up/deepdive-summary/#smart-on-fhir-complete-architecture-diagram","title":"SMART-on-FHIR Complete Architecture (diagram)","text":"graph TB     subgraph Client[\"Client Application Layer\"]         WebApp[Web Application]         MobileApp[Mobile Application]         NativeApp[Desktop Application]     end      subgraph SMARTLib[\"SMART Client Library\"]         AuthHandler[Authorization Handler]         TokenMgr[Token Manager]         APIClient[API Client]         ContextMgr[Context Manager]     end      subgraph AuthServer[\"Authorization Server\"]         AuthEndpoint[Authorization Endpoint]         TokenEndpoint[Token Endpoint]         UserAuth[User Authentication]         ScopeValidator[Scope Validator]         ConsentMgr[Consent Manager]     end      subgraph FHIRServer[\"FHIR Server\"]         RESTEndpoint[REST API Endpoint]         ResourceStore[Resource Storage]         SearchEngine[Search Engine]         ValidationEngine[Validation Engine]         AccessControl[Access Control]     end      subgraph DataLayer[\"Data Layer\"]         PatientData[(Patient Data)]         ClinicalData[(Clinical Data)]         AdminData[(Administrative Data)]     end      subgraph Terminology[\"Terminology Services\"]         LOINC[LOINC]         SNOMED[SNOMED CT]         RxNorm[RxNorm]         ICD10[ICD-10]     end      WebApp --&gt; SMARTLib     MobileApp --&gt; SMARTLib     NativeApp --&gt; SMARTLib      SMARTLib --&gt; AuthServer     SMARTLib --&gt; FHIRServer      AuthHandler --&gt; AuthEndpoint     TokenMgr --&gt; TokenEndpoint     APIClient --&gt; RESTEndpoint      AuthEndpoint --&gt; UserAuth     AuthEndpoint --&gt; ScopeValidator     AuthEndpoint --&gt; ConsentMgr      TokenEndpoint --&gt; ScopeValidator      RESTEndpoint --&gt; SearchEngine     RESTEndpoint --&gt; ValidationEngine     RESTEndpoint --&gt; AccessControl     RESTEndpoint --&gt; ResourceStore      ResourceStore --&gt; PatientData     ResourceStore --&gt; ClinicalData     ResourceStore --&gt; AdminData      ValidationEngine --&gt; Terminology     SearchEngine --&gt; Terminology"},{"location":"sec_freeform/","title":"Concepts, Essays and more","text":"<p>This section contains speculative concepts, technical essays, 'technical memoirs', and other, somewhat free-form pieces of text.</p> <ul> <li>IBM-SanFrancisco</li> <li>Accessibility with AI</li> <li>Accessibility with AI (Concept Note)</li> <li>GenAI Landscape in 2025</li> <li>The Long Arc of Digital Identity</li> </ul>"},{"location":"sec_freeform/ai-accessibility/","title":"Accessibility with AI","text":"<p>A Technical Daydream. While developing this site, it occurred to me that while we\u2019ve made great strides in techcomm automation \u2014 reproducibility, modularity, re-use, etc. \u2014 we\u2019re still leaving some readers behind. Sightless users, in particular, often encounter diagrams that are visually rich but semantically opaque.</p> <p>\"Our great strides in techcomm automation\" thus, while working on this site, started to attract quotation marks: figuring out how to make MkDocs content WCAG-compliant turned out to be more convoluted than expected. The basics are fine, but anything beyond static text (especially diagrams) quickly becomes a mess.</p> <p>Mermaid won't expose ALT text reliably (or it will and it's just me forgetting so say please), SVGs lack accessible markup, and plugins seem allergic to ARIA roles. I spend more time than I\u2019d like chasing down rendering quirks and testing screen reader behavior, just to confirm what isn't working. Every fix introduces a new problem.</p> <p>So I'm thinking (or daydreaming), what if accessibility wasn\u2019t a bolt-on? What if it were baked into the authoring flow, nudged along by AI that actually understands context \u2014 not just checking boxes, but helping us describe what a diagram means, not just what it looks like?</p> <p>What if our CI/CD pipelines didn\u2019t just validate syntax and links, but flagged missing ALT text with the same urgency as a broken build? What if our authoring tools could suggest meaningful descriptions, catch compliance gaps early, and even learn from our writing style over time?</p> <p>This page sketches out that daydream. Of a system that's format-agnostic, author-friendly, and built to slot into existing workflows without drama. Whether you\u2019re diagramming infrastructure or documenting edge-case YAML quirks, the goal is the same: make accessibility proactive, reproducible, and just as modular as the rest of your stack.</p>"},{"location":"sec_freeform/ai-accessibility/#the-problem","title":"The Problem","text":"<p>The problem \u2014 to recap briefly \u2014 is this: visual content \u2014 diagrams, charts, SVGs, flow states \u2014 is often inaccessible to screen readers. Even when authors include <code>alt</code> text, it\u2019s usually terse and lacks narrative depth.</p> <p>What\u2019s missing is a system that:</p> <ul> <li>Detects visual content across formats</li> <li>Suggests meaningful ALT and DESC metadata</li> <li>Integrates into authoring tools and CI</li> <li>Learns from context and glossary terms</li> </ul> <p>Next, some sketches of this daydreamed system before I forget even the raw ideas.</p>"},{"location":"sec_freeform/ai-accessibility/#structure-whos-doing-what-and-why","title":"Structure: Who\u2019s Doing What, and Why","text":"<p>Before diving into flows and fallbacks, it helps to map out the cast of characters.</p> <p>Here is a diagram that lays out the principal or core components of the accessibility infrastructure \u2014 authoring tools, metadata processors, AI helpers, and validation pipelines. Each one plays a role in making sure diagrams aren\u2019t just pretty, but also meaningful to every reader.</p> <p>It\u2019s not about reinventing the stack, it\u2019s about making sure accessibility has a seat at the table from the start.</p> graph TD     A[\"MCP Server Metadata &amp; Compliance Processor\"] --&gt; B[\"RAG Workflow Retrieval-Augmented Generation\"]     B --&gt; C[\"Authoring Plugin IDE Extension\"]     A --&gt; D[\"CI/CD Integration Validation Pipeline\"]     C --&gt; E[\"Markdown + Diagrams Content Surface\"]     D --&gt; E"},{"location":"sec_freeform/ai-accessibility/#component-breakdown","title":"Component Breakdown","text":""},{"location":"sec_freeform/ai-accessibility/#mcp-server-metadata-compliance-processor","title":"MCP Server (Metadata &amp; Compliance Processor)","text":"<ul> <li>Central engine that parses content, validates accessibility metadata, and coordinates injection</li> <li>Handles multiple formats: Markdown, Mermaid, PlantUML, SVG, PNG</li> <li>Exposes APIs for plugins and CI tools</li> </ul>"},{"location":"sec_freeform/ai-accessibility/#rag-workflow-retrieval-augmented-generation","title":"RAG Workflow (Retrieval-Augmented Generation)","text":"<ul> <li>AI model that retrieves glossary terms, headings, and context</li> <li>Generates rich ALT and DESC content</li> <li>Learns from previous authoring patterns</li> </ul>"},{"location":"sec_freeform/ai-accessibility/#authoring-plugin","title":"Authoring Plugin","text":"<ul> <li>IDE extension (e.g., VS Code, Obsidian, enterprise-class XML authoring tools)</li> <li>Provides inline suggestions for ALT/DESC</li> <li>Injects metadata and previews screen reader output</li> <li>Connects to MCP Server for live feedback</li> </ul>"},{"location":"sec_freeform/ai-accessibility/#cicd-integration","title":"CI/CD Integration","text":"<ul> <li>GitHub Action or CLI tool</li> <li>Validates accessibility metadata during builds</li> <li>Flags missing or malformed ALT/DESC</li> <li>Acts as a gatekeeper of authoring toolchain-level style guide rules</li> </ul>"},{"location":"sec_freeform/ai-accessibility/#markdown-diagrams","title":"Markdown + Diagrams","text":"<ul> <li>The authored content: Markdown files, embedded diagrams, images</li> <li>Receives injected metadata from MCP and plugin</li> <li>Becomes fully AODA-compliant before deployment</li> </ul> <pre><code>jobs:\n  accessibility-check:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Run MCP Validator\n        run: mcp validate docs/\n</code></pre>"},{"location":"sec_freeform/ai-accessibility/#authoring-style-guide-format-agnostic","title":"Authoring Style Guide (Format-Agnostic)","text":"Format Required Metadata Mermaid <code>accTitle:</code> and <code>accDescr</code> below diagram type declaration, e.g., <code>graph TD</code> PlantUML Same as Mermaid (TBD) SVG (inline) <code>&lt;title&gt;</code> + <code>&lt;desc&gt;</code> inside <code>&lt;svg&gt;</code> PNG/JPEG Markdown<code>![alt text](...)</code> + nearby description Canvas/WebGL External fallback or longform description"},{"location":"sec_freeform/ai-accessibility/#data-flow-how-metadata-moves-and-evolves","title":"Data Flow: How Metadata Moves and Evolves","text":"<p>Sometimes metadata is missing, malformed, or just plain confusing. This diagram shows how the system handles those moments gracefully. Whether it\u2019s triggering AI suggestions, prompting manual overrides, or surfacing clear diagnostics in the CI report, the fallback paths are designed to keep things moving without leaving anyone behind.</p> <p>It\u2019s not failure, it\u2019s feedback. And it\u2019s wired to help, not scold.</p> graph TD     A[\"Authoring Plugin\\nIDE Extension\"] --&gt; B[\"Markdown + Diagrams\\nContent Surface\"]     B --&gt; C[\"MCP Server\\nMetadata &amp; Compliance Processor\"]     C --&gt; D[\"RAG Workflow\\nRetrieval-Augmented Generation\"]     D --&gt; C     C --&gt; E[\"CI/CD Integration\\nValidation Pipeline\"]     E --&gt; F[\"Accessibility Report\\nWarnings, Suggestions\"]     F --&gt; A  <p>Flow Breakdown</p> <ul> <li>Authoring loop: Authoring Plugin \u2194 RAG Workflow \u2194 Markdown</li> <li>Validation loop: Markdown \u2192 CI/CD \u2192 MCP \u2192 Markdown</li> <li>Ensures continuous feedback, automated compliance, and AI-assisted authoring</li> </ul>"},{"location":"sec_freeform/ai-accessibility/#handling-errors","title":"Handling Errors?","text":"<p>Here is how the system might respond to various metadata issues:</p> Scenario Trigger Response Outcome Missing ALT/DESC No metadata in diagram block RAG model generates suggestions Injected if valid Invalid metadata AI output fails schema or context checks Author prompted for manual override Author-supplied metadata used CI/CD failure Metadata present but fails AODA rules Report generated with fix suggestions Author revises content Unsupported format Diagram type not recognized Skipped or flagged Manual review required"},{"location":"sec_freeform/ai-accessibility/#why-it-might-be-worth-it","title":"Why It Might be Worth It","text":"<p>Sightless users deserve more than \u201cflowchart of payment states.\u201d They deserve context, relationships, implications. They need to understand the diagram the way a sighted user does.</p> <p>Hopefully this system won't be just checking checkboxes \u2014 it might empower authors to write accessibly, and help others engage meaningfully (I'm not a developer, neither code, nor real estate; remind me to tell you the joke, \"Oh, I'm just the janitor here\", lol).</p> <p>2025.08.17</p>"},{"location":"sec_freeform/ai-accessibility_bus/","title":"Accessibility with AI (Concept Note)","text":"<p>An attempt to turn a technical daydream into a concept note (\"who knows\" kind of thing).</p>"},{"location":"sec_freeform/ai-accessibility_bus/#1-problem-statement","title":"1. Problem Statement","text":"<p>Modern technical documentation has embraced automation and modularity (e.g., reusable Markdown, generated diagrams, CI/CD publishing). Yet accessibility has not kept pace:</p> <ul> <li>Visual content \u2014 diagrams, flowcharts, SVGs, charts \u2014 remains largely inaccessible to screen readers.</li> <li>Even when ALT text exists, it is often minimal (\u201cflowchart of states\u201d) and lacks the semantic depth needed for real comprehension.</li> <li>Current documentation tools (MkDocs, Mermaid, PlantUML, etc.) offer limited or unreliable support for accessibility metadata.</li> <li>Authors face high friction: workarounds, inconsistent ARIA support, and testing overhead.</li> <li>As documentation scales, so does the risk of inaccessible content . This exposes organizations to compliance gaps (WCAG, AODA) and erodes inclusivity.</li> </ul> <p>Accessibility today is often a bolt-on fix, rather than a built\u2011in practice.</p> graph TD;     docs[Technical Documentation];     visuals[Diagrams and Charts];     inaccessible[Inaccessible to Screen Readers];     tools[Authoring Tools];     compliance[Compliance Risk and Exclusion];      docs --&gt; visuals;     visuals --&gt; inaccessible;     tools --&gt; inaccessible;     inaccessible --&gt; compliance;"},{"location":"sec_freeform/ai-accessibility_bus/#2-proposed-solution","title":"2. Proposed Solution","text":"<p>Introduce an AI\u2011augmented accessibility layer that:</p> <ul> <li>Detects visual content across formats (Mermaid, PlantUML, SVG, PNG, Canvas).</li> <li>Suggests meaningful ALT and DESC metadata, leveraging retrieval\u2011augmented generation (RAG) to use local glossary/context.</li> <li>Integrates into authoring tools (IDE plugins, XML editors, CCMS platforms).</li> <li>Learns from organizational style guides and past authoring decisions.</li> </ul> <p>This ensures accessibility is proactive, reproducible, and modular \u2014 just like other parts of the documentation stack.</p> graph TD     A[Detect Visual Content] --&gt; B[AI Suggests ALT/DESC Metadata]     B --&gt; C[Integrate into Authoring Tools]     C --&gt; D[Learn from Style Guides &amp; Past Decisions]     D --&gt; E[Proactive &amp; Modular Accessibility]"},{"location":"sec_freeform/ai-accessibility_bus/#3-value-proposition","title":"3. Value Proposition","text":"<p>For Authors:</p> <ul> <li>Saves time by drafting metadata automatically.</li> <li>Provides inline feedback and compliance checks during authoring.</li> <li>Reduces the cognitive load of remembering accessibility rules.</li> </ul> <p>For Readers (esp. sightless users):</p> <ul> <li>Delivers meaningful, contextual descriptions of diagrams.</li> <li>Improves engagement and comprehension beyond bare compliance.</li> </ul> <p>For Organizations:</p> <ul> <li>Reduces legal/compliance risk (ADA/AODA, WCAG 2.2).</li> <li>Scales accessibility consistently across large doc sets.</li> <li>Enhances inclusivity and brand reputation.</li> </ul> graph TD     A[\"Authors / Tech Writers\"] --&gt; F[\"AI Accessibility Layer\"]     B[\"Accessibility Specialists\"] --&gt; F     C[\"Developers &amp; DevOps Teams\"] --&gt; F     D[\"End Users (Sightless Readers)\"] --&gt; F     E[\"Organizations\"] --&gt; F"},{"location":"sec_freeform/ai-accessibility_bus/#4-implementation-roadmap-incremental-approach","title":"4. Implementation Roadmap (Incremental Approach)","text":"<p>Phase 1 \u2013 MVP</p> <ul> <li>CLI tool scans Markdown/diagrams for missing ALT text.</li> <li>AI API optional suggestions.</li> </ul> <p>Phase 2 \u2013 Authoring Plugin</p> <ul> <li>IDE/CCMS integration.</li> <li>Inline suggestions + preview.</li> <li>MCP server glossary\u2011aware generation.</li> </ul> <p>Phase 3 \u2013 CI/CD Integration</p> <ul> <li>GitHub Action or CLI validator.</li> <li>Accessibility failures flagged in builds.</li> </ul> <p>Phase 4 \u2013 Metadata and Compliance Server</p> <ul> <li>Centralized enforcement.</li> <li>RAG\u2011powered glossary/context.</li> <li>API for org\u2011wide adoption.</li> </ul> Phase Feature Wks from Start Phase 1 MVP: CLI Scanner + AI Suggestions 4 Phase 2 Authoring Plugin: IDE/CCMS Integration 10 Phase 3 CICD Integration: Build Validation 14 Phase 4 Compliance Server: Centralized Rules + API 18"},{"location":"sec_freeform/ai-accessibility_bus/#4b-metadata-injection-workflow-technical-outline","title":"4b. Metadata Injection Workflow (Technical Outline)","text":"<p>Accessibility metadata is injected at the point of artifact generation or publication .</p> sequenceDiagram     autonumber     participant Author     participant IDE as IDE/Plugin     participant CLI as CLI Scanner     participant AI as AI Service (RAG)     participant REG as Metadata Registry     participant CI as CI/CD      Author-&gt;&gt;IDE: Edit Markdown/SVG/Mermaid     IDE-&gt;&gt;CLI: Run pre-save/command: scan file     CLI-&gt;&gt;REG: Lookup descriptions by file hash     REG--&gt;&gt;CLI: hit/miss     alt cache miss         CLI-&gt;&gt;AI: Send artifact + context (RAG)         AI--&gt;&gt;CLI: alt/desc candidates     end     CLI--&gt;&gt;IDE: Suggestions + diffs     Author-&gt;&gt;IDE: Accept/Edit     IDE-&gt;&gt;REG: Save approved description     CI-&gt;&gt;CLI: Validate on PR/publish     CLI--&gt;&gt;CI: Pass/Fail + report"},{"location":"sec_freeform/ai-accessibility_bus/#1-detection","title":"1) Detection","text":"<ul> <li>Parsers: Markdown, HTML, and SVG parsers (e.g., remark/rehype or custom AST) identify: <code>&lt;img&gt;</code>, <code>&lt;svg&gt;</code>, Mermaid/PlantUML blocks, <code>&lt;canvas&gt;</code> snapshots.</li> <li>Heuristics: Missing or low\u2011quality <code>alt</code> (e.g., matches <code>/^(image|diagram|chart)/i</code>).</li> <li>Context capture: Surrounding headings/paragraphs + file path feed RAG.</li> </ul> <p>Example: minimal Python CLI detector</p> <pre><code># detect.py\nimport re, sys, json, hashlib, pathlib\n\nIMG_MD = re.compile(r\"!\\[(?P&lt;alt&gt;[^\\]]*)\\]\\((?P&lt;src&gt;[^\\s\\)]+)(?:\\s+\\\"(?P&lt;title&gt;[^\\\"]*)\\\")?\\)\")\n\nLOW_ALT = re.compile(r\"^(?:|image|diagram|chart|graph|figure)\\b\", re.I)\n\n\ndef hash_file(path):\n    p = pathlib.Path(path)\n    if not p.exists():\n        return None\n    h = hashlib.sha256()\n    h.update(p.read_bytes())\n    return h.hexdigest()\n\n\ndef scan_markdown(md_text, base_dir=\".\"):\n    findings = []\n    for m in IMG_MD.finditer(md_text):\n        alt, src = m.group(\"alt\"), m.group(\"src\")\n        needs = (not alt) or LOW_ALT.match(alt or \"\")\n        if needs:\n            findings.append({\n                \"kind\": \"img_md\",\n                \"span\": m.span(),\n                \"src\": src,\n                \"hash\": hash_file(pathlib.Path(base_dir) / src)\n            })\n    return findings\n\nif __name__ == \"__main__\":\n    text = sys.stdin.read()\n    print(json.dumps(scan_markdown(text), indent=2))\n</code></pre>"},{"location":"sec_freeform/ai-accessibility_bus/#2-suggestion-ai-rag-author-review","title":"2) Suggestion (AI + RAG) &amp; Author Review","text":"<ul> <li>Inputs: artifact (SVG source or PNG), local context (heading, preceding paragraph), glossary entries.</li> <li>Outputs: short <code>alt</code> (&lt;= 125 chars), longer <code>desc</code>/<code>longdesc</code> (1\u20135 sentences), optional <code>data-roles</code>.</li> <li>Human\u2011in\u2011the\u2011loop: IDE panel shows candidates with quick\u2011accept and edit.</li> </ul> <p>Pseudo\u2011API call</p> <pre><code># suggest.py (pseudo)\nfrom typing import Dict\n\ndef suggest_alt_desc(artifact_bytes: bytes, mime: str, context: Dict) -&gt; Dict:\n    payload = {\n        \"artifact\": artifact_bytes.decode(\"utf-8\", errors=\"ignore\") if mime==\"image/svg+xml\" else None,\n        \"mime\": mime,\n        \"context\": context,  # {heading, paragraph, glossary_terms}\n        \"targets\": {\"alt\": True, \"desc\": True}\n    }\n    # POST to AI endpoint; handle timeouts &amp; retries\n    # response = http.post(...)\n    response = {\n        \"alt\": \"State machine for order lifecycle (new \u2192 paid \u2192 shipped \u2192 delivered).\",\n        \"desc\": \"Flow begins at 'new', transitions to 'paid' after payment, then 'shipped', and ends at 'delivered'. Includes cancel path from 'new' and 'paid'.\"\n    }\n    return response\n</code></pre>"},{"location":"sec_freeform/ai-accessibility_bus/#3-injection-writeback","title":"3) Injection (Write\u2011back)","text":"<ul> <li>SVG: ensure <code>&lt;title&gt;</code> and <code>&lt;desc&gt;</code> children exist; replace or append.</li> <li>Markdown: rewrite image line to include alt and optional title.</li> <li>HTML: add/replace <code>alt</code>, <code>aria-label</code>, link to <code>longdesc</code> if produced.</li> </ul> <p>Example: inject into SVG</p> <pre><code># inject_svg.py\nimport sys\nimport xml.etree.ElementTree as ET\n\nsvg = ET.parse(sys.argv[1])\nroot = svg.getroot()\n\n# strip existing title/desc\nfor tag in list(root):\n    if tag.tag.endswith('title') or tag.tag.endswith('desc'):\n        root.remove(tag)\n\n# inject\ntitle = ET.Element('title'); title.text = sys.argv[2]\ndesc = ET.Element('desc'); desc.text  = sys.argv[3]\nroot.insert(0, title)\nroot.insert(1, desc)\n\nsvg.write(sys.argv[1], encoding='utf-8', xml_declaration=True)\n</code></pre> <p>Example: rewrite Markdown image</p> <pre><code># inject_md.py\nimport re, sys\nIMG_MD = re.compile(r\"!\\[[^\\]]*\\]\\(([^\\s\\)]+)(?:\\s+\\\"[^\\\"]*\\\")?\\)\")\nalt = sys.argv[1]\ntext = sys.stdin.read()\nprint(IMG_MD.sub(lambda m: f\"![{alt}]({m.group(1)})\", text))\n</code></pre>"},{"location":"sec_freeform/ai-accessibility_bus/#4-failback-options-when-ai-or-context-is-unavailable","title":"4) Failback Options (when AI or context is unavailable)","text":"<ol> <li>Template: Insert structured placeholder (explicitly actionable):</li> <li><code>alt: \"Diagram \u2013 description pending; CI ticket #123\"</code></li> <li><code>desc: \"TODO: Provide narrative covering nodes, edges, and flow conditions.\"</code></li> <li>Block Build: CI fails if public build and any placeholders remain. (Non\u2011public builds can warn.)</li> <li>Glossary Auto\u2011fill: Minimal description synthesized from glossary keywords; tagged <code>confidence: low</code>.</li> <li>Silent Degrade (Draft): Allow missing fields in draft builds; every instance is logged with file/line.</li> </ol> <p>Decision logic</p> graph TD     S[Start] --&gt; C{Registry Hit?}     C -- Yes --&gt; Inject[Inject Cached Metadata]     C -- No --&gt; A{AI Available?}     A -- Yes --&gt; Gen[Generate alt/desc via RAG]     A -- No --&gt; G{Glossary Terms?}     G -- Yes --&gt; Auto[Auto-fill Minimal]     G -- No --&gt; T[Insert Template Placeholder]     Gen --&gt; R[Author Review]     Auto --&gt; R     T --&gt; R     R --&gt;|Approved| Commit[Write-back + Save to Registry]"},{"location":"sec_freeform/ai-accessibility_bus/#5-storage-reuse-metadata-registry","title":"5) Storage &amp; Reuse (Metadata Registry)","text":"<ul> <li>Key: SHA\u2011256 of artifact bytes; Value: <code>{alt, desc, lang, approvals, updated_at}</code></li> <li>Store: repo file <code>a11y/registry.yml</code> (simple), or service API (Phase 4).</li> </ul> <p>Registry schema (YAML)</p> <pre><code>version: 1\nitems:\n  - hash: \"8baf...\"\n    path: \"docs/img/order_flow.svg\"\n    alt: \"Order lifecycle state machine\"\n    desc: \"New \u2192 Paid \u2192 Shipped \u2192 Delivered; cancel path from New/Paid.\"\n    lang: \"en\"\n    approvals: [\"twriter@example.com\"]\n    updated_at: \"2025-08-20T10:15:00Z\"\n</code></pre>"},{"location":"sec_freeform/ai-accessibility_bus/#4c-tooling-integration-examples","title":"4c. Tooling Integration Examples","text":""},{"location":"sec_freeform/ai-accessibility_bus/#a-precommit-hook","title":"A) Pre\u2011commit Hook","text":"<pre><code># .pre-commit-config.yaml\n- repo: local\n  hooks:\n    - id: a11y-scan\n      name: a11y-scan\n      entry: python tools/a11y_scan.py --mode=precommit\n      language: system\n      files: \\.(md|svg)$\n</code></pre>"},{"location":"sec_freeform/ai-accessibility_bus/#b-github-actions-ci-validate-inject-on-pr","title":"B) GitHub Actions (CI) \u2013 Validate + Inject on PR","text":"<pre><code>name: a11y\non:\n  pull_request:\n    paths: [\"**/*.md\", \"**/*.svg\"]\n\njobs:\n  scan:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-python@v5\n        with: { python-version: '3.11' }\n      - run: pip install -r tools/requirements.txt\n      - name: Detect &amp; Suggest\n        run: |\n          python tools/a11y_scan.py --detect --out report.json || true\n      - name: Inject (Approved or Cached)\n        run: |\n          python tools/a11y_inject.py --use-registry a11y/registry.yml --apply\n      - name: Fail on Placeholders (Public)\n        if: github.event.pull_request.base.ref == 'main'\n        run: |\n          python tools/a11y_gate.py --mode=public\n</code></pre>"},{"location":"sec_freeform/ai-accessibility_bus/#c-mkdocs-plugin-hook-buildtime","title":"C) MkDocs Plugin Hook (Build\u2011time)","text":"<pre><code># mkdocs_plugin.py\nfrom mkdocs.plugins import BasePlugin\nfrom pathlib import Path\nfrom .a11y import scan_file, inject_suggestions\n\nclass A11yPlugin(BasePlugin):\n    def on_page_markdown(self, markdown, page, config, files):\n        findings = scan_file(markdown, base_dir=Path(config['docs_dir']))\n        return inject_suggestions(markdown, findings)\n</code></pre>"},{"location":"sec_freeform/ai-accessibility_bus/#5-key-stakeholders","title":"5. Key Stakeholders","text":"<ul> <li>Authors / Technical Writers</li> <li>Accessibility Specialists</li> <li>Developers and DevOps Teams</li> <li>End Users (esp. sightless readers)</li> <li>Organizations</li> </ul>"},{"location":"sec_freeform/ai-accessibility_bus/#6-risks-and-considerations","title":"6. Risks and Considerations","text":"<ul> <li>AI quality variance \u2013 risk of incorrect/verbose ALT text.</li> <li>Integration complexity \u2013 different doc toolchains.</li> <li>Change management \u2013 author adoption and trust.</li> </ul> graph TB     Risks --&gt;|AI Variance| Quality[Incorrect/Verbose ALT]     Risks --&gt;|Toolchain Gaps| Integration[Integration Complexity]     Risks --&gt;|Adoption| Change[Change Management Resistance]"},{"location":"sec_freeform/ai-accessibility_bus/#7-why-now","title":"7. Why Now","text":"<ul> <li>Accessibility requirements are tightening (WCAG 2.2, AODA).</li> <li>Developer ecosystems are embracing shift\u2011left quality checks.</li> <li>AI capabilities are maturing for context\u2011aware generation .</li> </ul> graph LR     Regulations[Stricter Accessibility Standards] --&gt; Urgency     ShiftLeft[Shift-Left Dev Practices] --&gt; Urgency     AI[AI Capability Maturity] --&gt; Urgency     Urgency[Why Now?]"},{"location":"sec_freeform/ai-accessibility_bus/#8-nongoals","title":"8. Non\u2011Goals","text":"<ul> <li>Replace human judgment for critical content.</li> <li>Guarantee perfect descriptions for complex scientific figures without SME review.</li> </ul>"},{"location":"sec_freeform/ai-accessibility_bus/#9-privacy-security","title":"9. Privacy &amp; Security","text":"<ul> <li>Do not transmit proprietary SVGs/PNGs to third\u2011party AI without consent.</li> <li>Provide local\u2011only mode (RAG from checked\u2011in glossary).</li> <li>Anonymize file paths and strip PII before requests.</li> </ul>"},{"location":"sec_freeform/ai-accessibility_bus/#10-acceptance-criteria-mvp","title":"10. Acceptance Criteria (MVP)","text":"<ul> <li>CLI reports all images with missing/low\u2011quality alt text in a repo, with file/line.</li> <li>Can inject <code>&lt;title&gt;</code>/<code>&lt;desc&gt;</code> into SVGs and alt text into Markdown in dry\u2011run and apply modes.</li> <li>Supports a local registry cache with at least add/get/update operations by file hash.</li> <li>CI job fails public builds if placeholders remain; passes if all visuals are covered or explicitly waived.</li> </ul> <p>Conclusion:</p> <p>By embedding AI\u2011driven accessibility checks into the authoring and publishing workflow, we can shift accessibility from a reactive fix to a proactive standard. This approach not only helps organizations comply but ensures that all readers \u2014 sighted or sightless \u2014 engage with technical content meaningfully.</p> <p>2025\u201108\u201120</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/","title":"GenAI Landscape in 2025","text":"<p>Primer/presentation material.</p> <p>The Generative Artificial Intelligence (GenAI) landscape has evolved into a complex ecosystem of foundation models, specialized architectures, infrastructure components, and deployment patterns. This primer provides a comprehensive view of the current state, key technologies, and architectural patterns that define the modern GenAI stack.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#foundation-models-architecture","title":"Foundation Models Architecture","text":"flowchart TB   subgraph Foundation_Models[\"Foundation Models\"]     LLM[\"Large Language Models\"]     MM[\"Multimodal Models\"]     CGM[\"Code Generation Models\"]     IGM[\"Image Generation Models\"]     ASM[\"Audio/Speech Models\"]     VGM[\"Video Generation Models\"]   end    subgraph Model_Architectures[\"Model Architectures\"]     TRANS[\"Transformer\"]     DIFF[\"Diffusion Models\"]     VAE[\"VAE/GAN Hybrids\"]     SSM[\"State Space Models\"]     MOE[\"Mixture of Experts\"]   end    subgraph Training_Approaches[\"Training Approaches\"]     PRE[\"Pre-training\"]     FT[\"Fine-tuning\"]     RLHF[\"RLHF\"]     CAI[\"Constitutional AI\"]     ICL[\"In-Context Learning\"]   end    LLM --&gt; TRANS   MM --&gt; TRANS   IGM --&gt; DIFF   ASM --&gt; TRANS   VGM --&gt; DIFF    TRANS --&gt; PRE   DIFF --&gt; PRE   MOE --&gt; PRE    PRE --&gt; FT   FT --&gt; RLHF   RLHF --&gt; CAI"},{"location":"sec_freeform/gen-ai-landscape-primer/#foundation-model-types","title":"Foundation Model Types","text":"<p>Large Language Models (LLMs) form the backbone of text-based GenAI. These transformer-based architectures, exemplified by GPT-4, Claude, and Llama, process and generate human language through autoregressive prediction. Key characteristics include parameter counts ranging from billions to trillions, context windows extending from 4K to 2M+ tokens, and emergent capabilities like reasoning and code generation.</p> <p>Multimodal Models integrate multiple input modalities (text, images, audio, video) within unified architectures. GPT-4V, Gemini Ultra, and Claude 3 demonstrate vision-language capabilities, while models like DALL-E 3 and Midjourney specialize in text-to-image generation.</p> <p>Diffusion Models have revolutionized image and video generation through iterative denoising processes. Stable Diffusion, DALL-E, and newer video models like Sora utilize latent diffusion techniques for high-quality content generation.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#infrastructure-and-compute-layer","title":"Infrastructure and Compute Layer","text":"flowchart TB   subgraph Hardware_Layer[\"Hardware Layer\"]     GPU[\"GPU Clusters\"]     TPU[\"TPU Pods\"]     ACCEL[\"AI Accelerators\"]     HSI[\"High-Speed Interconnects\"]   end    subgraph System_Software[\"System Software\"]     CUDA[\"CUDA/ROCm\"]     DIST[\"Distributed Training\"]     MP[\"Model Parallelism\"]     MEM[\"Memory Management\"]   end    subgraph ML_Frameworks[\"ML Frameworks\"]     TORCH[\"PyTorch\"]     JAX[\"JAX/Flax\"]     TF[\"TensorFlow\"]     HF[\"Hugging Face\"]   end    subgraph Orchestration[\"Orchestration\"]     K8S[\"Kubernetes\"]     RAY[\"Ray\"]     MLF[\"MLflow\"]     WB[\"Weights &amp; Biases\"]   end    subgraph Inference_Serving[\"Inference Serving\"]     VLLM[\"vLLM\"]     TRT[\"TensorRT-LLM\"]     TGI[\"Text Generation Inference\"]     TRITON[\"Triton\"]   end    GPU --&gt; CUDA   TPU --&gt; JAX   CUDA --&gt; TORCH   CUDA --&gt; DIST   TORCH --&gt; HF   JAX --&gt; HF   K8S --&gt; RAY   RAY --&gt; VLLM   VLLM --&gt; TRT"},{"location":"sec_freeform/gen-ai-landscape-primer/#hardware-infrastructure","title":"Hardware Infrastructure","text":"<p>GPU Clusters remain the primary compute substrate, with NVIDIA H100s and A100s dominating training and inference. Memory bandwidth (3TB/s on H100) and tensor cores optimize transformer operations. Google's TPUs offer specialized architectures for large-scale training with pod configurations scaling to thousands of chips.</p> <p>High-Speed Interconnects like NVLink, InfiniBand, and custom fabrics enable model parallelism across hundreds of devices. Network topology becomes critical for distributed training efficiency.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#training-infrastructure-components","title":"Training Infrastructure Components","text":"<p>Distributed Training frameworks like DeepSpeed, FairScale, and PyTorch FSDP enable model training across clusters. Key techniques include:</p> <ul> <li>Pipeline Parallelism: Splitting models across devices by layers</li> <li>Tensor Parallelism: Distributing individual operations across devices  </li> <li>Data Parallelism: Replicating models with different data batches</li> <li>ZeRO (Zero Redundancy Optimizer): Memory-efficient parameter sharding</li> </ul> <p>Memory Management becomes critical with multi-billion parameter models. Techniques include gradient checkpointing, mixed precision training (FP16/BF16), and activation recomputation.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#model-optimization-and-deployment","title":"Model Optimization and Deployment","text":"flowchart TB   subgraph Model_Compression[\"Model Compression\"]     QUANT[\"Quantization\"]     PRUNE[\"Pruning\"]     DISTILL[\"Distillation\"]     LORA[\"LoRA/QLoRA\"]   end    subgraph Inference_Optimization[\"Inference Optimization\"]     KV[\"KV Caching\"]     SPEC[\"Speculative Decoding\"]     CB[\"Continuous Batching\"]     PA[\"PagedAttention\"]   end    subgraph Deployment_Patterns[\"Deployment Patterns\"]     API[\"Model Serving APIs\"]     EDGE[\"Edge Deployment\"]     FED[\"Federated Inference\"]     HYBRID[\"Hybrid Cloud\"]   end    subgraph Performance_Monitoring[\"Performance Monitoring\"]     LAT[\"Latency Tracking\"]     THRU[\"Throughput Metrics\"]     COST[\"Cost Optimization\"]     QUAL[\"Quality Monitoring\"]   end    QUANT --&gt; KV   LORA --&gt; CB   KV --&gt; API   SPEC --&gt; API   API --&gt; LAT   API --&gt; COST   EDGE --&gt; QUAL"},{"location":"sec_freeform/gen-ai-landscape-primer/#model-compression-techniques","title":"Model Compression Techniques","text":"<p>Quantization reduces model precision from FP32 to INT8/INT4, achieving 4x-8x memory reduction with minimal quality loss. Post-training quantization (PTQ) and quantization-aware training (QAT) represent primary approaches.</p> <p>Low-Rank Adaptation (LoRA) and Quantized LoRA (QLoRA) enable parameter-efficient fine-tuning by learning low-rank updates to frozen base models. This reduces trainable parameters by 99%+ while maintaining performance.</p> <p>Knowledge Distillation transfers capabilities from large \"teacher\" models to smaller \"student\" models, enabling deployment in resource-constrained environments.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#inference-optimization","title":"Inference Optimization","text":"<p>KV Caching stores key-value pairs from previous tokens to avoid recomputation during autoregressive generation. PagedAttention (used in vLLM) manages KV cache memory efficiently through virtual memory techniques.</p> <p>Speculative Decoding uses smaller draft models to propose multiple tokens, with the larger model verifying and accepting valid sequences, improving generation speed.</p> <p>Continuous Batching allows dynamic batching of requests with different sequence lengths, maximizing GPU utilization compared to static batching.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#application-architecture-patterns","title":"Application Architecture Patterns","text":"flowchart TB   subgraph RAG[\"Retrieval Augmented Generation\"]     VDB[\"Vector Databases\"]     EMB[\"Embedding Models\"]     RET[\"Retrieval Pipeline\"]     FUSION[\"Context Fusion\"]   end    subgraph Agents[\"Agent Frameworks\"]     PLAN[\"Planning\"]     TOOLS[\"Tool Use\"]     MEMSYS[\"Memory Systems\"]     MAC[\"Multi-Agent Coordination\"]   end    subgraph Fine_Tuning[\"Fine-tuning Pipelines\"]     DATA[\"Dataset Preparation\"]     TRAIN[\"Training Infrastructure\"]     EVAL[\"Evaluation Frameworks\"]     REG[\"Model Registry\"]   end    subgraph Production[\"Production Systems\"]     GATE[\"API Gateways\"]     LB[\"Load Balancing\"]     CACHE[\"Caching Layers\"]     MON[\"Monitoring/Logging\"]   end    EMB --&gt; VDB   VDB --&gt; RET   RET --&gt; FUSION   PLAN --&gt; TOOLS   TOOLS --&gt; MEMSYS   DATA --&gt; TRAIN   TRAIN --&gt; EVAL   EVAL --&gt; REG   GATE --&gt; LB   LB --&gt; CACHE"},{"location":"sec_freeform/gen-ai-landscape-primer/#retrieval-augmented-generation-rag","title":"Retrieval-Augmented Generation (RAG)","text":"<p>RAG architectures address knowledge limitations by incorporating external information retrieval. Key components include:</p> <p>Vector Databases (Pinecone, Weaviate, Chroma) store document embeddings for semantic search. Embedding Models (text-embedding-ada-002, sentence-transformers) convert text to dense vectors for similarity matching.</p> <p>Hybrid Search combines semantic similarity with keyword matching (BM25) for improved retrieval accuracy. Reranking models refine initial retrieval results.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#agentic-systems","title":"Agentic Systems","text":"<p>AI Agents represent autonomous systems that plan, execute, and reflect on multi-step tasks. Core capabilities include:</p> <ul> <li>Tool Use: Integration with external APIs, databases, and computational systems</li> <li>Planning: Decomposing complex tasks into executable steps</li> <li>Memory: Maintaining context across extended interactions</li> <li>Reflection: Self-evaluation and error correction</li> </ul> <p>Frameworks like LangChain, CrewAI, and AutoGen enable multi-agent coordination for complex workflows.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#evaluation-and-safety","title":"Evaluation and Safety","text":"flowchart TB   subgraph Capability_Eval[\"Capability Evaluation\"]     BENCH[\"Benchmarks\"]     HUMAN[\"Human Evaluation\"]     AUTO[\"Automated Scoring\"]     DOMAIN[\"Domain-Specific Tests\"]   end    subgraph Safety_Measures[\"Safety Measures\"]     ALIGN[\"Alignment Training\"]     CONST[\"Constitutional AI\"]     RED[\"Red Teaming\"]     INTERP[\"Interpretability\"]   end    subgraph Monitoring[\"Monitoring Systems\"]     DRIFT[\"Drift Detection\"]     BIAS[\"Bias Monitoring\"]     PERF[\"Performance Tracking\"]     GUARD[\"Safety Guardrails\"]   end    subgraph Governance[\"Governance\"]     CARDS[\"Model Cards\"]     AUDIT[\"Audit Trails\"]     COMP[\"Compliance Tracking\"]     RISK[\"Risk Assessment\"]   end    BENCH --&gt; AUTO   HUMAN --&gt; DOMAIN   ALIGN --&gt; CONST   CONST --&gt; RED   DRIFT --&gt; BIAS   BIAS --&gt; GUARD   CARDS --&gt; AUDIT   AUDIT --&gt; RISK"},{"location":"sec_freeform/gen-ai-landscape-primer/#evaluation-frameworks","title":"Evaluation Frameworks","text":"<p>Capability Benchmarks include MMLU (massive multitask language understanding), HumanEval (code generation), and HellaSwag (commonsense reasoning). Domain-specific evaluations assess performance in specialized areas like medicine (MedQA), law (LegalBench), and mathematics (MATH).</p> <p>Human Evaluation remains critical for assessing subjective qualities like helpfulness, harmlessness, and honesty. Platforms like Scale AI and Surge AI provide human feedback infrastructure.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#safety-and-alignment","title":"Safety and Alignment","text":"<p>Constitutional AI trains models to follow a set of principles through self-critique and revision. RLHF (Reinforcement Learning from Human Feedback) optimizes model outputs based on human preferences.</p> <p>Red Teaming involves adversarial testing to identify harmful outputs, bias, or capability limitations. Interpretability research aims to understand model decision-making through techniques like activation patching and mechanistic interpretability.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#economic-and-scaling-dynamics","title":"Economic and Scaling Dynamics","text":"<p>Training costs for frontier models now exceed $100M, with GPT-4 estimated at $200M+ and emerging models potentially reaching $1B+. Scaling Laws (Kaplan, Chinchilla) predict performance improvements with increased compute, data, and parameters.</p> <p>Inference Economics drive deployment decisions. Cost per token ranges from $0.0001 (GPT-3.5) to $0.06 (GPT-4) for API services. Self-hosted deployments offer cost advantages at scale but require significant infrastructure investment.</p> <p>Compute Trends suggest training requirements growing 10x annually, straining available GPU capacity and driving innovations in efficiency and alternative architectures.</p>"},{"location":"sec_freeform/gen-ai-landscape-primer/#emerging-trends-and-future-directions","title":"Emerging Trends and Future Directions","text":"<p>Multimodal Integration continues expanding beyond text-image to include audio, video, and sensor data. Reasoning Models like OpenAI's o1 demonstrate improved capability on complex logical and mathematical tasks through iterative refinement.</p> <p>Mixture of Experts architectures enable larger model capacity with constant inference cost. State Space Models (Mamba) offer alternatives to transformer attention mechanisms with better scaling properties.</p> <p>Edge AI deployment brings GenAI capabilities to mobile and IoT devices through model compression and specialized hardware. Federated Learning enables distributed training while preserving data privacy.</p> <p>The GenAI landscape continues rapid evolution, with new architectures, optimization techniques, and application patterns emerging regularly. Success requires understanding both current capabilities and underlying technological trends driving future development.</p> <p>2025.09.19</p>"},{"location":"sec_freeform/ibm-sanfran/","title":"IBM SanFrancisco","text":"<p>A technical memoir.</p> <p>First, hold off \u2014 don't reach for your star and flower-spangled hat just yet: SanFrancisco, one word, was the name of a software product. Behind this straightforward name lies a story of early innovation in coarse-grained Java business components \u2014 a glimpse into the architectural challenges and creative solutions of a pioneering era.</p> <p>Back in 2001, while working at the IBM Toronto Lab as an Information Developer (an IBM term for Technical Writer), SanFrancisco was one of the projects that landed on my plate; had to turn emails, memos, notes (perhaps even on serviettes) into Redbook material.</p> <p>By the time, I had been part of an e-commerce development team for a brief period of time, developed some docs and tutorials, taken my part in porting software from C++ to Java, read some Ivor Horton, and had managed to start thinking I knew all there was to know about what and how to write, haha... Well, I was wrong. Why \u2014 is another story, but now, here, this is an attempt to reach deep into what's behind that insignificant blurb on my r\u00e9sum\u00e9 and make sense of what SanFrancisco really was, where it had come from, and where it ended up going. A two-in-one writing sample and a technical memoir.</p>"},{"location":"sec_freeform/ibm-sanfran/#introduction","title":"Introduction","text":"<p>SanFrancisco was an IBM-led product and project, a cross-platform Java application framework that provided reusable, \"large-grain business objects\u201d (business components). IBM developed and shipped SanFrancisco in the late-1990s, and the technology was later incorporated into IBM\u2019s WebSphere/Business Components efforts.</p> <p>SanFrancisco focused on \u201clarge grains\u201d rather than \"tiny beans\" \u2014 it tied into CORBA/IIOP, albeit loosely, and IBM tooling (VisualAge) and was positioned as an alternative or complement to EJB-style approaches of the time.</p>"},{"location":"sec_freeform/ibm-sanfran/#what-large-grain-meant","title":"What Large-Grain Meant","text":"<p>\"Large-grain business objects\" meant to characterize SanFrancisco as stateful business components that encapsulated whole business entities or processes rather than tiny technical objects. Say, an Order \u2014 with lines, taxes, lifecycle, validation, posting to GL \u2014 as a single component you call with a small number of high-level operations, rather than dozens of low-level <code>JavaBeans</code> or single-column <code>CRUD</code> calls.</p> <p>These were long-lived components with application-level state, they were also transaction-aware, and they exposed business semantics (<code>createOrder</code>, <code>postInvoice</code>, <code>applyPayment</code>, etc.) Consequently, the business API was bulkier compared with method-level \u201cfine grain\u201d objects.</p> <p>Why coarse-grain mattered was because they offered fewer remote hops, clearer transaction boundaries, easier composition of business processes, and higher reuse value across applications that shared the same domain semantics (see Large-Grain Business Object Example).</p>"},{"location":"sec_freeform/ibm-sanfran/#what-made-them-reusable","title":"What Made them Reusable","text":"<p>Here are the concrete mechanisms IBM used to make the coarse components reusable and adaptable across enterprises.</p>"},{"location":"sec_freeform/ibm-sanfran/#layered-architecture","title":"Layered architecture","text":"<p>SanFrancisco provided separation of reuse scopes, its architecture consisted of layers (see Layer Structure and Component Hierarchy):</p> <ol> <li>Foundation layer: runtime services (naming, factory, transaction, security, notification), distribution plumbing (the Logical SanFrancisco Network).</li> <li>Common Business Object layer: canonical domain objects (company, account, customer, currency, etc.) \u2014 reusable across many apps.</li> <li>Core Business Process layer: packaged, higher-level domain subsystems (general ledger, AR, AP, order processing).</li> </ol> <p>The higher the layer, the more domain reuse you got. This layering let vendors reuse just the foundation or pick domain building blocks and mix them.</p>"},{"location":"sec_freeform/ibm-sanfran/#well-defined-base-classesinterfaces-and-a-consistent-object-model","title":"Well-defined base classes/interfaces and a consistent object model","text":"<p>SanFrancisco introduced a small set of base classes, for example, <code>BusinessObject</code> with <code>subclasses</code>, such as <code>Entity</code> and <code>Dependent</code>, and<code>Command</code> for actions (see Large-Grain Business Object Example). Framework code and application code spoke the same API and lifecycle semantics \u2014 far more effective for reuse than ad-hoc POJOs.</p>"},{"location":"sec_freeform/ibm-sanfran/#inherent-domain-design-patterns","title":"Inherent domain design patterns","text":"<p>SanFrancisco had <code>PropertyContainer</code>, <code>Policy</code>, <code>Command</code>, <code>Aggregates</code>, <code>Specification/Criterion</code> patterns baked in.</p> <ol> <li> <p>PropertyContainer: supported dynamic/extensible properties; you could add attributes via configuration rather than recompiling.</p> </li> <li> <p>Policy, Strategy, and Chain-of-Responsibility: business rules were replaceable and composable.</p> </li> <li>Command objects and statecharts: business processes modelled as commands and workflows, providing a standard lifecycle (see State Diagram for a Business Object\u2019s Lifecycle).</li> </ol> <p>These patterns made components configurable and extensible in predictable ways, which was essential for reuse across different customers.</p>"},{"location":"sec_freeform/ibm-sanfran/#mapping-between-components-and-existing-schemas","title":"Mapping between components and existing schemas","text":"<p>SanFrancisco provided a schema-mapping facility so a reusable business object could be persisted to (or read from) a customer\u2019s existing relational/legacy schema without changing the code of the business object (see Persistence and Services Interaction (Sequence)). That metadata-driven mapping was a big reuse enabler for enterprise customers with legacy systems.</p>"},{"location":"sec_freeform/ibm-sanfran/#addressable-and-distributable-runtimenetwork-model","title":"Addressable and distributable runtime/network model","text":"<p>The Logical SanFrancisco Network (LSFN) included services such as a Global Server Manager, Name Service, Factory Service (object creation/placement), Transaction Service, Security Service, Notification Service, and local Server Managers (see Deployment Diagram (Runtime Nodes)). That made components locatable, securable, and manageable across a distributed installation while keeping the component\u2019s API the same.</p>"},{"location":"sec_freeform/ibm-sanfran/#tools-and-scaffolding","title":"Tools and scaffolding","text":"<p>IBM shipped tooling to create prototypes and glue components into running scenarios (and to auto-generate bindings/scaffolding). For example, SanFrancisco came with a Business Component Prototyper utility and provided integration with VisualAge, IBM's brand family of IDEs at the time.</p>"},{"location":"sec_freeform/ibm-sanfran/#sanfrancisco-component-structure","title":"SanFrancisco Component Structure","text":"<p>Below are attempts to:</p> <ul> <li>sketch a typical SanFrancisco component at runtime (see Persistence and Services Interaction (Sequence))</li> <li>describe the principal classes/services you would actually interact with</li> </ul>"},{"location":"sec_freeform/ibm-sanfran/#base-class-hierarchy-logical","title":"Base class hierarchy (logical)","text":"<ul> <li> <p><code>BusinessObject</code> (abstract root): shares behaviour and metadata.</p> </li> <li> <p><code>Entity</code> \u2014 persistent, transactional objects representing primary business entities</p> </li> <li><code>Dependent</code> \u2014 non-independent objects (child rows/details) that belong to an Entity</li> <li><code>Command</code> \u2014 encapsulated actions/process steps (used to model business operations)</li> </ul> <p>Containers such as <code>EntityOwningSet</code> hold collections of <code>Entities</code>. This class hierarchy standardises lifecycle, locking and persistence semantics across all SanFrancisco objects (see Large-Grain Business Object Example).</p>"},{"location":"sec_freeform/ibm-sanfran/#propertycontainer-and-dynamic-attributes","title":"PropertyContainer and dynamic attributes","text":"<p>Instead of every domain object having a fixed Java field for every attribute, SanFrancisco used a property container mechanism (hash-table backed) to attach properties dynamically. That way, vendors/customers could add attributes (e.g., <code>customer.segment</code>) via configuration or metadata without changing class files \u2014 huge for reuse and productisation. The framework provided accessor patterns and iteration utilities to work with these dynamic properties.</p>"},{"location":"sec_freeform/ibm-sanfran/#policies-and-extension-points","title":"Policies and extension points","text":"<p>Business rules are not hardwired. SanFrancisco exposes policy extension points (Strategy/Template/Chain patterns): implement or deploy a new policy to change rule behavior (pricing, discount rules, tax calc) without changing the base component. Reuse is safer because vendors supply a standard component and customers replace or add policies for local behaviour (see State Diagram for a Business Object\u2019s Lifecycle).</p>"},{"location":"sec_freeform/ibm-sanfran/#queries-keys-and-collections-how-you-find-objects","title":"Queries, keys and collections (how you find objects)","text":"<p>The framework uses access keys / specification keys / criteria objects and <code>Iterator</code>/<code>CachedSet</code> abstractions rather than ad-hoc SQL everywhere. Query criteria are expressed as higher-level specification objects that delegate to the persistence layer; results are returned as SanFrancisco collections that can be iterated, cached, and traversed in object form. This makes querying portable and the interface consistent across different back-ends.</p>"},{"location":"sec_freeform/ibm-sanfran/#persistence-and-schema-mapping","title":"Persistence and schema mapping","text":"<p>SanFrancisco provides an object-to-relational mapping layer. A developer could either manually create mapping metadata or rely on tools to generate mapping from existing schemas. The persistence layer supports delegating complex queries to the DB and mapping result sets back into business objects; it also supports different persistence strategies (local vs. distributed, caching) (see Persistence and Services Interaction (Sequence)).</p>"},{"location":"sec_freeform/ibm-sanfran/#runtime-services","title":"Runtime services","text":"<p>Key services in the Logical SanFrancisco Network (LSFN) support discovery, creation, transactions, and security:</p> <ul> <li>Global Server Manager \u2014 knows all object processes and routes client requests.</li> <li>Global Name Service \u2014 holds configuration and namespace info (where to create objects).</li> <li>Factory Service \u2014 provides standard object creation and ownership semantics.</li> <li>Transaction Service \u2014 manages transactional execution and recovery across object servers.</li> <li>Server Security Service / Master Security Service \u2014 handles authentication/authorization.</li> </ul> <p>Because these services were standard and part of the framework, a component packaged for SanFrancisco behaved consistently in any LSFN deployment (see Deployment Diagram (Runtime Nodes)).</p>"},{"location":"sec_freeform/ibm-sanfran/#commands-workflows-and-statecharts","title":"Commands, workflows and statecharts","text":"<p>Higher-level business processes are modelled as Commands or statecharts: transitions (states) and CA (condition/action) rules control lifecycle. This makes a component\u2019s process behaviour explicit and manipulable (and therefore reusable) \u2014 developers didn't have to rewrite \u201chow an invoice moves from draft \u2192 posted \u2192 paid\u201d for each app (see State Diagram for a Business Object\u2019s Lifecycle).</p>"},{"location":"sec_freeform/ibm-sanfran/#example-sketch-pseudo-api-simplified","title":"Example sketch (pseudo API) \u2014 simplified","text":"<p>Here is an intent illustration, exact API names vary slightly across versions and docs.</p> <pre><code>// conceptual \u2014 not copy/paste exact SDK code\nclass OrderEntity extends Entity /* BusinessObject */ {\n// dynamic properties via PropertyContainer\nObject getProperty(String name) { ... }\nvoid setProperty(String name, Object value) { ... }\n\n// high-level business operation (coarse grain)\nvoid processShipment(CommandContext ctx) {\n// validate, reserve inventory, post to GL via other SanFrancisco components\n// executed within the Transaction Service\n}\n}\n\n// client usage: single coarse call that encapsulates lots of work\nOrderEntity order = factory.create(\"Order\", ...);\norder.setProperty(\"shippingMethod\", \"EXPRESS\");\norder.processShipment(txContext);\n</code></pre> <p>The point: instead of many remote calls to tweak small fields and call helper services, the client invokes a small set of semantically rich methods that the framework executed atomically, possibly across several servers (see Persistence and Services Interaction (Sequence)).</p>"},{"location":"sec_freeform/ibm-sanfran/#some-visuals","title":"Some Visuals","text":""},{"location":"sec_freeform/ibm-sanfran/#high-level-architecture-overview","title":"High-level Architecture Overview","text":"<p>(See Layered architecture)</p> <p>SanFrancisco sat between application-specific UI/business logic and the JVM, providing reusable services.</p> flowchart TB     accTitle: Diagram showing IBM SanFrancisco's layered architecture     accDescr: Diagram showing IBM SanFrancisco's layered architecture. Arrows connect layers from top to bottom: User Interface \u2192 Business Logic \u2192 Foundation Services \u2192 JVM \u2192 Operating System. SanFrancisco encompasses the Business Logic and Foundation layers, positioned between application code and the JVM.     UI[User Interface Layer] --&gt; BL[Business Logic Layer]     BL --&gt; FS[Foundation Services Layer]     FS --&gt; JVM[Java Virtual Machine]     JVM --&gt; OS[Operating System]      subgraph IBM SanFrancisco         BL         FS     end"},{"location":"sec_freeform/ibm-sanfran/#layer-structure-and-component-hierarchy","title":"Layer Structure and Component Hierarchy","text":"<p>(See Layered architecture)</p> <p>The following is a static breakdown of large-grain components, layered from generic to domain-specific:</p> classDiagram     accTitle: Class diagram showing SanFrancisco\u2019s layered component hierarchy     accDescr: Class diagram showing SanFrancisco\u2019s layered component hierarchy. FoundationServices includes core services like TransactionManager and PersistenceManager. CommonBusinessObjects builds on FoundationServices and includes domain-neutral entities like Party and Product. DomainComponents extends CommonBusinessObjects with vertical-specific modules like ERP and Retail.     class FoundationServices {         +TransactionManager         +PersistenceManager         +SecurityService         +EventService     }      class CommonBusinessObjects {         +Party         +Address         +Product         +Order     }      class DomainComponents {         +ERP         +Retail         +Financial     }      FoundationServices &lt;|-- CommonBusinessObjects     CommonBusinessObjects &lt;|-- DomainComponents"},{"location":"sec_freeform/ibm-sanfran/#large-grain-business-object-example","title":"Large-Grain Business Object Example","text":"<p>(See What Large-Grain Meant and Base class hierarchy (logical))</p> <p>An Illustration of the \"large-grain\" idea \u2014 <code>Order</code> encapsulates not just data, but behavior and transactional integrity.</p> classDiagram     accTitle: Class diagram showing a coarse-grained Order object and its relationships     accDescr: Class diagram showing a coarse-grained Order object and its relationships. Order contains attributes and methods for managing line items and totals. It has a one-to-many relationship with OrderLine, which in turn references Product. Emphasizes encapsulation of behavior and data in a single business object.     class Order {         +orderId: String         +date: Date         +status: OrderStatus         +addLineItem(Product, int)         +calculateTotal(): Money         +commit()     }     class OrderLine {         +product: Product         +quantity: int         +price: Money     }     class Product {         +productId: String         +description: String         +price: Money     }     Order \"1\" --&gt; \"*\" OrderLine     OrderLine \"*\" --&gt; \"1\" Product"},{"location":"sec_freeform/ibm-sanfran/#persistence-and-services-interaction-sequence","title":"Persistence and Services Interaction (Sequence)","text":"<p>(See Persistence and schema mapping and SanFrancisco Component Structure)</p> <p>Here is a dynamic view of an object interacting with SF foundation services:</p> sequenceDiagram     accTitle: Sequence diagram showing object interaction with SF foundation services --&gt;     accDescr: Sequence diagram showing object interaction with SF foundation services across 4 swimlanes: Client Object, Business Object, Data Access Object, and Database. Flow shows client creating business object, business object accessing data object, data object querying database, and responses flowing back through the chain. Includes error handling and transaction management patterns typical of enterprise Java applications.     participant UI as User Interface     participant Order as Order Business Object     participant Tx as TransactionManager     participant PM as PersistenceManager     participant DB as Database      UI-&gt;&gt;Order: addLineItem(product, qty)     UI-&gt;&gt;Order: calculateTotal()     UI-&gt;&gt;Order: commit()     Order-&gt;&gt;Tx: begin()     Order-&gt;&gt;PM: save(Order)     PM-&gt;&gt;DB: INSERT Order + OrderLines     DB--&gt;&gt;PM: success     PM--&gt;&gt;Order: persisted     Order-&gt;&gt;Tx: commit()     Tx--&gt;&gt;Order: transaction complete     Order--&gt;&gt;UI: success"},{"location":"sec_freeform/ibm-sanfran/#deployment-diagram-runtime-nodes","title":"Deployment Diagram (Runtime Nodes)","text":"<p>(See Addressable and distributable runtime/network model and Runtime services (LSFN))</p> <p>SanFrancisco's runtime separation \u2014 often deployed in a 3-tier setup.</p> flowchart TB     accTitle: Diagram showing SanFrancisco\u2019s 3-tier runtime deployment --&gt;     accDescr: Diagram showing SanFrancisco\u2019s 3-tier runtime deployment. ClientNode contains UIClient (Swing/HTML). AppServer includes BusinessLogic, Foundation Services, and JVM. DataServer hosts a relational database. Arrows show bidirectional communication between layers, representing distributed component interaction.     subgraph ClientNode[Client Workstation]         UIClient[UI Layer - Swing/HTML]     end      subgraph AppServer[Application Server]         BusinessLogic[SanFrancisco Business Logic Layer]         Foundation[Foundation Services Layer]         JVM[Java Virtual Machine]     end      subgraph DataServer[Database Server]         DB[(Relational Database)]     end      UIClient &lt;--&gt; BusinessLogic     BusinessLogic &lt;--&gt; Foundation     Foundation &lt;--&gt; DB"},{"location":"sec_freeform/ibm-sanfran/#state-diagram-for-a-business-objects-lifecycle","title":"State Diagram for a Business Object\u2019s Lifecycle","text":"<p>(See Commands, workflows and statecharts)</p> <p>Below is a representation of an <code>Order</code>\u2019s lifecycle as managed by SanFrancisco's object framework:</p> stateDiagram-v2     accTitle: State diagram showing lifecycle transitions for an Order object     accDescr: State diagram showing lifecycle transitions for an Order object. Starts at New, proceeds to PendingApproval, then either Approved or Rejected. Approved leads to Shipped, then Completed. Rejected and Completed transition to end state. Models business process flow using explicit states and transitions.     [*] --&gt; New     New --&gt; PendingApproval: submit()     PendingApproval --&gt; Approved: approve()     PendingApproval --&gt; Rejected: reject()     Approved --&gt; Shipped: ship()     Shipped --&gt; Completed: deliveryConfirmed()     Completed --&gt; [*]     Rejected --&gt; [*]"},{"location":"sec_freeform/ibm-sanfran/#a-rather-long-coda","title":"A Rather Long Coda","text":""},{"location":"sec_freeform/ibm-sanfran/#tradeoffs-why-sanfrancisco-didnt-become-the-one-size-fits-all-winner","title":"Tradeoffs &amp; why SanFrancisco didn\u2019t become the one-size-fits-all winner","text":"<ul> <li>Complexity and heavy weight: the framework and runtime services were large and required buy-in and operational expertise; mapping to messy legacy schemas could still be work-intensive.</li> <li>Standards and market competition: EJB and later J2EE, plus CORBA/EJB alliances, plus vendor frameworks, split attention. SanFrancisco was IBM-centric and not a full CORBA ORB; many shops preferred standardized stacks.</li> <li>Performance and distribution tradeoffs: coarse grain reduces chattiness but increases the cost of a single call; caching and careful design were required to meet SLAs. IBM documentation contains performance guidance and warnings.</li> </ul> <p>IBM eventually folded the SanFrancisco ideas and some code paths into its WebSphere/business-component story (WebSphere Business Components), and the SanFrancisco name/packaging faded even as many design patterns remained influential.</p>"},{"location":"sec_freeform/ibm-sanfran/#what-came-after","title":"What came after","text":"<p>Contemporary cloud computing mechanisms and architectural patterns have made older technologies like EJBs and coarse-grained Java objects less relevant in many scenarios. Here are some key modern alternatives that outperform them in terms of performance, security, and reusability:</p>"},{"location":"sec_freeform/ibm-sanfran/#microservices-containerization-performance-reusability","title":"Microservices &amp; Containerization (Performance &amp; Reusability)","text":"<ul> <li>Replace EJBs and coarse-grained components with fine-grained, independently deployable services.</li> <li>Technologies, such as Kubernetes and Docker enable lightweight, scalable deployments (vs. heavyweight EJB containers). Modern frameworks, such as Spring Boot, Quarkus, and Micronaut eliminate EJB\u2019s boilerplate while offering better startup times and memory efficiency.</li> <li>Advantages: Faster scaling (horizontal, vs. EJB\u2019s vertical scaling); better fault isolation (a failing microservice doesn\u2019t crash the whole app).</li> </ul>"},{"location":"sec_freeform/ibm-sanfran/#serverless-computing","title":"Serverless Computing","text":"<ul> <li>Replaces EJB\u2019s long-lived, stateful session beans with ephemeral, stateless functions.</li> <li>Technologies, such as AWS Lambda, Azure Functions, Google Cloud Functions execute code on-demand without managing servers.</li> <li>Advantages: No need for application server overhead (EJBs require a full Java EE container); pay-per-use cost model (vs. always-on EJB servers).</li> </ul>"},{"location":"sec_freeform/ibm-sanfran/#cloud-native-databases-caching","title":"Cloud-Native Databases &amp; Caching","text":"<ul> <li>Replace EJB\u2019s entity beans (CMP/BMP) with modern persistence layers.</li> <li>Technologies, such as NoSQL (MongoDB, Cassandra, DynamoDB) scale better than EJB\u2019s JPA/Hibernate for distributed systems; Redis and Elasticache offer low-latency caching (better than EJB\u2019s second-level cache).</li> <li>Advantages: Horizontal scalability (vs. EJB\u2019s reliance on monolithic RDBMS); faster read/write performance in distributed environments.</li> </ul>"},{"location":"sec_freeform/ibm-sanfran/#api-first-restful-services","title":"API-First &amp; RESTful Services","text":"<ul> <li>Replace EJB\u2019s RMI-based remote interfaces with lightweight APIs.</li> <li>Technologies, such as REST (JAX-RS, Spring WebFlux), GraphQL, and gRPC are more flexible than EJB\u2019s CORBA-style remoting.</li> <li>Advantages: Language-agnostic APIs (vs. EJB\u2019s Java-only remoting); better suited for cloud-native, multi-cloud, and hybrid deployments.</li> </ul>"},{"location":"sec_freeform/ibm-sanfran/#zero-trust-and-cloud-native-security","title":"Zero-Trust and Cloud-Native Security","text":"<ul> <li>Replace EJB\u2019s JAAS and declarative security with modern cloud security models.</li> <li>Technologies, including OAuth2/OpenID Connect (Keycloak, Auth0) are better than EJB role-based security; they externalize auth and allow dynamic, fine-grained acces. Others, such as Service Meshes (Istio, Linkerd), provide mTLS, fine-grained access control (vs. EJB\u2019s coarse-grained security).</li> <li>Advantages:  Dynamic, policy-based security (vs. static EJB deployment descriptors); better support for distributed identity management.</li> </ul>"},{"location":"sec_freeform/ibm-sanfran/#event-driven-and-reactive-architectures","title":"Event-Driven and Reactive Architectures","text":"<ul> <li>Replace EJB\u2019s synchronous, blocking model with async processing.</li> <li>Technologies, such as Kafka, RabbitMQ, AWS EventBridge decouple components better than EJB\u2019s JMS, and non-blocking I/O of Reactive Frameworks (Spring WebFlux, Vert.x) outperforms EJB\u2019s thread-per-request model.</li> <li>Advantages:  High concurrency is handled much better (EJBs struggled under heavy load); more resilient to failures (reactive systems embrace chaos engineering).</li> </ul>"},{"location":"sec_freeform/ibm-sanfran/#conclusion","title":"Conclusion","text":"<p>EJBs and coarse-grained Java objects were designed for monolithic, on-premise Java EE apps, whereas modern cloud computing favors lightweight, distributed, and scalable architectures. The shift to microservices, serverless, cloud-native databases, and event-driven systems has rendered EJBs largely obsolete for high-performance, secure, and reusable applications.</p>"},{"location":"sec_freeform/ibm-sanfran/#sources","title":"Sources","text":"<ul> <li>IBM press releases and archived Redbooks (~35%)</li> <li>The usual GenAI suspects \u2014 with their bottomless pools of resources, including those fed by Universities of Hamburg (love the city) and Dresden, Germany  (~40%)</li> <li>My long-term memory (~20%)</li> </ul> <p>2025.08.12</p> <p></p>"},{"location":"sec_freeform/identity/","title":"The Long Arc of Digital Identity","text":"<p>An attempt to make sense of where digital identity management came from, what thorny roads it travelled, and where it is headed. Alternative title: The Long Arc of Digital Identity: From Islands to Federation.</p>"},{"location":"sec_freeform/identity/#introduction","title":"Introduction","text":"<p>In the 1990s, every application was its own island. A user's \"identity\" was whatever record lived in that app's local database. As organizations grew, this model collapsed under its own weight \u2014 employees juggled dozens of credentials, IT departments drowned in password resets, and security became a game of whack-a-mole across disconnected systems.</p> <p>What followed was a 30-year evolution from isolated authentication toward federated trust \u2014 a journey that fundamentally changed how we think about identity in computing.</p> <p>This essay traces that evolution through four distinct eras, examining not just what changed, but why these shifts happened and what trade-offs each generation accepted. Understanding this progression helps explain the hybrid architectures most enterprises run today, where all four models often coexist in an uneasy alliance.</p>"},{"location":"sec_freeform/identity/#era-1-local-authentication-1990s","title":"Era 1: Local Authentication (1990s)","text":"<p>Each application stored and verified credentials locally. Identity existed nowhere except inside that application's database.</p>"},{"location":"sec_freeform/identity/#how-it-worked","title":"How It Worked","text":"<p>Applications performed simple string comparison or basic hashing against stored passwords:</p> <ul> <li>Passwords stored in plain text or weakly hashed (MD5, SHA-1)</li> <li>No salting, no key derivation functions</li> <li>Session management via simple cookies with minimal expiration</li> <li>Each app reimplemented authentication logic from scratch</li> </ul> <p>The flow of the rudimentory local authentication:</p> graph TD     accTitle: Local authentication model from the 1990s     accDescr: Flow diagram showing isolated authentication where a User submits username and password directly to an Application, which then checks credentials against its own Local User Database. Each application maintains its own separate user store with no central identity management.      U[User] --&gt;|login: username + password| App1[Application]     App1 --&gt;|check credentials| DB1[Local User DB]"},{"location":"sec_freeform/identity/#why-it-failed","title":"Why It Failed","text":"<ul> <li>The password problem: Users reused weak passwords across systems. A breach in one application meant credentials for all applications.</li> <li>The operational nightmare: Onboarding a new employee meant manually creating accounts in 15+ systems. Off-boarding meant remembering to delete from all of them (spoiler: you forgot at least three).</li> <li>No visibility: Security teams had no way to detect compromised accounts or enforce policies across systems. Audit trails existed in siloes, making forensics nearly impossible.</li> <li>The breaking point: As web applications proliferated in the late 1990s, organizations realized they needed a fundamental rethink. You can't scale islands.</li> </ul>"},{"location":"sec_freeform/identity/#era-2-centralized-identity-management-early-2000s","title":"Era 2: Centralized Identity Management (Early 2000s)","text":"<p>Identity became a shared organizational resource, managed centrally in directories (LDAP, eDirectory, Active Directory) and synchronized everywhere by meta-directory tools.</p>"},{"location":"sec_freeform/identity/#how-it-worked_1","title":"How It Worked","text":"<ul> <li>Directory Services: LDAP (Lightweight Directory Access Protocol, RFC 4511) became the standard. Applications no longer stored credentials \u2014 they performed bind operations against a directory server on port 389 (636 for LDAPS).</li> <li>Meta-Directory Engines: Tools like Novell Identity Manager, Microsoft Identity Integration Server, and Sun Identity Manager used drivers to synchronize identity data:</li> <li>Publisher/Subscriber channels: Changes flowed bidirectionally through a policy engine</li> <li>Connectors: Java or ECMA-based adapters for each target system (AD, SAP, mainframes)</li> <li>Policy-based provisioning: \"If user.department = 'Engineering', create account in these systems with these attributes\"</li> <li>Conflict resolution: When multiple systems updated the same attribute, engines used timestamp-based or priority-based logic Password Synchronization: Some deployments used password filters (DLLs hooked into domain controllers) to intercept password changes and propagate them in real-time.</li> </ul> <p>Here is a diagram showing the centralized identity management and directory synchronization flow:</p> graph TD     accTitle: Centralized identity management with directory synchronization     accDescr: Flow diagram showing how HR System feeds employee data to Novell Identity Manager, which provisions user objects to eDirectory and synchronizes accounts to Active Directory and Email System using specialized drivers. Users authenticate via LDAP bind on port 389 to eDirectory. This illustrates centralized identity with automated provisioning across multiple systems.     HR[HR System] --&gt;|new hire event| IDM[Novell Identity Manager]     IDM --&gt;|provision user object| eDir[eDirectory]     IDM --&gt;|sync account via AD driver| AD[Active Directory]     IDM --&gt;|sync account via email driver| Mail[Email System]     User[User] --&gt;|LDAP bind on port 389| eDir"},{"location":"sec_freeform/identity/#the-value-proposition","title":"The Value Proposition","text":"<ul> <li>Single source of truth: HR system becomes authoritative; identity flows downstream automatically</li> <li>Automated lifecycle: Hire-to-retire workflows replaced manual provisioning</li> <li>Centralized policy enforcement: Password complexity, account expiration, role-based access</li> <li>Audit trail: Who provisioned what, when, and why</li> </ul>"},{"location":"sec_freeform/identity/#the-limitations","title":"The Limitations","text":"<ul> <li>Still fundamentally internal: This model worked beautifully within an enterprise but offered no path to federate with partners, cloud services, or external applications.</li> <li>Password synchronization is fragile: Keeping passwords in sync across systems created timing windows and failure modes. A better model would eliminate password synchronization entirely.</li> <li>The cloud changes everything: By the late 2000s, SaaS applications appeared. Your internal directory couldn't provision accounts in Salesforce or Google Apps \u2014 at least not without complex connectors that broke constantly.</li> </ul>"},{"location":"sec_freeform/identity/#era-3-web-federation-via-saml-mid-2000s-to-2010s","title":"Era 3: Web Federation via SAML (Mid-2000s to 2010s)","text":"<p>Instead of every application storing credentials, applications learned to trust an Identity Provider (IdP) to authenticate users and issue cryptographically signed assertions.</p>"},{"location":"sec_freeform/identity/#how-it-worked_2","title":"How It Worked","text":"<p>SAML 2.0 (Security Assertion Markup Language) introduced browser-based Single Sign-On:</p> <ol> <li>User accesses a Service Provider (SP) application</li> <li>SP generates an <code>AuthnRequest</code> and redirects the browser to the IdP</li> <li>IdP authenticates the user (typically against LDAP/AD)</li> <li>IdP generates a signed XML assertion containing user attributes</li> <li>Browser POSTs the assertion back to the SP's Assertion Consumer Service (ACS)</li> <li>SP validates the XML signature and grants access</li> </ol> <p>The SAML Assertion: <pre><code>&lt;saml:Assertion&gt;\n  &lt;saml:Subject&gt;\n    &lt;saml:NameID&gt;user@example.com&lt;/saml:NameID&gt;\n  &lt;/saml:Subject&gt;\n  &lt;saml:Conditions NotBefore=\"...\" NotOnOrAfter=\"...\"&gt;\n    &lt;saml:AudienceRestriction&gt;\n      &lt;saml:Audience&gt;https://sp.example.com&lt;/saml:Audience&gt;\n    &lt;/saml:AudienceRestriction&gt;\n  &lt;/saml:Conditions&gt;\n  &lt;saml:AttributeStatement&gt;\n    &lt;saml:Attribute Name=\"email\"&gt;\n      &lt;saml:AttributeValue&gt;user@example.com&lt;/saml:AttributeValue&gt;\n    &lt;/saml:Attribute&gt;\n    &lt;saml:Attribute Name=\"department\"&gt;\n      &lt;saml:AttributeValue&gt;Engineering&lt;/saml:AttributeValue&gt;\n    &lt;/saml:Attribute&gt;\n  &lt;/saml:AttributeStatement&gt;\n  &lt;ds:Signature&gt;...&lt;/ds:Signature&gt;\n&lt;/saml:Assertion&gt;\n</code></pre></p> <ul> <li>Trust Establishment: SP and IdP exchanged metadata XML files containing X.509 certificates (RSA-2048+) and endpoint URLs. The SP validated assertions using the IdP's public key \u2014 no shared secrets required.</li> <li>Session Management: The <code>NotOnOrAfter</code> condition plus SP-side session cookies controlled SSO duration.</li> </ul> <p>Here is the single sign-on flow:</p> graph TD     accTitle: SAML 2.0 browser-based single sign-on flow     accDescr: Sequence diagram showing SAML web SSO. Step 1: User Browser accesses protected resource at Service Provider. Step 2: SP generates SAML AuthnRequest. Step 3: SP redirects browser with AuthnRequest. Step 4: Browser POSTs AuthnRequest to Identity Provider. Step 5: IdP authenticates via LDAP against eDirectory or AD. Step 6: IdP generates signed SAML Assertion. Step 7: IdP sends HTTP POST with assertion to browser. Step 8: Browser POSTs assertion back to SP. Step 9: SP validates signature and grants access. This demonstrates cryptographic trust and browser-mediated federation.      U[User Browser] --&gt;|1 Access protectedresource| SP[Service Provider]     SP --&gt;|2 Generate SAMLAuthnRequest| SP     SP --&gt;|3 HTTP Redirectwith AuthnRequest| U     U --&gt;|4 POST AuthnRequest| IdP[Identity Provider]     IdP --&gt;|5 Authenticatevia LDAP| Dir[eDirectory or AD]     IdP --&gt;|6 Generate signedSAML Assertion| IdP     IdP --&gt;|7 HTTP POSTassertion to ACS| U     U --&gt;|8 POSTassertion| SP     SP --&gt;|9 Validate signatureand grant access| U"},{"location":"sec_freeform/identity/#why-this-mattered","title":"Why This Mattered","text":"<ul> <li>The cloud breakthrough: SAML enabled enterprises to federate with external SaaS providers. Employees could access Salesforce, Workday, and internal apps with one login.</li> <li>Cryptographic trust: XML signatures meant SPs didn't need to call back to the IdP to validate assertions \u2014 they could verify them locally using public-key cryptography.</li> <li>Attribute propagation: Assertions carried user attributes (email, role, department), enabling attribute-based access control without provisioning accounts in advance.</li> <li>Cross-organizational federation: Universities formed federations (InCommon, eduGAIN) where students could access resources at any member institution.</li> </ul>"},{"location":"sec_freeform/identity/#the-limitations_1","title":"The Limitations","text":"<ul> <li>Web-only: SAML assumed browser redirects. Native mobile apps and API-to-API communication didn't fit the model.</li> <li>XML complexity: SAML's XML signatures and canonicalization rules were notoriously difficult to implement correctly. Many implementations had security vulnerabilities.</li> <li>Single Logout is a nightmare: SAML Single Logout (SLO) attempted to terminate sessions at IdP and all SPs simultaneously \u2014 but relied on browser redirects and cooperation from all parties. In practice, it rarely worked reliably.</li> <li>The mobile revolution: By 2010, smartphones demanded a better model. SAML wasn't designed for native apps that couldn't intercept HTTP redirects.</li> </ul>"},{"location":"sec_freeform/identity/#era-4-token-based-federation-2010spresent","title":"Era 4: Token-Based Federation (2010s\u2013Present)","text":"<p>OAuth 2.0 and OpenID Connect (OIDC) introduced token-based delegation for web, mobile, and API ecosystems. Identity became an API service.</p>"},{"location":"sec_freeform/identity/#how-it-worked_3","title":"How It Worked","text":"<p>OAuth 2.0 is an authorization framework that enables applications to obtain limited access to user resources without exposing credentials. It introduced scopes (permissions) and multiple flows for different scenarios:</p> <ul> <li>Authorization Code Flow (with PKCE): Most secure, for web and mobile apps</li> <li>Client Credentials Flow: Service-to-service authentication without user context</li> <li>Implicit Flow: Deprecated due to security concerns</li> </ul> <p>OpenID Connect added an authentication layer on top of OAuth 2.0, introducing the ID Token \u2014 a JSON Web Token (JWT) that contains user identity claims.</p> <p>JWT Structure: <pre><code>{\n  \"header\": {\"alg\": \"RS256\", \"typ\": \"JWT\", \"kid\": \"abc123\"},\n  \"payload\": {\n    \"iss\": \"https://idp.example.com\",\n    \"sub\": \"user-id-12345\",\n    \"aud\": \"client-app-xyz\",\n    \"exp\": 1735689600,\n    \"iat\": 1735686000,\n    \"email\": \"user@example.com\",\n    \"email_verified\": true,\n    \"nonce\": \"random-nonce\"\n  },\n  \"signature\": \"...\"\n}\n</code></pre></p> <p>Tokens are signed using RSA or ECDSA. Resource servers validate them by: 1. Fetching the IdP's public keys from <code>/.well-known/jwks.json</code> 2. Verifying the signature 3. Checking <code>iss</code> (issuer), <code>aud</code> (audience), <code>exp</code> (expiration), <code>nonce</code> (replay protection)</p> <p>Access Tokens vs Refresh Tokens: - Access tokens: Short-lived (5-15 minutes), presented to APIs to access resources - Refresh tokens: Long-lived (days/months), used to obtain new access tokens without re-authentication - PKCE (Proof Key for Code Exchange, RFC 7636): Prevents authorization code interception attacks in mobile and single-page applications by introducing a cryptographic challenge.</p> <p>The OAuth 2.0 and OIDC token-based authentication flow, diagrammatically:</p> graph TD     accTitle: OAuth 2.0 and OpenID Connect token-based authentication flow     accDescr: Flow diagram showing modern token-based authentication. Step 1: User or App initiates authentication with scope request to OIDC OAuth Server. Step 2: Server authenticates against eDirectory or AD. Step 3: Server issues ID Token and Access Token to Client App. Step 4: Client presents Access Token to Resource Server API. Step 5: API validates token signature and claims. Step 6: API returns protected resource. This illustrates API-ready, device-agnostic authentication using JSON Web Tokens.      User[User or App] --&gt;|1 Initiate authwith scope| OIDC[OIDC OAuthServer]     OIDC --&gt;|2 Authenticate| Dir[eDirectoryor AD]     OIDC --&gt;|3 Issue ID Tokenand Access Token| Client[Client App]     Client --&gt;|4 PresentAccess Token| API[ResourceServer API]     API --&gt;|5 Validate tokensignature and claims| API     API --&gt;|6 Return protectedresource| Client"},{"location":"sec_freeform/identity/#why-this-won","title":"Why This Won","text":"<ul> <li>Device-agnostic: Works seamlessly across web browsers, native mobile apps, single-page apps, and backend services.</li> <li>API-first: Access tokens are designed for REST APIs and microservices architectures.</li> <li>Fine-grained authorization: Scopes enable precise control over what an application can do (e.g., <code>calendar:read</code>, <code>email:send</code>).</li> <li>Delegated access: Users can grant third-party apps limited access to their data without sharing passwords (the \"Sign in with Google\" use case).</li> <li>JSON simplicity: Compared to SAML's XML, JWT's JSON structure is easier to parse and debug.</li> <li>Token introspection: Resource servers can query the IdP to validate opaque tokens via RFC 7662.</li> </ul>"},{"location":"sec_freeform/identity/#the-trade-offs","title":"The Trade-Offs","text":"<ul> <li>Token sprawl: Managing access tokens, refresh tokens, ID tokens, and their lifecycles adds complexity.</li> <li>Security maturity required: Short-lived tokens, token rotation, secure storage, and proper validation are essential \u2014 but easy to get wrong.</li> <li>The \"just use a library\" problem: OAuth/OIDC are flexible frameworks, not prescriptive protocols. Developers must make many security-critical decisions, leading to inconsistent implementations.</li> </ul>"},{"location":"sec_freeform/identity/#comparative-analysis","title":"Comparative Analysis","text":"Era Identity Source Protocol Scope Trust Model Key Innovation Primary Limitation 1990s Local Auth Local DB per app Username/Password Single application Shared secrets N/A (baseline) Fragmented identities, password reuse 2000s Directory/IDM Central directory (LDAP/AD) LDAP bind + Sync Enterprise-wide Centralized credentials Automated provisioning No cross-domain federation 2000s\u20132010s SAML Directory-backed IdP XML assertions Web SSO (internal + external) Public-key cryptography (XML signatures) Cross-organizational federation Web-only, XML complexity 2010s\u2013Present OAuth/OIDC Cloud IdP or directory JSON tokens (JWT) Web + Mobile + API Token-based (short-lived, signed JWTs) Device-agnostic, API-ready Token lifecycle complexity"},{"location":"sec_freeform/identity/#the-common-thread","title":"The Common Thread","text":"<p>Each transition addressed a specific breaking point: - Local \u2192 Directory: Password sprawl and operational burden - Directory \u2192 SAML: Need for external federation and cloud SSO - SAML \u2192 OAuth/OIDC: Mobile devices and API-driven architectures</p> <p>Each generation abstracted identity one layer further from individual applications, moving toward identity as a platform service.</p>"},{"location":"sec_freeform/identity/#how-they-coexist-today","title":"How They Coexist Today","text":"<p>Modern enterprises rarely run a single model \u2014 they operate hybrid architectures where all four layers coexist:</p> graph TD     accTitle: Modern enterprise hybrid identity architecture     accDescr: Comprehensive diagram showing how all identity eras coexist. HR ERP Source feeds employee data to Identity Manager, which provisions and syncs to eDirectory or Active Directory. The directory serves as authentication backend for both SAML Identity Provider and OIDC OAuth Provider. SAML IdP issues assertions to Legacy Web App for browser SSO. OIDC Provider issues JWT tokens to Modern Cloud Mobile App and API access tokens to Microservices. MFA Service provides step-up challenge to OIDC Provider. This shows layered architecture where directories, SAML, and OIDC all operate simultaneously, supporting diverse application types.     HR[HR ERPSource] --&gt;|employeedata feed| IDM[IdentityManager]     IDM --&gt;|provisionand sync| Dir[eDirectory orActive Directory]     Dir --&gt;|LDAP authbackend| SAMLIdP[SAML IdentityProvider]     Dir --&gt;|LDAP authbackend| OIDCIdP[OIDC OAuthProvider]     SAMLIdP --&gt;|SAMLassertion| LegacyApp[LegacyWeb App]     OIDCIdP --&gt;|JWTtokens| CloudApp[Modern CloudMobile App]     OIDCIdP --&gt;|API accesstokens| MicroServices[Microservices]     User[User] --&gt;|Browser SSO| SAMLIdP     User --&gt;|Mobile SPAauth| OIDCIdP     MFA[MFA Service] --&gt;|step-upchallenge| OIDCIdP  <p>The diagram above shows a typical enterprise stack:</p> <ol> <li>HR system feeds identity data into an Identity Manager (IDM)</li> <li>IDM provisions and synchronizes accounts to Active Directory and eDirectory</li> <li>Directories serve as the authentication backend for both SAML and OIDC providers</li> <li>SAML IdP handles SSO for legacy web applications (SharePoint, on-premise portals)</li> <li>OIDC Provider issues JWTs for modern cloud apps, mobile clients, and microservices</li> <li>MFA service provides step-up authentication for high-risk operations</li> </ol>"},{"location":"sec_freeform/identity/#additional-modern-layers","title":"Additional Modern Layers","text":"<ul> <li>Conditional Access / Context-Aware Authentication: IdPs evaluate device posture, location, IP reputation, and risk scores before issuing tokens. A login from a corporate laptop on the office network might succeed automatically, while the same user from a cafe triggers MFA.</li> <li>Multi-Factor Authentication (MFA): Time-based OTP (TOTP, RFC 6238), push notifications, SMS codes, and WebAuthn/FIDO2 for passwordless authentication using biometrics or hardware keys.</li> <li>Zero Trust Architecture: Continuous verification replaces \"trust but verify.\" Access tokens expire quickly (5-15 minutes), refresh tokens are rotated, and every request is evaluated against policy.</li> </ul> <p>Evolving Standards: - OAuth 2.1: Consolidates best practices, mandates PKCE, removes insecure flows - FAPI (Financial-grade API): High-security profile for sensitive sectors (banking, healthcare)</p>"},{"location":"sec_freeform/identity/#common-migration-patterns","title":"Common Migration Patterns","text":"<p>SAML \u2192 OIDC Migration: 1. Stand up OIDC provider alongside existing SAML IdP (both backed by same directory) 2. Migrate new applications to OIDC 3. Gradually move legacy apps as vendors add OIDC support 4. Maintain SAML IdP for stragglers (some vendors will never update)</p> <p>The hybrid reality: Most enterprises will run SAML and OIDC side-by-side for years, possibly indefinitely.</p>"},{"location":"sec_freeform/identity/#why-this-history-matters","title":"Why This History Matters","text":"<p>Understanding these layers isn't just academic \u2014 it explains why our authentication infrastructure looks the way it does:</p> <ul> <li>Why do we still have Active Directory? Because Era 2 (directories) became load-bearing infrastructure. Thousands of applications authenticate against LDAP, and ripping that out would break everything.</li> <li>Why does SSO feel inconsistent? Because some apps use SAML, some use OIDC, some still require local passwords, and they don't always play nicely together.</li> <li>Why are tokens so complicated? Because OAuth 2.0 chose flexibility over prescription, allowing for many valid (and many insecure) implementations.</li> <li>Why can't we just start over? Because backward compatibility matters. The 20-year-old app running our supply chains won't magically support OIDC. You build around it.</li> </ul>"},{"location":"sec_freeform/identity/#for-decision-makers","title":"For Decision-Makers","text":"<ul> <li>New applications: Default to OIDC. It's the modern standard.</li> <li>Existing SAML apps: Keep them on SAML unless there's a compelling reason to migrate.</li> <li>Legacy apps without federation: Consider a reverse proxy with authentication injection (e.g., OAuth2 Proxy, Authelia) rather than modifying the app.</li> <li>Partner federation: SAML still dominates B2B use cases (especially government and higher education).</li> </ul>"},{"location":"sec_freeform/identity/#for-developers","title":"For Developers","text":"<ul> <li>Use battle-tested libraries: Don't implement OAuth/OIDC flows from scratch. Use Auth0, Keycloak, Okta SDKs, or proven open-source libraries.</li> <li>Short-lived tokens are your friend: Prefer 5-15 minute access tokens with refresh token rotation over long-lived tokens.</li> <li>Validate everything: Check token signatures, expiration, audience, issuer. One missed validation = security vulnerability.</li> <li>Test federation edge cases: What happens when the IdP is down? When tokens expire mid-session? When a user's account is disabled but they have a valid refresh token?</li> </ul>"},{"location":"sec_freeform/identity/#the-next-frontier","title":"The Next Frontier","text":"<p>The identity journey continues. Emerging trends include:</p> <ul> <li>Decentralized Identity (DIDs, Verifiable Credentials): Users control their own identity data via blockchain or distributed ledgers, presenting cryptographically signed credentials without central IdPs. Still experimental, but gaining traction in government ID and academic credentials.</li> <li>Privacy-Preserving Authentication: Zero-knowledge proofs enable authentication without revealing identifying information \u2014 you prove you're over 21 without disclosing your birthdate.</li> <li>Post-Quantum Cryptography: Current RSA/ECDSA signatures in SAML and JWT will be vulnerable to quantum computers. NIST's post-quantum algorithm standards (2024) are beginning to influence long-term identity architectures.</li> <li>Passwordless by Default: WebAuthn/FIDO2 adoption is accelerating. Biometrics and hardware keys are replacing passwords entirely, not just augmenting them with MFA.</li> </ul>"},{"location":"sec_freeform/identity/#wrap-up","title":"Wrap-up","text":"<p>From local databases to federated APIs, identity infrastructure evolved to solve real problems: password fatigue, operational overhead, cloud integration, mobile support. Each era built on its predecessors rather than replacing them \u2014 which is why modern enterprises run archaeological layers of authentication, all simultaneously.</p> <p>The login button we click today is the visible tip of a 30-year accumulation of protocols, compromises, and architectural decisions. Understanding that history helps you navigate the hybrid mess we've inherited\u2014and design better systems for the future.</p> <p>Identity infrastructure is never \"done.\" It's a living system that adapts to new threats, new devices, and new organizational needs. The next chapter is already being written.</p> <p>2025.10.05</p>"},{"location":"sec_gloss/","title":"Miscellaneous Glossaries","text":"<p>This section contains a few alphabetized glossaries across domains:</p> <ul> <li>OSS Terms</li> <li>Networking Terms</li> <li>Kubernetes Terms</li> <li>Cloud-Native Terms</li> </ul>"},{"location":"sec_gloss/gloss_cloud-native/","title":"Glossary of Cloud-Native Terms","text":"<p>Below is a list of terms foundational to cloud-native ecosystems.</p> Term/Acronym Full Description Extra Details Chaos Engineering The practice of intentionally injecting failures into a system to test its resilience and identify weaknesses before they cause outages in production. Tools: Chaos Monkey, Gremlin. Helps build confidence in system reliability under real-world conditions. CI/CD and Continuous Deployment When integrated, CI/CD together make it possible to implement Continuous Deployment. In Continuous Deployment, application changes run through the CI/CD pipeline and passing builds get deployed directly and seamlessly to fully automated production environments. Teams practicing Continuous Delivery can deploy to production on a daily or even hourly schedule. Reduces manual intervention in releases; enables rapid iteration and delivery of features to users. Cloud A term for delivering hosted services over the internet. Cloud services differ from traditional infrastructure and platform hosting because they are elastic (users can employ only as much service as they need), sold on demand, and fully managed by the provider (requires only a computer and Internet access). See: Private Cloud, Public Cloud. Examples: AWS, Azure, Google Cloud. Can be deployed as public, private, or hybrid models, often billed on a pay-as-you-go basis. CNCF The Cloud Native Computing Foundation (CNCF) is a Linux Foundation project that was founded in 2015 to help advance container technology and align the tech industry around its evolution. Today CNCF hosts critical components of the global technology infrastructure, and \"brings together the world\u2019s top developers, end users, and vendors and runs the largest open source developer conferences.\" Hosts major projects like Kubernetes, Prometheus, Envoy, and Fluentd. Provides certifications like CKA/CKAD. Configuration Management Specifically, the automation of server configuration and management, using tools such as Ansible, Puppet, Chef, or Terraform. Enables consistent, repeatable environment setup; essential for Infrastructure as Code (IaC) practices. Containers Lightweight, standalone executable software packages that include everything required to run an application: code, runtime, system tools, libraries, and settings. Containers are a sort of \u2018standard unit\u2019 of software that packages the code with all its dependencies so it can run anywhere, in any computing environment. Common runtimes: Docker, containerd. Often orchestrated using Kubernetes for scaling and reliability. Continuous Delivery Continuous Delivery (CD) starts where Continuous Integration ends. CD automates the delivery of CI\u2019s small, iterative changes to run on cloud-based infrastructure. Most teams work with multiple environments outside the production pipeline, such as development and testing environments, and CD provides an automated way to push code changes to them. CD automation then performs any necessary service calls to web servers or databases, and executes procedures when applications are deployed. Bridges CI with deployment workflows; ensures code is always in a deployable state. Often paired with automated testing. Continuous Integration Continuous Integration (CI) is a development approach where teams implement small changes and check in code to version-control repositories frequently, so that the codebase is constantly iterated and updated. The technical goal of CI is to establish a consistent and automated way to build, package, and test applications. Tools include Jenkins, GitHub Actions, GitLab CI/CD, and CircleCI. CI reduces integration issues and speeds up feedback loops. Cross-Functional Teams On such a team, members have different skills, but work collaboratively toward the same goal. Team members have all competencies necessary for accomplishing the work within the team\u2014so there are no dependencies on others outside the team. In software development this typically means frontend and backend developers, database and UX specialists, QA engineers, and any other role necessary for producing the product or service. Encourages autonomy, reduces bottlenecks, and increases delivery speed; common in Agile and DevOps environments. Culture How individuals within an organisation communicate and work with each other. Culture is the sum of the daily actions that you take, your routines. If you talk to people as part of doing your work, you have a collaborative culture. Needing to seek permission before trying something new means you have a hierarchical culture. If you change the actions, you change the culture. Shapes adoption of cloud-native practices; strong DevOps culture supports collaboration, automation, and continuous improvement. Data-Driven Design The practice of developing or improving a product based on things you can measure. Metrics like site analytics, carrying out A/B testing, or surveying users for feedback are all used to make design decisions. Requires reliable analytics tools and KPIs; helps ensure decisions align with real user behavior and business goals. Design Thinking A human-centred approach to business processes. Design thinking focuses on customer problems and challenges as the foundation to producing products and services that satisfy their wants and needs, and is an excellent tool to combine with Cloud Native development processes. Typically involves stages: Empathize, Define, Ideate, Prototype, Test. Encourages innovation and iteration. DevOps Both a culture and a set of processes aimed at reducing the division between software development and its actual operation. With DevOps, the traditionally siloed Development and Operations teams work together as one cohesive team (or, sometimes, two teams in tight collaboration). The approach facilitates fast and seamless software development while optimising both productivity and reliability. Companies adopting the DevOps model create teams that embrace the entire development and infrastructure lifecycle in their scope of responsibility. See: SRE. Key practices: CI/CD, Infrastructure as Code, monitoring, incident response, and continuous feedback. GitOps A paradigm for managing infrastructure and application deployments using Git as the single source of truth. Changes to infrastructure or applications are made via Git commits, which trigger automated workflows to reconcile the actual state with the desired state. Tools: ArgoCD, Flux. Enhances auditability, collaboration, and rollback capabilities. Greenfield Project Building a complete software development system where previously there was none. In Cloud Native, it means not just cloud-based infrastructure but also incorporates architecture, design, process, and culture\u2014basically, starting completely from scratch in every possible area. Greenfield development is often viewed as advantageous because it is free from constraints that can be imposed by a system\u2019s existing networks/infrastructure. Opposite of \u201cbrownfield\u201d projects, which involve upgrading or integrating with existing systems. Infrastructure as Code (IaC) The practice of managing and provisioning infrastructure through machine-readable definition files (e.g., YAML, JSON) rather than manual processes. IaC enables version control, reproducibility, and automation of infrastructure deployment. Popular tools: Terraform, AWS CloudFormation, Pulumi. Reduces configuration drift and human error. Microservices An approach to application development in which a large application is built as a suite of modular components or services. Each service runs a unique process and usually manages its own database. A service can generate alerts, log data, support UIs and authentication, and perform various other tasks. Because microservices enable each component to be isolated, rebuilt, redeployed, and managed independently, development teams can take a more decentralized (nonhierarchical) approach to building software. Promotes scalability and resilience; often paired with containerization and service mesh technologies. Monolith A software application in which different components combine into a single executable program, launched from a single platform. Monolithic applications can only be released once all components are ready, which can lead to long release cycles. Easier to develop initially but harder to scale and maintain compared to microservices. Observability The ability to understand the internal state of a system by analyzing its outputs, such as logs, metrics, and traces. Observability goes beyond traditional monitoring by enabling deeper insights into system behavior and root-cause analysis. Key tools: Prometheus (metrics), Grafana (visualization), Jaeger (tracing). Essential for debugging distributed systems. Orchestration Refers to the automated configuration, coordination, and management of computer systems and software. In cloud computing, it refers more specifically to orchestrator tools. The best known is Kubernetes, an open-source system for automating the deployment, scaling, and management of containerised applications. In Cloud Native, orchestration is all about managing the lifecycles of containers, especially in large, dynamic environments. (Dev)Ops teams use container orchestration to control and automate tasks such as the availability, provisioning, and deployment of containers, load balancing of containers across infrastructure, and scaling up/down by adding/removing containers as needed. See also: Containers. Other orchestration tools: Apache Mesos, Docker Swarm, Nomad. Enables declarative management of infrastructure and services. Private Cloud A Private Cloud is meant to serve a single company. It\u2019s usually built and operated by said company in its own data centre. A Private Cloud provides greater control over data storage and other operational and security aspects. Offers customization and compliance benefits; examples: VMware vSphere, OpenStack. Public Cloud Public Cloud providers sell cloud services to any client, who creates an account with them. All clients share the same pool of computing resources. Examples of Public Cloud providers include Amazon Web Services (AWS), Microsoft Azure, and Google Cloud. Offers scalability and low upfront cost; often includes free-tier or trial usage for onboarding. Serverless A cloud computing execution model where the cloud provider dynamically manages the allocation of machine resources. Developers focus on writing code (functions) that runs in stateless compute containers triggered by events (e.g., HTTP requests). Billing is based on actual usage rather than pre-purchased capacity. Examples: AWS Lambda, Azure Functions, Google Cloud Functions. Ideal for event-driven, ephemeral workloads. Service Mesh A dedicated infrastructure layer for managing service-to-service communication in a microservices architecture. It provides features like load balancing, service discovery, encryption, and observability, typically implemented via sidecar proxies. Popular tools: Istio, Linkerd, Consul. Enhances security and reliability without requiring changes to application code. Sidecar Pattern A design pattern where a secondary container (the \"sidecar\") is deployed alongside the primary application container to provide auxiliary functionality, such as logging, monitoring, or network proxying. Commonly used in service meshes (e.g., Envoy proxy in Istio). Decouples cross-cutting concerns from the main application logic. SRE Site Reliability Engineering (SRE) is a term coined by Google to explain how it runs its systems. It was Google\u2019s answer to today's challenges with ensuring application performance and reliability at unprecedented scale. In SRE, responsibility for an organisation\u2019s platform is split between a product team, which focuses on delivery of the business value, application, or service (including innovation), and a reliability team, which focuses on both maintaining and improving the platform itself. Practices include error budgets, service-level objectives (SLOs), and automated remediation. Bridges DevOps principles with operational excellence. Twelve-Factor App A methodology for building software-as-a-service (SaaS) applications that are portable, scalable, and resilient. The twelve factors include declarative formats for setup, stateless processes, and loose coupling between components. Aligns well with microservices and cloud-native architectures; promotes DevOps-friendly practices. Unified Logging A centralized approach to collecting, storing, and analyzing logs from all components of a distributed system. Unified logging simplifies troubleshooting and provides a single source of truth for system behavior. Tools: ELK Stack (Elasticsearch, Logstash, Kibana), Fluentd. Critical for debugging and compliance. Virtual Private Cloud (VPC) An isolated virtual network within a public cloud provider, where resources (e.g., VMs, databases) can be deployed with controlled access. A VPC mimics the security and control of a private cloud while leveraging public cloud scalability. Key features: Subnets, firewalls, VPN connectivity. Used for multi-tier architectures and hybrid cloud setups. XaaS (Everything as a Service) A catch-all term for cloud services delivered on-demand, including IaaS, PaaS, SaaS, and newer models like FaaS (Function as a Service) or DBaaS (Database as a Service). Reflects the shift from owning infrastructure to consuming services. Examples: AWS RDS (DBaaS), Twilio (CPaaS). YAML (Yet Another Markup Language) A human-readable data serialization format commonly used for configuration files in cloud-native tools (e.g., Kubernetes manifests, Ansible playbooks). Combines simplicity with support for complex structures. Superseded JSON for many DevOps use cases due to readability and inline comments. Zero Trust A security model that assumes no implicit trust for any entity (users, devices, or services) inside or outside a network. Access is granted based on strict identity verification and least-privilege principles. Key components: Multi-factor authentication (MFA), microsegmentation, and continuous monitoring. Critical for modern distributed systems."},{"location":"sec_gloss/gloss_kuber/","title":"Glossary of Kubernetes Terms","text":"Term Description Extra Details Annotation A key-value pair that is used to attach arbitrary non-identifying metadata to objects. The metadata in an annotation can be small or large, structured or unstructured, and can include characters not permitted by labels. Clients such as tools and libraries can retrieve this metadata. Unlike labels, annotations are not used for selection/filtering. Common uses: build info, contact details, tool configurations. No size limit unlike labels (63 chars). API Group A set of related paths in Kubernetes API. You can enable or disable each API group by changing the configuration of your API server. You can also disable or enable paths to specific resources. API group makes it easier to extend the Kubernetes API. The API group is specified in a REST path and in the apiVersion field of a serialized object. Core groups: apps/v1, networking.k8s.io/v1, rbac.authorization.k8s.io/v1. Custom resources use custom groups. Empty group is \"core\" (v1). API server Also known as <code>kube-apiserver</code>. The API server is a component of the Kubernetes control plane that exposes the Kubernetes API. The API server is the front end for the Kubernetes control plane. The main implementation of a Kubernetes API server is kube-apiserver. kube-apiserver is designed to scale horizontally\u2014that is, it scales by deploying more instances. You can run several instances of kube-apiserver and balance traffic between those instances. Default port: 6443 (HTTPS). Validates and configures API objects. Stores data in etcd. Supports authentication, authorization, admission control. cgroup (control group) A group of Linux processes with optional resource isolation, accounting and limits. cgroup is a Linux kernel feature that limits, accounts for, and isolates the resource usage (CPU, memory, disk I/O, network) for a collection of processes. Foundation for container resource limits in Kubernetes. V1 (legacy) vs V2 (unified hierarchy). Manages CPU, memory, I/O bandwidth quotas. Cluster A set of worker machines, called nodes, that run containerized applications. Every cluster has at least one worker node. The worker node(s) host the Pods that are the components of the application workload. The control plane manages the worker nodes and the Pods in the cluster. In production environments, the control plane usually runs across multiple computers and a cluster usually runs multiple nodes, providing fault-tolerance and high availability. Minimum viable cluster: 1 control plane node + 1 worker node. Production typically 3+ control plane nodes for HA. Max ~5000 nodes per cluster. Container A lightweight and portable executable image that contains software and all of its dependencies. Containers decouple applications from underlying host infrastructure to make deployment easier in different cloud or OS environments, and for easier scaling. Uses Linux namespaces and cgroups. Shares kernel with host. Different from VMs. OCI (Open Container Initiative) standard format. Container Environment Variables Container environment variables are name=value pairs that provide useful information into containers running in a pod. Container environment variables provide information that is required by the running containerized applications along with information about important resources to the containers. For example, file system details, information about the container itself, and other cluster resources such as service endpoints. Can be set via: env, envFrom, ConfigMaps, Secrets. Auto-injected: Pod IP, Service endpoints. Downward API exposes Pod/Node info. Container Runtime The container runtime is the software that is responsible for running containers. Kubernetes supports several container runtimes: Docker, containerd, CRI-O, and any implementation of the Kubernetes CRI (Container Runtime Interface). For more information, see the CRI API and specifications. Docker deprecated in K8s 1.24+. containerd and CRI-O are popular. Must implement CRI (Container Runtime Interface). Low-level vs high-level runtimes. Control Plane The container orchestration layer that exposes the API and interfaces to define, deploy, and manage the lifecycle of containers. This layer is composed by many different components, such as (but not restricted to): &lt;&gt;. These components can be run as traditional operating system services (daemons) or as containers. The hosts running these components were historically called masters. Components: kube-apiserver, etcd, kube-scheduler, kube-controller-manager. Formerly called \"master nodes\". Can be HA (3+ nodes). Controller In Kubernetes, controllers are control loops that watch the state of your cluster, then make or request changes where needed. Each controller tries to move the current cluster state closer to the desired state. Controllers watch the shared state of your cluster through the apiserver (part of the Control Plane). Some controllers also run inside the control plane, providing control loops that are core to Kubernetes' operations. For example: the deployment controller, the daemonset controller, the namespace controller, and the persistent volume controller (and others) all run within the kube-controller-manager. Implements reconciliation loops. Built-in: Deployment, ReplicaSet, Node, Service controllers. Custom controllers via operators/CRDs. CustomResourceDefinition Custom code that defines a resource to add to your Kubernetes API server without building a complete custom server. Custom Resource Definitions let you extend the Kubernetes API for your environment if the publicly supported API resources can't meet your needs. CRDs enable custom resources. Used with operators for complex apps. Supports validation, versioning, subresources. Alternative to aggregated APIs. DaemonSet Ensures a copy of a Pod is running across a set of nodes in a cluster. Used to deploy system daemons such as log collectors and monitoring agents that typically must run on every Node. Common use: kube-proxy, CNI agents, log/monitoring agents. One Pod per node (by default). Survives node updates with rolling updates. Data Plane The layer that provides capacity such as CPU, memory, network, and storage so that the containers can run and connect to a network. The layer that provides capacity such as CPU, memory, network, and storage so that the containers can run and connect to a network. Also called \"Node Plane\". Consists of worker nodes running kubelet, kube-proxy, container runtime. Where actual workloads execute. Deployment An API object that manages a replicated application, typically by running Pods with no local state. Each replica is represented by a Pod, and the Pods are distributed among the nodes of a cluster. For workloads that do require local state, consider using a StatefulSet. Most common workload type. Manages ReplicaSets. Supports rolling updates, rollbacks. Declarative updates. Best for stateless apps. Device Plugin Device plugins run on worker Nodes and provide Pods with access to resources, such as local hardware, that require vendor-specific initialization or setup steps. Device plugins advertise resources to the kubelet, so that workload Pods can access hardware features that relate to the Node where that Pod is running. You can deploy a device plugin as a DaemonSet, or install the device plugin software directly on each target Node. See Device Plugins for more information. Examples: GPU (nvidia.com/gpu), FPGA, InfiniBand. Implements device plugin API. Requires privileged containers typically. Disruption Disruptions are events that lead to one or more Pods going out of service. A disruption has consequences for workload resources, such as Deployment, that rely on the affected Pods. If you, as cluster operator, destroy a Pod that belongs to an application, Kubernetes terms that a voluntary disruption. If a Pod goes offline because of a Node failure, or an outage affecting a wider failure zone, Kubernetes terms that an involuntary disruption. See Disruptions for more information. PodDisruptionBudgets help manage voluntary disruptions. Involuntary: node crashes, network partitions. Voluntary: upgrades, scaling. Docker Docker (specifically, Docker Engine) is a software technology providing operating-system-level virtualization also known as containers. Docker uses the resource isolation features of the Linux kernel such as cgroups and kernel namespaces, and a union-capable file system such as OverlayFS and others to allow independent containers to run within a single Linux instance, avoiding the overhead of starting and maintaining virtual machines (VMs). Deprecated as K8s runtime in 1.24+. Still used for image building. Dockershim removed. Use containerd or CRI-O instead. Ephemeral Container A Container type that you can temporarily run inside a Pod. If you want to investigate a Pod that's running with problems, you can add an ephemeral container to that Pod and carry out diagnostics. Ephemeral containers have no resource or scheduling guarantees, and you should not use them to run any part of the workload itself. Added via kubectl debug. Share PID/network namespaces with target container. Useful for debugging minimal/distroless images. Extensions Extensions are software components that extend and deeply integrate with Kubernetes to support new types of hardware. Most cluster administrators will use a hosted or distribution instance of Kubernetes. As a result, most Kubernetes users will need to install extensions and fewer will need to author new ones. Include: CNI plugins, CSI drivers, device plugins, admission controllers, custom schedulers. Extend core functionality. Image Stored instance of a Container that holds a set of software needed to run an application. A way of packaging software that allows it to be stored in a container registry, pulled to a local system, and run as an application. Meta data is included in the image that can indicate what executable to run, who built it, and other information. OCI format. Immutable layers. Stored in registries (Docker Hub, ECR, GCR). Uses content-addressable storage (SHA256 hashes). Init Container One or more initialization containers that must run to completion before any app containers run. Initialization (init) containers are like regular app containers, with one difference: init containers must run to completion before any app containers can start. Init containers run in series: each init container must run to completion before the next init container begins. Common uses: database migration, config setup, waiting for dependencies. Failure restarts entire Pod. Share volumes with main containers. Job A finite or batch task that runs to completion. Creates one or more Pod objects and ensures that a specified number of them successfully terminate. As Pods successfully complete, the Job tracks the successful completions. For one-time tasks. CronJob for scheduled tasks. Supports parallelism, completions, backoff limits. Pods not cleaned up automatically. kube-controller-manager Control Plane component that runs controller processes. Logically, each controller is a separate process, but to reduce complexity, they are all compiled into a single binary and run in a single process. Runs ~20+ built-in controllers. Leader election for HA. Watches API server for changes. Default port: 10257. kube-proxy kube-proxy is a network proxy that runs on each node in your cluster, implementing part of the Kubernetes Service concept. kube-proxy maintains network rules on nodes. These network rules allow network communication to your Pods from network sessions inside or outside of your cluster. kube-proxy uses the operating system packet filtering layer if there is one and it's available. Otherwise, kube-proxy forwards the traffic itself. Runs on every node. Implements Service networking. Modes: iptables, ipvs, kernelspace. Usually deployed as DaemonSet. Kubectl A command line tool for communicating with a Kubernetes API server. You can use kubectl to create, inspect, update, and delete Kubernetes objects. Primary CLI tool. Uses kubeconfig for authentication. Supports plugins. Commands: get, describe, create, apply, delete, logs, exec. Kubelet An agent that runs on each node in the cluster. It makes sure that containers are running in a Pod. The kubelet takes a set of PodSpecs that are provided through various mechanisms and ensures that the containers described in those PodSpecs are running and healthy. The kubelet doesn't manage containers which were not created by Kubernetes. Primary node agent. Communicates with API server. Manages Pod lifecycle. Health checks, resource monitoring. Default port: 10250. Kubernetes API The application that serves Kubernetes functionality through a RESTful interface and stores the state of the cluster. Kubernetes resources and records of intent are all stored as API objects and modified via RESTful calls to the API. The API allows configuration to be managed in a declarative way. Users can interact with the Kubernetes API directly or via tools like kubectl. The core Kubernetes API is flexible and can also be extended to support custom resources. RESTful API. OpenAPI v3 spec. Versioned (v1, v1beta1, v1alpha1). Group/Version/Kind (GVK) structure. Authentication, authorization, admission. Label Tags objects with identifying attributes that are meaningful and relevant to users. Labels are key/value pairs that are attached to objects such as Pods. They are used to organize and to select subsets of objects. Used by selectors for filtering. Max 63 chars per key/value. Common: app, version, environment. Format: prefix/name=value. LimitRange Provides constraints to limit resource consumption per Containers or Pods in a namespace. LimitRange limits the quantity of objects that can be created by type, as well as the amount of compute resources that may be requested/consumed by individual Containers or Pods in a namespace. Per-namespace resource limits. Sets default/min/max CPU/memory. Prevents resource abuse. Complements ResourceQuotas. Logging Logs are the list of events that are logged by cluster or application. Application and systems logs can help you understand what is happening inside your cluster. The logs are particularly useful for debugging problems and monitoring cluster activity. kubectl logs for Pod logs. Cluster-level logging needs external tools (ELK, Fluentd, Loki). Log rotation managed by container runtime. Manifest Specification of a Kubernetes API object in JSON or YAML format. A manifest specifies the desired state of an object that Kubernetes will maintain when you apply the manifest. Each configuration file can contain multiple manifests. YAML preferred over JSON. Contains apiVersion, kind, metadata, spec. Can use --- to separate multiple objects in one file. Master Legacy term, used as synonym for nodes hosting the control plane. The term is still being used by some provisioning tools, such as kubeadm, and managed services, to label nodes with kubernetes.io/role and control placement of control plane pods. Deprecated term. Use \"control plane\" instead. May still see in older docs or tools. Taint: node-role.kubernetes.io/control-plane. Minikube A tool for running Kubernetes locally. Minikube runs a single-node cluster inside a VM on your computer. You can use Minikube to try Kubernetes in a learning environment. Popular for local development. Alternatives: kind, k3s, Docker Desktop. Supports multiple drivers (VirtualBox, Docker, etc.). Mirror Pod A pod object that a kubelet uses to represent a static pod. When the kubelet finds a static pod in its configuration, it automatically tries to create a Pod object on the Kubernetes API server for it. This means that the pod will be visible on the API server, but cannot be controlled from there. (For example, removing a mirror pod will not stop the kubelet daemon from running it). Read-only representation of static Pods. Managed entirely by kubelet. Cannot be deleted via API server. Useful for control plane components. Name A client-provided string that refers to an object in a resource URL, such as /api/v1/pods/some-name. Only one object of a given kind can have a given name at a time. However, if you delete the object, you can make a new object with the same name. Unique within namespace and resource type. DNS-1123 subdomain format. Max 253 chars. Used in URLs and references. Namespace An abstraction used by Kubernetes to support multiple virtual clusters on the same physical cluster. Namespaces are used to organize objects in a cluster and provide a way to divide cluster resources. Names of resources need to be unique within a namespace, but not across namespaces. Default namespaces: default, kube-system, kube-public, kube-node-lease. Used for multi-tenancy, RBAC scope, resource quotas. Node A node is a worker machine in Kubernetes. A worker node may be a VM or physical machine depending on the cluster. It has local daemons or services necessary to run Pods and is managed by the control plane. The daemons on a node include kubelet kube-proxy and a container runtime implementing the CRI such as Docker. In early Kubernetes versions Nodes were called Minions. Nodes can be managed using kubectl commands like <code>kubectl get nodes</code>, <code>kubectl describe node &lt;name&gt;</code>. Node capacity includes CPU, memory, pods, and storage. Nodes have conditions (Ready, OutOfDisk, MemoryPressure, etc.) that indicate their health status. Object An entity in the Kubernetes system. The Kubernetes API uses these entities to represent the state of your cluster. A Kubernetes object is typically a \"record of intent\"\u2014once you create the object, the Kubernetes control plane works constantly to ensure that the item it represents actually exists. By creating an object, you're effectively telling the Kubernetes system what you want that part of your cluster's workload to look like; this is your cluster's desired state. Objects have spec (desired state) and status (actual state) fields. Common objects include Pod, Service, Deployment, ConfigMap, Secret. Objects are defined in YAML/JSON manifests and managed via kubectl or API calls. Pod The smallest and simplest Kubernetes object. A Pod represents a set of running containers on your cluster. A Pod is typically set up to run a single primary container. It can also run optional sidecar containers that add supplementary features like logging. Pods are commonly managed by a Deployment. Pods share networking (IP address and port space) and storage volumes. They're ephemeral - when a Pod dies, it's replaced with a new one with a different IP. Pods can have multiple containers that communicate via localhost. Pod Lifecycle The sequence of states through which a Pod passes during its lifetime. The Pod Lifecycle is defined by the states or phases of a Pod. There are five possible Pod phases: Pending, Running, Succeeded, Failed, and Unknown. A high-level description of the Pod state is summarized in the PodStatus phase field. Pod phases: Pending (scheduled but containers not yet running), Running (at least one container is running), Succeeded (all containers terminated successfully), Failed (containers terminated with failure), Unknown (Pod state cannot be determined). Pod Security Policy Enables fine-grained authorization of Pod creation and updates. A cluster-level resource that controls security sensitive aspects of the Pod specification. The PodSecurityPolicy objects define a set of conditions that a Pod must run with in order to be accepted into the system, as well as defaults for the related fields. Pod Security Policy control is implemented as an optional admission controller. Deprecated in Kubernetes v1.21, removed in v1.25. Replaced by Pod Security Standards (Pod Security admission controller). PSPs controlled privileged containers, host networking, volume types, user/group IDs, and security contexts. QoS Class QoS Class (Quality of Service Class) provides a way for Kubernetes to classify Pods within the cluster into several classes and make decisions about scheduling and eviction. QoS Class of a Pod is set at creation time based on its compute resources requests and limits settings. QoS classes are used to make decisions about Pods scheduling and eviction. Kubernetes can assign one of the following QoS classes to a Pod: Guaranteed, Burstable or BestEffort. Guaranteed: requests = limits for all containers. Burstable: has requests/limits but not equal, or only some containers have them. BestEffort: no requests or limits set. Eviction priority: BestEffort \u2192 Burstable \u2192 Guaranteed. RBAC (Role-Based Access Control) Manages authorization decisions, allowing admins to dynamically configure access policies through the Kubernetes API. RBAC utilizes roles, which contain permission rules, and role bindings, which grant the permissions defined in a role to a set of users. Four main objects: Role (namespace-scoped), ClusterRole (cluster-scoped), RoleBinding (binds Role to subjects in namespace), ClusterRoleBinding (binds ClusterRole to subjects cluster-wide). Subjects can be users, groups, or ServiceAccounts. ReplicaSet A ReplicaSet (aims to) maintain a set of replica Pods running at any given time. Workload objects such as Deployment make use of ReplicaSets to ensure that the configured number of Pods are running in your cluster, based on the spec of that ReplicaSet. ReplicaSets are rarely used directly - Deployments manage ReplicaSets automatically. Uses selector to identify Pods it manages. Supports set-based selectors (in, notin, exists). Creates/deletes Pods to maintain desired replica count. Resource Quotas Provides constraints that limit aggregate resource consumption per Namespace. Limits the quantity of objects that can be created in a namespace by type, as well as the total amount of compute resources that may be consumed by resources in that project. Can limit compute resources (CPU, memory), storage resources (persistent volume claims), object counts (pods, services, secrets, etc.). Enforced by admission controller. Prevents resource starvation and ensures fair sharing. Selector Allows users to filter a list of resources based on labels. Selectors are applied when querying lists of resources to filter them by labels. Two types: equality-based (=, ==, !=) and set-based (in, notin, exists). Used by Services to select Pods, Deployments to select ReplicaSets, etc. Example: <code>environment=production,tier!=frontend</code>. Service An abstract way to expose an application running on a set of Pods as a network service. The set of Pods targeted by a Service is (usually) determined by a selector. If more Pods are added or removed, the set of Pods matching the selector will change. The Service makes sure that network traffic can be directed to the current set of Pods for the workload. Four types: ClusterIP (internal), NodePort (external access via node ports), LoadBalancer (cloud provider load balancer), ExternalName (DNS CNAME). Services provide stable IP and DNS name for dynamic Pod sets. ServiceAccount Provides an identity for processes that run in a Pod. When processes inside Pods access the cluster, they are authenticated by the API server as a particular service account, for example, default. When you create a Pod, if you do not specify a service account, it is automatically assigned the default service account in the same Namespace. ServiceAccounts can be bound to Roles/ClusterRoles via RoleBindings/ClusterRoleBindings. Tokens are automatically mounted in Pods. Can be used for RBAC, pulling images from private registries, and API access authentication. shuffle sharding A technique for assigning requests to queues that provides better isolation than hashing modulo the number of queues. A frequent concern is insulating different flows of requests from each other, so that a high-intensity flow does not crowd out low-intensity flows. A simple way to put requests into queues is to hash some characteristics of the request, modulo the number of queues, to get the index of the queue to use. The hash function uses as input characteristics of the request that align with flows. For example, in the Internet this is often the 5-tuple of source and destination address, protocol, and source and destination port. That simple hash-based scheme has the property that any high-intensity flow will crowd out all the low-intensity flows that hash to the same queue. Providing good insulation for a large number of flows requires a large number of queues, which is problematic. Shuffle sharding is a more nimble technique that can do a better job of insulating the low-intensity flows from the high-intensity flows. The terminology of shuffle sharding uses the metaphor of dealing a hand from a deck of cards; each queue is a metaphorical card. The shuffle sharding technique starts with hashing the flow-identifying characteristics of the request, to produce a hash value with dozens or more of bits. Then the hash value is used as a source of entropy to shuffle the deck and deal a hand of cards (queues). All the dealt queues are examined, and the request is put into one of the examined queues with the shortest length. With a modest hand size, it does not cost much to examine all the dealt cards and a given low-intensity flow has a good chance to dodge the effects of a given high-intensity flow. With a large hand size it is expensive to examine the dealt queues and more difficult for the low-intensity flows to dodge the collective effects of a set of high-intensity flows. Thus, the hand size should be chosen judiciously. Used in Kubernetes API server's Priority and Fairness feature to ensure fair request handling across different users/groups. Helps prevent one client from overwhelming the API server and affecting other clients' requests. Manages the deployment and scaling of a set of Pods, and provides guarantees about the ordering and uniqueness of these Pods. Like a Deployment, a StatefulSet manages Pods that are based on an identical container spec. Unlike a Deployment, a StatefulSet maintains a sticky identity for each of their Pods. These pods are created from the same spec, but are not interchangeable: each has a persistent identifier that it maintains across any rescheduling. If you want to use storage volumes to provide persistence for your workload, you can use a StatefulSet as part of the solution. Although individual Pods in a StatefulSet are susceptible to failure, the persistent Pod identifiers make it easier to match existing volumes to the new Pods that replace any that have failed. Pods have predictable names (name-0, name-1, etc.), ordered deployment/scaling, stable network identity, and persistent storage. Used for databases, distributed systems requiring stable identities. Supports rolling updates and parallel deployment policies. Static Pod A pod managed directly by the kubelet daemon on a specific node, without the API server observing it. Defined by placing YAML files in kubelet's configured static pod directory (usually /etc/kubernetes/manifests). Used for control plane components (kube-apiserver, etcd, etc.). Kubelet creates mirror pods in API server for visibility. Taint A core object consisting of three required properties: key, value, and effect. Taints prevent the scheduling of Pods on nodes or node groups. Taints and tolerations work together to ensure that pods are not scheduled onto inappropriate nodes. One or more taints are applied to a node. A node should only schedule a Pod with the matching tolerations for the configured taints. Three effects: NoSchedule (prevent scheduling), PreferNoSchedule (avoid scheduling if possible), NoExecute (evict running pods). Common use cases: dedicated nodes, nodes with special hardware, nodes under maintenance. Toleration A core object consisting of three required properties: key, value, and effect. Tolerations enable the scheduling of pods on nodes or node groups that have matching taints. Tolerations and taints work together to ensure that pods are not scheduled onto inappropriate nodes. One or more tolerations are applied to a pod. A toleration indicates that the pod is allowed (but not required) to be scheduled on nodes or node groups with matching taints. Tolerations can be exact matches or use operators (Equal, Exists). Can specify tolerationSeconds for NoExecute effect to delay eviction. System adds default tolerations for common node conditions (NotReady, Unreachable, etc.). UID A Kubernetes systems-generated string to uniquely identify objects. Every object created over the whole lifetime of a Kubernetes cluster has a distinct UID. It is intended to distinguish between historical occurrences of similar entities. UIDs are generated by the API server and are immutable. Format is typically a UUID (e.g., 12345678-1234-5678-9012-123456789012). Different from names - multiple objects can have same name over time but each gets unique UID. Volume A directory containing data, accessible to the containers in a Pod. A Kubernetes volume lives as long as the Pod that encloses it. Consequently, a volume outlives any containers that run within the Pod, and data in the volume is preserved across container restarts. See storage for more information. Many volume types: emptyDir (ephemeral), hostPath (node filesystem), persistentVolumeClaim (persistent storage), configMap, secret, downwardAPI, etc. Volumes are mounted into containers at specified paths. Workload A workload is an application running on Kubernetes. Various core objects that represent different types or parts of a workload include the DaemonSet, Deployment, Job, ReplicaSet, and StatefulSet objects. For example, a workload that has a web server and a database might run the database in one StatefulSet and the web server in a Deployment. Workload types: Deployment (stateless apps), StatefulSet (stateful apps), DaemonSet (node agents), Job (run-to-completion tasks), CronJob (scheduled tasks). May span multiple namespaces and consist of multiple Kubernetes objects."},{"location":"sec_gloss/gloss_networking/","title":"Glossary of Networking Terms","text":"<p>This glossary covers computer networking terminology, from IP addressing and routing to transport protocols and topologies. Several terms here underpin OSS functionality, especially in service delivery and infrastructure monitoring.</p> Term Explanation ACL (Access Control List) A set of rules used to control network traffic and restrict access to network resources. Example: Configuring an ACL on a router to block traffic from a specific IP. API Gateway A server that acts as an entry point for client requests to backend services, often handling authentication, routing, and rate limiting. Anycast A network addressing and routing method where the same IP address is assigned to multiple nodes, and traffic is routed to the nearest node. ARP (Address Resolution Protocol) Protocol used to map an IP address to a MAC address in a local network. Example: <code>arp -a</code> shows the ARP cache on many systems. ASN (Autonomous System Number) A unique identifier for a network or group of networks under a single administrative domain. Autoscaling Automatically adjusting the number of compute resources in response to load. Bare Metal Server A physical server dedicated to a single tenant, often used for high-performance or compliance-sensitive workloads. Bandwidth The maximum rate of data transfer across a network path, usually measured in bits per second (bps). BGP (Border Gateway Protocol) The protocol used to exchange routing information between autonomous systems on the internet. Bridge Networking (VMs) A VM networking mode where the VM shares the host\u2019s physical network, appearing as a separate device on the LAN. CIDR (Classless Inter-Domain Routing) Notation for IP addresses with a prefix length (e.g., <code>192.168.1.1/24</code>). Cloud Interconnect A dedicated, high-bandwidth connection between on-premises infrastructure and a cloud provider's network. Cloud Load Balancer A managed service that distributes incoming traffic across multiple virtual machines or containers in the cloud. CNAME (Canonical Name Record) A type of DNS record that aliases one domain name to another. Container Networking The set of technologies and configurations that allow containers to communicate with each other and external networks. Control Plane The part of a network that carries signaling traffic and manages the network, as opposed to the data plane. CSMA/CD (Carrier Sense Multiple Access with Collision Detection) A network protocol used in Ethernet to control access to the network. Data Plane The part of a network responsible for forwarding user data. DHCP (Dynamic Host Configuration Protocol) Protocol for automatically assigning IP addresses to devices. Direct Connect / ExpressRoute Private, dedicated network connections to cloud platforms such as AWS Direct Connect or Azure ExpressRoute. DNS (Domain Name System) System that translates human-readable domain names into IP addresses. Example: <code>example.com</code> \u2192 <code>93.184.216.34</code>. DoS/DDoS (Denial of Service / Distributed Denial of Service) Attacks aimed at making a network resource unavailable. East-West Traffic Network traffic between servers within the same data centre or cloud region. Elastic IP A static, public IPv4 address provided by cloud providers that can be remapped to different instances. Encapsulation The process of wrapping data with protocol information before transmission. Ethernet A widely used LAN technology defined by IEEE 802.3 standards. Fabric Network A network topology designed for high-speed, scalable data centre communication. Firewall A network security device that monitors and filters incoming and outgoing traffic. Floating IP An IP address that can be dynamically moved between devices or VMs for failover or load balancing. FTP (File Transfer Protocol) An application protocol for transferring files between computers over a network. Gateway A network node that connects two different networks, often with translation between protocols. Gigabit Ethernet Ethernet standard with speeds up to 1 Gbps. Hub A basic network device that broadcasts data to all ports. HTTP/HTTPS (HyperText Transfer Protocol / Secure) Protocols for transmitting hypertext over the web, HTTPS being encrypted via TLS. Hypervisor Networking The networking layer within virtualization platforms (e.g., VMware vSphere, KVM) that manages VM-to-VM and VM-to-host connectivity. ICMP (Internet Control Message Protocol) Used by network devices to send error messages and operational information. Example: <code>ping</code> uses ICMP Echo Request/Reply. Ingress Controller A Kubernetes resource that manages external access to services in a cluster. Inter-VLAN Routing Routing between VLANs, usually handled by a Layer 3 switch or router. IP (Internet Protocol) A set of rules for addressing and routing packets of data so they can travel across networks. ISP (Internet Service Provider) A company that provides internet connectivity. Jitter The variation in packet arrival times in a network. Kerberos A network authentication protocol using tickets for secure authentication. Kubernetes Networking The set of rules and services that define how pods and services communicate within a Kubernetes cluster. LAN (Local Area Network) A network covering a small geographic area, like a home or office. Latency The time it takes for a packet to travel from source to destination. Latency-Based Routing Routing decisions made based on the measured network latency between client and server. Load Balancer A device or software that distributes network traffic across multiple servers. Load Balancing Algorithm The method used to distribute network requests, such as round-robin, least connections, or IP hash. MAC Address (Media Access Control Address) A hardware identifier for a network interface card. MPLS (Multiprotocol Label Switching) A routing technique for high-performance telecommunications networks. Multi-Cloud Networking The practice of connecting and managing resources across multiple cloud providers. NAT (Network Address Translation) Translates private IP addresses into a public IP address. Example: Home routers perform NAT. Network Function Virtualization (NFV) A network architecture concept that uses virtualization to manage and deploy network services. Network Overlay A virtual network built on top of another network, often used in SDN and cloud environments. Network Peering Directly connecting two networks to exchange traffic without going through the public internet. Network Security Group (NSG) A set of security rules controlling inbound and outbound traffic to Azure resources. NIC (Network Interface Card) Hardware that connects a device to a network. North-South Traffic Network traffic between a data centre and external networks. OSI Model (Open Systems Interconnection) A conceptual model describing how data moves through a network in 7 layers. Overlay Network (Containers) A network that connects containers running on different hosts, typically implemented with VXLAN or GRE. Overhead Extra data and processing time required by networking protocols. Packet A formatted unit of data carried by a network. Peering Connection (Cloud) A private network link between two virtual networks in the cloud. PoE (Power over Ethernet) Technology that delivers power and data over the same Ethernet cable. Port A logical endpoint for network communications, identified by a number. Private Endpoint A network interface that privately connects a service to a virtual network. QoE (Quality of Experience) A measure of user satisfaction with network services. QoS (Quality of Service) Techniques to manage network resources and prioritize certain types of traffic. Routing The process of selecting network paths for traffic. RTP (Real-Time Transport Protocol) A protocol for delivering audio and video over IP networks. SDN (Software-Defined Networking) An approach to networking that uses software-based controllers to direct traffic on the network. SD-WAN (Software-Defined Wide Area Network) A virtual WAN architecture that uses software to control the connectivity, management, and services between data centres, branches, and cloud. Security Group A virtual firewall that controls inbound and outbound traffic for resources in cloud environments. Segment Routing (SR) A method of source routing where the sender defines the path a packet should take. Service Mesh A dedicated infrastructure layer for controlling service-to-service communication in microservices architectures. Site-to-Site VPN A VPN that connects two or more networks in different physical locations. SMTP (Simple Mail Transfer Protocol) Protocol for sending emails. SNMP (Simple Network Management Protocol) Used to manage and monitor network devices. Spine-Leaf Architecture A two-tier data centre network topology for predictable latency and high bandwidth. SSH (Secure Shell) Protocol for secure remote login and command execution. Subnet A segmented portion of a network with a specific IP range. TCP (Transmission Control Protocol) Reliable, connection-oriented transport layer protocol. Transit Gateway A service that enables connecting multiple VPCs/VNets and on-premises networks via a central hub. TTL (Time To Live) A field in IP packets that limits the packet's lifespan. Tunneling Encapsulating one protocol inside another for secure transport. UDP (User Datagram Protocol) Connectionless, faster but less reliable than TCP. Underlay Network The physical network infrastructure that supports an overlay network. URL (Uniform Resource Locator) An address for accessing resources on the web. VLAN (Virtual LAN) A logical subdivision of a physical network that groups devices together, improving security and traffic management. VM (Virtual Machine) A software emulation of a physical computer that runs an operating system and applications independently. VNet (Virtual Network) A logically isolated network in cloud environments like Azure, used to securely connect resources. VPN (Virtual Private Network) A secure tunnel over the internet that encrypts traffic between endpoints, often used for remote access. VRRP (Virtual Router Redundancy Protocol) A protocol that increases availability by assigning a virtual IP to a group of routers. VXLAN (Virtual Extensible LAN) A network virtualization technology that enables scalable segmentation across data centres using overlay networks. WAN (Wide Area Network) A network that spans a large geographic area, connecting multiple LANs. WebSocket A protocol providing full-duplex communication channels over a single TCP connection, often used for real-time apps. Wi-Fi A wireless networking technology that allows devices to connect to a LAN using radio waves. WireGuard A modern, lightweight VPN protocol known for simplicity and high performance. Zero Trust A security model that assumes no implicit trust and requires continuous verification of identity and access. ZTP (Zero Touch Provisioning) A method for automatically configuring devices when they are first connected to the network."},{"location":"sec_gloss/gloss_oss/","title":"Glossary of OSS Terms","text":"<p>OSS (Operational Support Systems) is one of the two essential frameworks in telecommunications. OSS focuses on managing network operations. The other framework, BSS (Business Support Systems), handles customer-related functions, such as billing and order management. These two systems work together to enhance service delivery and efficiency.</p> <p>This glossary defines key concepts used in OSS, including service provisioning, fault management, and workflow orchestration. While OSS operates at a higher abstraction layer, many terms intersect with core networking principles.</p> Term/Acronym Full Description A links Access links in SS7 networks, connecting signaling endpoints (e.g., switches) to STPs (Signal Transfer Points). AAA Authentication, Authorization, and Accounting. A framework for controlling access to network resources, enforcing policies, and auditing usage. AAL ATM Adaptation Layer. Protocol layer that segments data into fixed-size ATM cells for transmission. ABR Available Bit Rate. A QoS class in ATM networks for non-time-sensitive traffic that dynamically adjusts bandwidth. ACD Automatic Call Distribution. System that routes incoming calls to available agents or queues (e.g., in call centrs). ACE ATM Circuit Emulation. Technique to mimic traditional circuit-switched networks over ATM. ACELP Algebraic Code Excited Linear Prediction. A voice compression algorithm used in mobile networks. ACM Address Complete Message. SS7 signal indicating the called party's address is fully received. ACR Attenuation to Crosstalk Ratio. Measures signal quality in copper cables (higher = better). ACS Access Control and Security. Systems that restrict unauthorized access to network resources. Active Equipment Electronic devices that generate, transmit, or receive signals in a telecom network (e.g., routers, switches). ADM Add-Drop Multiplexer. SDH/SONET device that adds or removes channels from a high-speed signal. ADPCM Adaptive Differential Pulse Code Modulation. Voice compression technique (e.g., for VoIP). ADSL Asymmetric Digital Subscriber Line. Broadband technology with faster download than upload speeds. AGS Advanced Gaming Service. Platform for delivering cloud-based or networked gaming. AIS Alarm Indication Signal. A fault signal sent downstream when a network failure is detected. ANM Answer Message. SS7 signal indicating the called party has answered. APS Automatic Protection Switching. Redundant system that switches to backup paths during failures. ARDIS Advanced Radio Data Information Service. Early wireless data network for mobile devices. ARPU Average Revenue Per User. Key metric for telecom profitability (revenue divided by subscribers). ASIC Application-Specific Integrated Circuit. Custom hardware chip for specialized tasks (e.g., signal processing). ASN.1 Abstract Syntax Notation One. Standard for defining data structures in telecommunications protocols. ATC Adaptive Transform Coding. Voice compression method used in audio codecs. ATIS Alliance for Telecommunications Industry Solutions. U.S. standards body for telecom technologies. ATM Asynchronous Transfer Mode. High-speed networking standard using fixed-size cells (53 bytes). AU Administrative Unit. SDH/SONET structure for transporting lower-rate signals. AUC Authentication Centre. Database in GSM networks that verifies subscriber identities. AUG Administrative Unit Group. SDH/SONET container for multiplexing AUs. B links Bridge links in SS7 networks, connecting STPs (Signal Transfer Points) within the same region. Bandwidth The capacity of a communication channel, measured in bits per second (bps). BAS Building Automation System. Networked control systems for HVAC, lighting, etc. BDLA Bidirectional Line Amplifier. Boosts optical signals in both directions in fiber networks. BDSL Broadband Digital Subscriber Line. DSL variant supporting symmetric high-speed data. BER Bit Error Rate. Ratio of erroneous bits to total transmitted bits (measure of signal quality). BIB Backward Indicator Bit. SS7 flag indicating a retransmission request due to errors. Bits Binary digits (0s and 1s). The smallest unit of data in digital communications. BLSR Bidirectional Line Switched Ring. SDH/SONET ring architecture with redundant paths. bps Bits per second. Unit for measuring data transmission speed. BR Bidirectional Ring. Network topology with two counter-rotating paths for redundancy. BRA Basic Rate Access. ISDN service offering 2 B-channels (64 kbps each) + 1 D-channel (16 kbps). Broadband Services High-capacity services (e.g., video, data) delivered over shared infrastructure. BSC Base Station Controller. Manages multiple BTSs (Base Transceiver Stations) in GSM networks. BSN Backward Sequence Number. SS7 field used for error detection and retransmission. BTS Base Transceiver Station. GSM tower hardware that communicates with mobile devices. CAC Carrier Access Code. Prefix for selecting long-distance carriers (e.g., \"10-10-321\"). CAN Customer Access Network. The \"last mile\" connecting subscribers to the telecom provider. Carriers Telecommunications service providers (e.g., AT&amp;T, Verizon). CAT Committee on Applications and Technology. U.S. advisory group for telecom standards. CAT-5 Category 5 twisted-pair cable. Supports 100 Mbps Ethernet (up to 100 MHz bandwidth). CATV Cable Television. Coaxial/fiber network for delivering TV and broadband services. CB Citizen Band. Public radio frequency band for short-distance communication (e.g., 27 MHz). CB Call Barring. Feature to block specific types of calls (e.g., international). CBR Constant Bit Rate. QoS class in ATM for fixed-bandwidth traffic (e.g., uncompressed voice). CBT Computer-Based Training. Interactive software for employee education. CC Call Conferencing. Feature to connect multiple parties in a single call. CC7 Common Channel Signaling #7. Protocol stack for out-of-band signaling in telecom networks. CCITT Consultative Committee for International Telegraphy and Telephony. Original name for ITU-T. CCR Call Charging Record. Log of call details for billing purposes. CCS7 Common Channel Signaling #7. Alternate name for SS7. CCTV Closed-Circuit Television. Private video surveillance system. CD Chromatic Dispersion. Fiber-optic signal distortion caused by varying light wavelengths. CD Compact Disc. Optical storage medium for digital data (e.g., CD-ROM, CD-R). CD Call Diversion. Feature to redirect incoming calls to another number. CDE Common Desktop Environment. Unix/Linux graphical user interface (GUI) standard. CDMA Code Division Multiple Access. Wireless technology that encodes users with unique codes. CDPD Cellular Digital Packet Data. Early wireless data standard for analog cellular networks. CELP Code Excited Linear Prediction. Voice compression algorithm used in VoIP and mobile networks. CF Call Forwarding. Feature to redirect calls to another number (e.g., when busy). CH/CW Call Hold / Call Waiting. Features to manage multiple calls on a single line. CHAP Challenge Handshake Authentication Protocol. Secure alternative to PAP for PPP connections. CI Configuration Item. ITIL term for any component under configuration management (e.g., servers). CIC Committee on Information and Communications. Standards body for IT/telecom policies. CIF Cell in Frames. Protocol for transporting ATM cells over Ethernet/Token Ring LANs. CLI Calling Line Identification. Displays the caller's phone number (Caller ID). CLIP Calling Line Identification Presentation. Technical term for Caller ID display. CLIR Calling Line Identification Restriction. Feature to block Caller ID transmission. CLNP Connectionless Network Protocol. OSI Layer 3 protocol similar to IP. CM Configuration Management. ITIL process for tracking system configurations. CMS Call Management Services. Features like call waiting, voicemail, etc. CMTS Cellular Mobile Telephone Service. Legacy term for mobile networks (e.g., AMPS). CNM Customer Network Management. Tools for subscribers to monitor their leased networks. COC Council on Competitiveness. U.S. group advocating for telecom/tech innovation. COMPLEC Competitive Local Exchange Carrier. Alternative phone service provider to incumbents. Conductor Metallic wire (e.g., copper) for transmitting electrical signals. CONS Connection-Oriented Network Service. OSI protocol for reliable data delivery. CORBA Common Object Request Broker Architecture. Middleware standard for distributed systems. CP Connection Point. Logical endpoint in a network (e.g., for virtual circuits). CPE Customer Premises Equipment. Devices at the subscriber's location (e.g., modems, routers). CPLD Complex Programmable Logic Device. Reconfigurable hardware for custom digital circuits. CPU Central Processing Unit. The \"brain\" of a computer or network device. CRM Customer Relationship Management. Systems for managing subscriber interactions. CRT Classroom Training. Traditional instructor-led technical education. CS Caesium Clock. High-precision atomic clock used for network synchronization. CS-ACELP Conjugate Structure Algebraic CELP. Voice codec (e.g., ITU-T G.729). CSMA/CD Carrier Sense Multiple Access with Collision Detection. Ethernet's media access control method. CSN Control System Network. Network for managing industrial control systems (e.g., SCADA). CSPP Computer Systems Policy Project. Advocacy group for IT/telecom policy reform. CSTA Computer Supported Telecommunications Applications. ECMA standard for CTI (Computer Telephony Integration). CSTB Computer Science and Telecommunications Board. U.S. advisory body for tech policy. CT Call Tracing. Feature to log call routing paths for debugging. CTIA Cellular Telecommunications Industry Association. U.S. trade group for wireless providers. CTP Connection Termination Point. Logical endpoint for a network connection. D links Diagonal links in SS7 networks, connecting STPs across different hierarchical levels. DAS Dual Attachment Station. FDDI node with redundant fiber connections for fault tolerance. DB Database. Structured repository for storing and querying network data. DBS Direct Broadcast Satellite. TV/radio service delivered via geostationary satellites. DCF Dispersion Compensating Fiber. Optical fiber designed to counteract signal distortion. DCG Dispersion Compensating Grating. Device to fix chromatic dispersion in fiber links. DCME Digital Circuit Multiplication Equipment. Hardware for voice compression in TDM networks. DCN Data Control Network. Dedicated network for management traffic (e.g., SNMP). DCS Digital Cross-connect System. Device for routing TDM circuits (e.g., E1/T1 lines). DCS Data Communication Server. Component in XMATE (Exchange Management Terminal) systems. DDF Digital Distribution Frame. Patch panel for interconnecting telecom cables. DDS Digital Data Service. Leased line service for dedicated data connections. DECT Digital Enhanced Cordless Telecommunications. Standard for cordless phones (1.9 GHz band). DES Data Encryption Standard. Legacy symmetric-key encryption algorithm (56-bit key). DET Digital Entertainment Terminal. Set-top box for video-on-demand services. DHCP Dynamic Host Configuration Protocol. Assigns IP addresses to network devices automatically. DIU Digital Interface Unit. Hardware for terminating TDM circuits (e.g., E1/T1). DLCI Data Link Connection Identifier. Address for Frame Relay virtual circuits. DMA Direct Memory Access. Hardware feature for fast data transfers without CPU overhead. DNS Domain Name System. Translates human-readable domain names (e.g., google.com) to IP addresses. DOCSIS Data Over Cable Service Interface Specification. Standard for cable modem networks. DOD Department of Defense. U.S. military agency influencing telecom standards (e.g., TCP/IP). DOE Department of Energy. U.S. agency involved in telecom infrastructure research. DOS Disk Operating System. Early OS for PCs (e.g., MS-DOS). Also: Denial of Service (attack). DoT Department of Telecommunications. Government body regulating telecom services. Downstream Data flow from the network to the subscriber (e.g., download speeds). DPC Destination Point Code. SS7 address identifying the target node in a signaling network. DPNSS Digital Private Network Signaling System. Protocol for PBX interconnections. DRP Disaster Recovery Plan. Procedures to restore network services after outages. DS Digital Section. Segment of a digital transmission link (e.g., between repeaters). DS1 Digital Signal 1. T-carrier standard (1.544 Mbps, 24 voice channels). DS3 Digital Signal 3. T-carrier standard (44.736 Mbps, 672 voice channels). DSF Dispersion-Shifted Fiber. Optical fiber optimized for single-wavelength long-haul transmission. DSL Digital Subscriber Line. Broadband over copper phone lines (e.g., ADSL, VDSL). DSLAM DSL Access Multiplexer. Aggregates subscriber DSL lines into a high-speed backbone. DSS Decision Support System. Software for analyzing network performance data. DVB Digital Video Broadcasting. Standard for digital TV transmission (satellite/cable/terrestrial). DWDM Dense Wavelength Division Multiplexing. Fiber-optic tech packing multiple wavelengths per fiber. DXC Digital Cross-Connect. Device for routing TDM circuits (synonym for DCS). E link Extended link in SS7 networks, connecting an STP to a remote SSP (Service Switching Point). E1 European digital hierarchy level 1 (2.048 Mbps, 30 voice channels). E3 European digital hierarchy level 3 (34.368 Mbps, 480 voice channels). EA Equal Access. Regulatory requirement for customers to choose long-distance carriers. Easement Legal right to install telecom infrastructure (e.g., cables) on private land. EC Emergency Correction. Patch or fix deployed to resolve critical network failures. EDFA Erbium-Doped Fiber Amplifier. Optical amplifier for boosting signals in fiber networks. EDI Electronic Data Interchange. Standard for business document exchange (e.g., orders, invoices). EIA Electronic Industries Alliance. U.S. standards body for electrical/telecom interfaces. EMDF Enhanced Main Distribution Frame. Modern patch panel for LAN cabling. EMS Element Management System. Software for monitoring/configuring individual network devices. EPP Emergency Power Plant. Backup generators for telecom facilities during outages. ET End Terminal. DWDM device terminating a wavelength channel. Ethernet LAN standard for wired networks (IEEE 802.3). Dominant protocol for local data traffic. F link Fully Associated Link in SS7 networks, directly connecting two SSPs without STPs. FAD Full Add-Drop. DWDM node capable of adding/removing all wavelength channels. FCAPS Fault, Configuration, Accounting, Performance, Security. ITU-T's network management model. FCC Federal Communications Commission. U.S. regulator for telecom and broadcasting. FDDI Fiber Distributed Data Interface. Legacy LAN standard for high-speed fiber networks (100 Mbps). FDP Fiber Distribution Point. Junction box for splitting fiber cables to multiple subscribers. FE Fast Ethernet. 100 Mbps Ethernet (IEEE 802.3u). FEC Forward Error Correction. Technique to detect/correct transmission errors without retransmission. FEP Front-End Processor. Dedicated computer for handling communications (e.g., in mainframes). FERF Far End Receive Failure. Alarm indicating a remote node cannot detect incoming signals. FIB Forward Indicator Bit. SS7 flag acknowledging error-free message receipt. FISU Fill-In Signal Unit. SS7 \"keepalive\" message sent when no traffic exists. FM Facilities Management. Outsourced maintenance of telecom infrastructure. FMCG Fast-Moving Consumer Goods. Retail term sometimes used in telecom for prepaid services. FMO Future Mode of Operation. Telstra's internal term for strategic network evolution plans. FMS File Management Subsystem. AXE telephone exchange component for software updates. FMS Fiber Monitoring System. Tools for detecting fiber cuts or degradation. FO Fiber Optic. Glass/plastic cables transmitting data as light pulses. FOA Fixed Optical Attenuator. Device to reduce signal power in fiber links. FPGA Field-Programmable Gate Array. Reconfigurable hardware for prototyping or specialized tasks. FPU File Process Utility. AXE exchange software for managing system files. FR Frame Relay. Packet-switched WAN technology for connecting LANs (mostly legacy). Frame Relay Legacy WAN protocol using variable-sized frames (more efficient than ATM for data). FSAN Full Service Access Network. Consortium promoting fiber-to-the-home (FTTH) standards. FSN Forward Sequence Number. SS7 field ensuring messages are processed in order. FSP Fixed Service Provider. Company offering landline/wireline telecom services. FTAM File Transfer, Access, and Management. OSI protocol for remote file operations. FTP File Transfer Protocol. Standard for uploading/downloading files over TCP/IP. FTTC Fiber to the Curb. Hybrid fiber-copper network with fiber running to neighborhood nodes. FTTH Fiber to the Home. End-to-end fiber optic connections to subscriber premises. FWM Four-Wave Mixing. Fiber nonlinearity causing interference between wavelengths. Gbps Gigabits per second. Data rate unit (1,000 Mbps). GDMO Guidelines for Definition of Managed Objects. ITU-T framework for network management data. GDP Gross Domestic Product. Economic metric sometimes used in telecom market analysis. Gigabit Ethernet 1 Gbps Ethernet (IEEE 802.3z/ab). Common for backbone and server connections. GII Global Information Infrastructure. ITU vision for worldwide broadband connectivity. GILS Government Information Locator Service. U.S. standard for cataloging public datasets. GPRS General Packet Radio Service. 2.5G mobile data technology (precursor to 3G). GPS Global Positioning System. Satellite-based timing source for network synchronization. GSM Global System for Mobile Communications. 2G digital cellular standard (900/1800 MHz). GSSI Government Services Information Infrastructure. Framework for digital government services. GST Goods and Services Tax. Indirect tax applied to telecom services in some countries. GUI Graphical User Interface. Visual system for interacting with network management tools. HCT Home Communications Terminal. Customer device for broadband/TV services. HDSL High-Bit-Rate Digital Subscriber Line. Symmetric DSL (1.5 Mbps over 2-3 copper pairs). HDTV High-Definition Television. Video standard with 720p/1080i resolution or higher. HFC Hybrid Fiber-Coaxial. Cable TV network combining fiber backbone with coaxial \"last mile.\" HLR Home Location Register. Central GSM database storing subscriber profiles and locations. HPA Higher-Order Path Adaptation. SDH function for mapping signals into virtual containers. HPC Higher-Order Path Connection. SDH cross-connect for VC-3/VC-4 level circuits. HPCCI High-Performance Computing and Communications Initiative. 1990s U.S. program for advanced networking. HPT Higher-Order Path Termination. SDH function for processing VC-3/VC-4 payloads. HT Hub Terminal. Central node in LMDS (wireless broadband) networks. HTML Hypertext Markup Language. Standard for creating web pages. HU Hub Unit. LMDS base station equipment. IA Indirect Adaptor. AXE exchange component for interfacing with external systems. IAM Initial Address Message. SS7 signal initiating a call setup (contains dialed number). IBS Integrated Business System. Enterprise software for telecom operators (e.g., billing, CRM). IC Integrated Circuit. Microchip containing electronic components (e.g., CPUs, modems). IDC Internet Data Centre. Facility housing servers and network infrastructure. IDU Indoor Unit. Customer-side hardware in LMDS/wireless systems. IEEE Institute of Electrical and Electronics Engineers. Global standards body (e.g., Ethernet, Wi-Fi). IETF Internet Engineering Task Force. Develops TCP/IP and related standards (e.g., RFCs). IFL Interfacility Link. Connects LMDS base stations to core networks. IHS Information Handling Server. XMATE component for data processing. IISP Information Infrastructure Standards Panel. Former U.S. group for cross-sector tech standards. IITF Information Infrastructure Task Force. 1990s U.S. initiative for national broadband policies. ILD International Long Distance. Cross-border voice/data services. IMA Interactive Multimedia Association. Defunct group for CD-ROM/early web standards. IMBE Improved Multi-Band Excitation. Voice codec used in APCO P25 digital radios. IN Intelligent Network. Framework for value-added telecom services (e.g., toll-free numbers). Integration of Voice, Video, and Data Converged networks carrying all traffic types over IP (e.g., VoIP, streaming). IO Input/Output. Hardware interfaces for data transfer (e.g., serial ports). IP Internet Protocol. Core networking protocol for addressing/routing data packets (IPv4/IPv6). IPC Inter-Process Communication. Software methods for exchanging data between programs. IS Information Systems. Organizational department managing IT/telecom infrastructure. ISD International Subscriber Dialing. Direct-dialing format for cross-border calls (e.g., +44). ISDN Integrated Services Digital Network. Digital telephony standard (64 kbps channels). ISL Inter-Switch Link. Cisco protocol for trunking VLANs across switches. ISP Inside Plant. Telecom equipment housed in controlled environments (e.g., central offices). ISP Internet Service Provider. Company offering internet access (e.g., Comcast, AT&amp;T). ISUP ISDN User Part. SS7 protocol for setting up/managing voice calls. IT Information Technology. Broad term for computing/telecom systems and support. ITIL Information Technology Infrastructure Library. Framework for IT service management (ITSM). ITS Intelligent Transportation Systems. Telecom applications for traffic management (e.g., tolls). ITSM IT Service Management. Processes for aligning IT services with business needs (e.g., ITIL). ITU International Telecommunication Union. UN agency for global telecom standards. ITU-TSS ITU Telecommunication Standardization Sector. Technical standards body (formerly CCITT). IVR Interactive Voice Response. Automated phone menus (e.g., \"Press 1 for support\"). IXC Interexchange Carrier. Long-distance telecom provider (e.g., Sprint LD). JDBC Java Database Connectivity. API for Java applications to query databases. JTAPI Java Telephony API. Library for CTI (Computer Telephony Integration) applications. kbps Kilobits per second. Data rate unit (1,000 bps). Kiosk Public terminal for self-service transactions (e.g., bill payments). LAN Local Area Network. Private network covering a small area (e.g., office, campus). LAN Interconnect Services WAN links connecting geographically separated LANs (e.g., MPLS VPNs). LAPB Link Access Procedure, Balanced. Data link protocol for X.25 networks. LATA Local Access and Transport Area. U.S. regulatory region for local phone services. LC Logical Channel. Virtual path in packet-switched networks (e.g., X.25). LDAP Lightweight Directory Access Protocol. Standard for querying user directories (e.g., Active Directory). LDCA Long Distance Charge Area. Billing zone for toll calls. LD-CELP Low-Delay Code Excited Linear Prediction. ITU-T G.728 voice codec (16 kbps). LDS Leased Data Service. Dedicated point-to-point data link (legacy). LEC Local Exchange Carrier. Provider of local phone services (e.g., Verizon). LEO Low Earth Orbit. Satellite constellation for mobile/global internet (e.g., Starlink). LES/BUS LAN Emulation Server / Broadcast and Unknown Server. ATM components for LAN emulation. LL Logical Link. Virtual connection in telecom protocols (e.g., SS7). LLC Logical Link Control. OSI Layer 2 protocol for error checking (IEEE 802.2). LMB Large Megabit Bearer. Telstra\u2019s legacy high-speed data service. LMDS Local Multipoint Distribution Service. Fixed wireless broadband (28-31 GHz band). LOF Loss of Frame. Sync failure in TDM systems (e.g., E1, T1). LOP Loss of Pointer. SDH/SONET error when payload alignment fails. LOS Loss of Signal. Complete interruption in optical/electrical transmission. LPA Lower-Order Path Adaptation. SDH function for mapping E1/T1 into VC-12/VC-11. LPC Lower-Order Path Connection. SDH cross-connect for VC-12/VC-11 circuits. LPT Lower-Order Path Termination. SDH function for processing VC-12/VC-11 payloads. LSSU Link Status Signal Unit. SS7 message reporting link conditions (e.g., out of service). LTE Line Terminating Equipment. SDH/SONET device at a network endpoint. LTG Line Trunk Group. AXE exchange hardware for trunk interfaces. LTU Line Trunk Unit. Legacy telco hardware for analog/digital line interfaces. LVP Logical Virtual Path. ATM term for a bundle of virtual circuits. M2M Machine-to-Machine. Automated data exchange between devices (e.g., IoT). MAC Media Access Control. Unique hardware address for network devices (OSI Layer 2). MAN Metropolitan Area Network. Network covering a city or region (e.g., municipal Wi-Fi). MANO Management and Orchestration. NFV framework for automating virtual network functions. MBE Multi-Band Excitation. Voice compression algorithm (e.g., for secure comms). Mbps Megabits per second. Data rate unit (1,000 kbps). MCN Media Conversion Node. Device converting between fiber/copper/radio media. MCU Metered Call Unit. Billing increment for payphone/call shop services. MD Mediation Device. Converts between network management protocols (e.g., SNMP to TL1). MDF Main Distribution Frame. Central patch panel for copper/fiber terminations. MDN Mobile Directory Number. A subscriber\u2019s phone number in mobile networks. MEA Media Extension Adaptor. Extender for telecom hardware cards/chassis. MF Multi-Frequency. Tone-based signaling (e.g., DTMF for dialing). MIB Management Information Base. Database of SNMP-manageable device parameters. MIS Management Information Systems. Corporate IT/telecom reporting tools. MMDS Multichannel Multipoint Distribution Service. Fixed wireless broadband (2.5 GHz band). MML Man-Machine Language. Text-based interface for telecom equipment configuration. MMOF Multi-Mode Optical Fiber. Fiber supporting multiple light paths (shorter reach than SMF). MNIB Management Network Information Base. SNMP MIB for network management systems. MOA Managed Object Agent. Software mediating between network devices and management systems. MOR Multi-Wavelength Optical Repeater. DWDM device amplifying multiple lambdas simultaneously. MOS Mean Opinion Score. Subjective voice quality rating (1-5 scale). MP-MLQ Multipulse Maximum Likelihood Quantization. ITU-T G.723.1 voice codec (6.3 kbps). MPEG Moving Picture Experts Group. Standards for video/audio compression (e.g., MP3, MP4). MPEG-1 Original MPEG standard (e.g., VCD-quality video at 1.5 Mbps). MPEG-2 Enhanced standard for DVD/DTV (e.g., 4-15 Mbps video). MPLS Multiprotocol Label Switching. WAN technology for traffic engineering and VPNs. MS Mobile Station. Mobile phone or cellular device. MS Multiplex Section. SDH/SONET segment between multiplexers. MSC Mobile Switching Centre. Core switch in GSM/UMTS networks. MSFC Multilayer Switch Feature Card. Cisco hardware for routing/switching in Catalyst switches. MSO Multiple System Operator. Cable TV provider serving multiple regions. MSOH Multiplex Section Overhead. SDH/SONET bytes for section-level management. MSP Multiplex Section Protection. SDH/SONET redundancy mechanism (e.g., 1+1 switching). MSS Multiple Subscription Services. Bundled telecom offerings (e.g., voice + data). MS-SPRING Multiplex Section Shared Protection Ring. SDH/SONET ring with shared backup capacity. MST Multiplex Section Termination. SDH/SONET function for section-layer processing. MSU Message Signal Unit. SS7 packet carrying call control or database queries. MTP Message Transfer Part. SS7 protocol for reliable signaling message delivery. Multimedia Services Integrated voice, video, and data applications (e.g., Zoom, Skype). NAP Network Access Point. Historic internet exchange points (e.g., for ISP peering). NASA National Aeronautics and Space Administration. U.S. agency using advanced telecom for space missions. NAT Network Address Translation. Maps private IPs to public IPs (e.g., for IPv4 conservation). NDIS Network Driver Interface Specification. Microsoft API for Windows network drivers. NDSF Non-Dispersion-Shifted Fiber. Standard single-mode fiber (1310 nm optimum). NE Network Element. Individual device in a telecom network (e.g., router, switch). NEMS Network Element Management System. Vendor-specific software for managing NEs. NEXT Near-End Crosstalk. Interference between adjacent copper pairs (e.g., in UTP). NFS Network File System. Protocol for remote file sharing (common in Unix). NFV Network Functions Virtualization. Running telecom functions as software on commodity servers. NFVI NFV Infrastructure. Hardware/software platform for hosting VNFs (e.g., servers, hypervisors). NFVO NFV Orchestrator. Software automating the lifecycle of VNFs (e.g., scaling, healing). NIC Network Interface Card. Hardware connecting devices to a network (e.g., Ethernet card). NII National Information Infrastructure. Government vision for nationwide broadband. NIM Network Interface Module. Hot-swappable telecom line card (e.g., for E1/T1). NIST National Institute of Standards and Technology. U.S. body for tech standards (e.g., cybersecurity). NLD National Long Distance. Domestic toll calls. NLDO National Long Distance Operator. Licensed provider of intercity/international calls. NLDSC National Long Distance Service Code. Prefix for dialing toll services (e.g., \"0\"). NLSR Natural Language Speech Recognition. Voice interface for automated systems (e.g., IVR). NMS Network Management System. Centralized software for monitoring/controlling networks. NNI Network-to-Network Interface. Standardized interconnect between carrier networks. NOC Network Operations Centre. 24/7 facility for monitoring telecom infrastructure. nrt-VBR Non-Real-Time Variable Bit Rate. ATM QoS class for bursty, delay-tolerant traffic (e.g., email). NRZ Non-Return to Zero. Simple binary encoding scheme (1=high voltage, 0=low). NSF National Science Foundation. U.S. agency funding internet R&amp;D (e.g., NSFNET). NSN National Significant Number. Country-specific numbering plan (e.g., \"0\" for operator). NTIA National Telecommunications and Information Administration. U.S. agency advising on spectrum policy. NTP National Telecom Policy. Government framework for telecom sector regulation. NTSC National Television System Committee. Analog TV standard (North America/Japan). NVoD Near Video on Demand. Broadcast-like streaming with scheduled start times (e.g., hotel movies). NZDSF Non-Zero Dispersion-Shifted Fiber. Optimized for DWDM (balances dispersion at 1550 nm). OA Optical Amplifier. Boosts optical signals without O-E-O conversion (e.g., EDFA). OADM Optical Add-Drop Multiplexer. DWDM device inserting/removing specific wavelengths. OAM Operations, Administration, and Maintenance. Tools for network fault/performance management. OC-12 Optical Carrier 12. SONET rate (622 Mbps). OC-192 Optical Carrier 192. SONET rate (10 Gbps). OC-3 Optical Carrier 3. SONET rate (155 Mbps). OC-48 Optical Carrier 48. SONET rate (2.5 Gbps). OCH Optical Channel. End-to-end wavelength path in DWDM systems. ODN Open Data Network. Architecture for interoperable data services (1990s concept). ODPR Optical Dedicated Protection Ring. DWDM ring with dedicated backup fibers. ODU Outdoor Unit. LMDS/wireless transceiver mounted on rooftops. OJT On-the-Job Training. Hands-on learning for telecom technicians. OLA Optical Line Amplifier. Boosts signals between DWDM terminals (no add/drop). OLTE Optical Line Terminating Equipment. DWDM endpoint (transponder/muxponder). OMAP Operations, Maintenance, and Administration Part. SS7 protocol for network management. OMC Operations and Maintenance Centre. Centralized hub for network surveillance. OMS Optical Multiplex Section. DWDM segment between optical amplifiers. OMSP Optical Multiplex Section Protection. DWDM redundancy mechanism (e.g., fiber switching). ONU Optical Network Unit. FTTH device at customer premises (terminates fiber). OPC Originating Point Code. SS7 address identifying the source node in signaling. OPS Optical Protection Switching. Automatic failover to backup fiber paths. OSC Optical Supervisory Channel. Dedicated wavelength for DWDM management traffic. OSI Open Systems Interconnection. 7-layer reference model for network protocols (mostly theoretical). OSP Outside Plant. Telecom infrastructure in uncontrolled environments (e.g., poles, trenches). OSS Operational Support System. Software for network provisioning, fault management, etc. OTA Over-the-Air. Wireless provisioning/updates (e.g., for SIM cards or firmware). OTAF Over-the-Air Activation Function. System for remotely activating mobile devices. OTASP Over-the-Air Service Provisioning. Configuring mobile devices via wireless networks. OTDR Optical Time-Domain Reflectometer. Tool for diagnosing fiber breaks/losses. OTR Optical Transport Repeater. Regenerates DWDM signals over long distances. OTT Over-the-Top. Services delivered via the internet (e.g., Netflix, WhatsApp). OXC Optical Cross-Connect. High-capacity switch for DWDM wavelength routing. PABX Private Automatic Branch Exchange. On-premises phone system for businesses. PAL Phase Alternating Line. Analog TV standard (Europe/Asia). PAP Password Authentication Protocol. Simple (insecure) login method for PPP links. PC Personal Computer. General-purpose device for end-users or network management. PCI Peripheral Component Interconnect. Computer bus standard for add-on cards. PCIA Personal Communications Industry Association. U.S. trade group for wireless providers. PCS Personal Communications Service. U.S. term for 1900 MHz digital cellular (e.g., GSM1900). PDA Personal Digital Assistant. Handheld computer for contacts/calendar (pre-smartphone era). PDH Plesiochronous Digital Hierarchy. Legacy TDM standard (E1/T1, lacks synchronization). PDSN Packet Data Serving Node. Routes mobile data traffic in CDMA2000 networks. PFC Policy Feature Card. Cisco hardware for QoS/security policies in routers. PHS Personal Handyphone System. Japanese digital cordless standard (1900 MHz). PLC Programmable Logic Controller. Industrial computer for automation (e.g., in telecom power systems). PMD Polarization Mode Dispersion. Fiber impairment caused by asymmetric light propagation. PNNI Private Network-to-Network Interface. ATM routing protocol for dynamic VC establishment. POH Path Overhead. SDH/SONET bytes for end-to-end performance monitoring. POI Point of Interconnect. Physical junction between carrier networks (e.g., for peering). POP Point of Presence. Carrier\u2019s local facility for customer connections. POTS Plain Old Telephone Service. Basic analog voice service (pre-ISDN). PP Path Protection. SDH/SONET redundancy at the virtual container level. PPP Point-to-Point Protocol. Data link protocol for dial-up/leased lines (e.g., DSL). PPP Purchasing Power Parity. Economic metric for comparing telecom costs across countries. PPV Pay-Per-View. On-demand video/event rental (e.g., boxing matches). PRA Primary Rate Access. ISDN service (30 B-channels + 1 D-channel in E1 regions). PRS Premium Rate Service. Toll numbers for value-added content (e.g., $1.99/min horoscopes). PSTN Public Switched Telephone Network. Global circuit-switched voice network (legacy). PSU Public Sector Undertaking. Government-owned telecom operator (e.g., BSNL in India). PVC Permanent Virtual Circuit. Preconfigured path in ATM/Frame Relay networks. PVP Permanent Virtual Path. ATM term for a bundle of PVCs with shared routing. QAM Quadrature Amplitude Modulation. Method for encoding data on radio/cable (e.g., 256-QAM). QoS Quality of Service. Mechanisms to prioritize traffic (e.g., VoIP over web browsing). R&amp;D Research and Development. Corporate or government-funded telecom innovation. RAM Random Access Memory. Volatile storage for active processes in network devices. RAN Radio Access Network. Cellular infrastructure (towers, base stations) connecting users. RAS Remote Access Server. Concentrates dial-up modem connections (legacy). RAS Remote Access Switch. Router/switch for aggregating remote site links (e.g., VPNs). RBOC Regional Bell Operating Company. U.S. local phone company post-AT&amp;T divestiture (e.g., Verizon). RCL Release Complete Message. SS7 signal confirming call termination. RCS Residential Cabling System. Structured wiring for homes (e.g., Cat 5e for data/TV). RDBMS Relational Database Management System. Software for storing network inventory/billing data. RDN Relative Distinguished Name. LDAP attribute for directory entries (e.g., \"CN=John\"). Reach Maximum distance a signal can travel without degradation (e.g., 100 km for DWDM). REL Release Message. SS7 signal initiating call teardown. RFI Ready for Installation. Milestone indicating network hardware is deployable. RIC Reliance Infocom. Indian telecom operator (now Reliance Communications). ROM Read-Only Memory. Non-volatile storage for firmware in network devices. RPC Remote Procedure Call. Protocol for executing functions on remote servers. RPE Regular Pulse Excitation. Voice coding algorithm (e.g., in GSM codecs). RRP Recommended Retail Price. Carrier\u2019s suggested pricing for devices/services. RS Regenerator Section. SDH/SONET segment between repeaters. RSOH Regenerator Section Overhead. SDH/SONET bytes for section-layer management. RSP Route Set Prohibited. SS7 test message blocking specific signaling paths. RSR Restricted. SS7 test message limiting signaling route usage. RST Regenerator Section Termination. SDH/SONET function for section-layer processing. RSVP Resource Reservation Protocol. Signaling protocol for QoS in IP networks (e.g., bandwidth guarantees). RT Remote Terminal. LMDS subscriber-side hardware (outdoor antenna + modem). RTIF Realizing the Information Future. 1994 U.S. report on national telecom infrastructure. RTU Remote Testing Unit. Device for diagnosing fiber/copper line faults from a central office. RU Rack Unit. Standard height measurement for telecom equipment (1RU = 1.75 inches). RU Remote Unit. LMDS customer-premises transceiver. RX Receiver. Component for receiving optical/electrical/RF signals. SA Section Adaptation. SDH/SONET function for mapping signals into transport frames. SAN Storage Area Network. Dedicated network for high-speed data storage (e.g., fiber channel). SAR Segmentation and Reassembly. ATM process for splitting/reconstructing data into cells. SAX Small Automatic Exchange. Compact telephone switch for rural/remote areas. SBS Stimulated Brillouin Scattering. Fiber nonlinearity causing signal distortion at high power. SCCP Signaling Connection Control Part. SS7 protocol for database queries (e.g., toll-free routing). SCE Service Creation Environment. Tools for designing telecom services (e.g., IVR menus). SCP Service Control Point. SS7 database node (e.g., for 800-number translation). SDCA Short Distance Charging Area. Local call zone (no toll charges). SDDC Software-Defined Data Centre. Virtualized infrastructure managed via software (compute/storage/network). SDH Synchronous Digital Hierarchy. International standard for optical transport (STM-1, STM-16, etc.). SDM Space Division Multiplexing. Fiber technology using multiple cores/parallel paths. SDN Software-Defined Networking. Centralized control of network behavior via programmable interfaces. SDTV Standard Definition Television. Legacy digital TV resolution (e.g., 480p). SECAM Sequential Color with Memory. Analog TV standard (France/Russia). SED Spatially Enabled Database. GIS-integrated system for mapping network assets. SFVN Secure Fast Virtual Networking. Proprietary protocol for encrypted WAN links. SIM Subscriber Identity Module. Smart card storing user credentials in GSM/UMTS devices. SLA Service Level Agreement. Contract defining performance metrics (e.g., uptime, latency). SLS Signaling Link Selection. SS7 field for load balancing across links. SMA Spectrum Management Agency. Government body allocating radio frequencies. SMDS Switched Multimegabit Data Service. Legacy MAN/WAN data service (pre-ATM). SME Small/Medium Enterprise. Business segment targeted by telecom services. SME Subject Matter Expert. Specialist in a specific telecom domain. SMOF Single-Mode Optical Fiber. Fiber optimized for long-haul, single-wavelength transmission. SMP Service Management Point. IN node for service provisioning. SMS Short Message Service. Text messaging in mobile networks (160 chars/message). SMSC Short Message Service Centre. Routes/store-and-forwards SMS messages. SNCP Subnetwork Connection Protection. SDH/SONET redundancy for individual paths. SNMP Simple Network Management Protocol. Standard for monitoring network devices. SNR Signal-to-Noise Ratio. Measure of signal quality (higher = better). SOH Section Overhead. SDH/SONET bytes for section-layer management. SOHO Small Office/Home Office. Market segment for consumer/small biz telecom products. SONET Synchronous Optical Network. U.S. standard for optical transport (OC-3, OC-12, etc.). SPI SDH Physical Interface. Hardware port for SDH/SONET connections. SPM Self-Phase Modulation. Fiber nonlinearity causing spectral broadening. SPVP Soft Permanent Virtual Path. ATM path dynamically provisioned by management systems. SQL Structured Query Language. Standard for database interactions (e.g., billing systems). SRL Structural Return Loss. Measure of impedance mismatches in copper cables. SRS Stimulated Raman Scattering. Fiber nonlinearity amplifying longer wavelengths. SS7 Signaling System #7. Protocol for call control/database queries in PSTN. SSP Service Switching Point. SS7 node triggering IN services (e.g., prepaid calls). SSU Synchronization Supply Unit. Clock source for network timing (e.g., BITS). STB Set-Top Box. Decoder for TV/video services (e.g., cable, IPTV). STD Subscriber Trunk Dialing. Direct long-distance dialing without operator assistance. STM Synchronous Transport Module. SDH hierarchy level (e.g., STM-1 = 155 Mbps). STM-1 SDH base rate (155.52 Mbps). Carries VC-4 or 3xVC-3. STM-16 SDH rate (2.488 Gbps). 16xSTM-1. STM-4 SDH rate (622.08 Mbps). 4xSTM-1. STM-64 SDH rate (10 Gbps). 64xSTM-1. STP Signal Transfer Point. SS7 router for signaling messages. STP Shielded Twisted Pair. Copper cable with EMI shielding (e.g., Cat 6A). STT Set-Top Terminal. Advanced STB with interactive features. STU Set-Top Unit. Customer-premises decoder for cable/satellite services. SU Signal Unit. SS7 message packet (MSU, LSSU, or FISU). T1 Digital Signal 1 (1.544 Mbps, 24 voice channels). T3 Digital Signal 3 (44.736 Mbps, 672 voice channels). TAPI Telephony API. Microsoft standard for CTI applications. Tbps Terabits per second (1,000 Gbps). TCAP Transaction Capabilities Application Part. SS7 protocol for database transactions. TCP Transmission Control Protocol. Reliable, connection-oriented transport (RFC 793). TCP/IP Internet protocol suite (TCP + IP + UDP, etc.). TDM Time Division Multiplexing. Legacy tech for sharing links via fixed timeslots. TDMA Time Division Multiple Access. Channel access method (e.g., GSM, 2G). Telecommunications Traffic Data/voice/video transmitted over networks (measured in Erlangs/minutes/bits). TFA Transfer Allowed. SS7 message permitting signaling route usage. TFP Transfer Prohibited. SS7 message blocking signaling routes. TFR Transfer Restricted. SS7 message limiting signaling route capacity. TGNO Trunk Group Number. Identifier for PSTN trunk bundles. TM4.0 Traffic Management 4.0. ATM Forum\u2019s QoS specification. TMN Telecommunications Management Network. ITU-T framework for OSS integration. ToIP Telephony over IP. Voice services delivered via internet protocols. TPWG Technology Policy Working Group. Industry consortium for telecom standards. TR Trouble Report. Ticket for network faults. TRA Trouble Report Answer. Resolution response for TRs. TS Time Slot. Channel in TDM systems (e.g., TS1 = 64 kbps in E1). TSAPI Telephony Services API. Novell/Lucent CTI standard for PBX integration. TSG Time Slot Group. Logical bundle of TDM channels. TTP Trail Termination Point. SDH/SONET endpoint for performance monitoring. TU Tributary Unit. SDH container for lower-rate signals (e.g., TU-12 = 2.048 Mbps). TUG Tributary Unit Group. SDH structure for multiplexing TUs (e.g., TUG-2 = 3xTU-12). TX Transmitter. Component for sending optical/electrical/RF signals. UBR Unspecified Bit Rate. ATM QoS class for best-effort traffic (e.g., web browsing). UDP User Datagram Protocol. Connectionless transport (RFC 768). Upstream Data flow from subscriber to network (e.g., upload speeds). UR Unidirectional Ring. Network topology with one working path (no redundancy). URL Uniform Resource Locator. Web address (e.g., <code>https://example.com</code>). UTP Unshielded Twisted Pair. Copper cable without EMI shielding (e.g., Cat 5e). V.35/X.21/EIA-530/G.703 Legacy serial interfaces for WAN equipment. V5 PSTN-to-AN interface standard (e.g., V5.2 supports 16 E1s). VAN Value-Added Network. Enhanced services atop carrier infrastructure (e.g., EDI). VAS Value-Added Services. Non-core offerings (e.g., caller tunes, cloud PBX). VBI Vertical Blanking Interval. Analog TV band for ancillary data (e.g., closed captions). VBR Variable Bit Rate. ATM QoS class for bursty traffic (e.g., compressed video). VC Virtual Container. SDH payload structure (e.g., VC-12 = 2.048 Mbps). VC Virtual Circuit. Logical path in packet-switched networks (e.g., ATM, Frame Relay). VC11 Virtual Container 11. SDH structure for T1 (1.544 Mbps) transport. VC12 Virtual Container 12. SDH structure for E1 (2.048 Mbps) transport. VC3 Virtual Container 3. SDH structure for T3 (34 Mbps) or E3 (45 Mbps) transport. VC4 Virtual Container 4. SDH structure for STM-1 (155 Mbps) payloads. VC4-4C Concatenated VC-4s for high-capacity services (e.g., 622 Mbps). VCI Virtual Circuit Identifier. ATM cell header field for routing. VDSL Very-high-bitrate DSL. Fiber-assisted copper broadband (e.g., 100 Mbps downstream). Video Conference Real-time multimedia collaboration over IP/TDM networks. VIM Virtualized Infrastructure Manager. NFV component for compute/storage orchestration. VIP Video Information Provider. Content source for VOD/IPTV services. VLAN Virtual LAN. Logical subnet within a physical network (IEEE 802.1Q). VLR Visitor Location Register. Temporary GSM/UMTS subscriber database. VMS Voice Mail Service. Automated call answering/message storage. VNF Virtual Network Function. Software-based telecom appliance (e.g., vRouter, vFirewall). VNFM VNF Manager. NFV component for lifecycle management of VNFs. VoATM Voice over ATM. Circuit-emulated voice services on ATM networks. VoD Video on Demand. User-controlled streaming (e.g., Netflix, IPTV). VoFR Voice over Frame Relay. Legacy voice transport over Frame Relay. VoIP Voice over IP. Packetized telephony (e.g., SIP, H.323). VP Virtual Path. ATM bundle of VCs with common routing. VPI Virtual Path Identifier. ATM cell header field for VP routing. VPI/VCI ATM address fields (like \"network/port\" in IP). VPN Virtual Private Network. Secure overlay network (e.g., MPLS VPN, IPsec). VPRN Virtual Private Routed Network. Layer 3 VPN service. VSAT Very Small Aperture Terminal. Satellite earth station for data/voice. VSB Vestigial Sideband. Analog modulation for TV signals. VT Virtual Tributary. SONET term for lower-rate containers (e.g., VT1.5 = T1). WAN Wide Area Network. Long-distance network (e.g., MPLS, leased lines). WCS Wireless Control System. Management platform for RF networks. WDM Wavelength Division Multiplexing. Fiber tech for multiple lambdas (CWDM/DWDM). WDV Written Down Value. Accounting method for asset depreciation. Web World Wide Web. Internet application layer (HTTP/HTML). Web TV Early internet-to-TV platforms (pre-smart TV era). WIN Wireless Intelligent Network. Framework for advanced mobile services. WINF Wireless Information Networks Forum. Advocacy group for wireless tech. WIOZ Terminal support application in XMATE systems. WLL Wireless Local Loop. Fixed wireless alternative to copper last-mile. WWW World Wide Web. Synonym for the web (HTTP/HTML ecosystem). WYSIWYG What You See Is What You Get. UI design principle (e.g., web editors). X.25 PLP X.25 Packet Layer Protocol. Legacy WAN protocol (ISO 8208). X.29 ITU-T standard for X.25 DTE-DCE interactions. xDSL Family of DSL technologies (ADSL, VDSL, etc.). XMATE Exchange Management Terminal. Legacy OSS for telephone switches. XPM Cross-Phase Modulation. Fiber nonlinearity causing crosstalk between wavelengths."},{"location":"sec_net-sec/","title":"Networks &amp; Security","text":"<p>This section contains a set of topics on one of my domain curiosities \u2014 contemporary enterprise networks, security, and threat modeling:</p> <ul> <li>Data Centre Network</li> <li>STRIDE Model</li> <li>MITRE ATT&amp;CK</li> <li>Single Sign-on (SAML) Admin Guide Template</li> </ul>"},{"location":"sec_net-sec/network_data_center/","title":"A Hypothetical Data Centre Network","text":"<p>Below is a sample data centre network topology. Hopefully enough representative of the 2025 technology landscape to analyze and learn, especially from a security perspective.</p>"},{"location":"sec_net-sec/network_data_center/#why-it-matters","title":"Why It Matters","text":"<p>Understanding the layout of a data centre network is essential to identifying potential vulnerabilities and planning effective defenses. This architecture serves as the baseline for threat modeling exercises using STRIDE and MITRE ATT&amp;CK frameworks.</p>"},{"location":"sec_net-sec/network_data_center/#network-topology-overview","title":"Network Topology Overview","text":"<p>This diagram outlines a simplified data centre network architecture, segmented into public-facing cloud services, internal developer resources, and observability components. It serves as the foundation for subsequent threat modeling exercises.</p> flowchart TD   accTitle: Data centre network topology showing 5 zones   accDescr: Data centre network topology showing 5 zones: Public Zone with user, browser, and DNS resolver; Network Edge Zone with HTTPS requests flowing through firewall, reverse proxy, app gateway, load balancer, and VPN gateway; Private App Zone containing web app connected to primary database with read replicas, Redis cache, auth service with identity provider, audit logger with SIEM integration; Monitoring zone with metrics exporter and tracing agent feeding Prometheus and Jaeger; CI/CD Pipeline with Git repository flowing through build agent and container registry to deployment job. Traffic flows north-south from public users and east-west between internal services.   %% Public Zone   subgraph Public_Zone[\"Public Zone\"]     A[User]     B[Browser]     C[DNS Resolver]   end    %% Edge Zone   subgraph Edge_Zone[\"Network Edge Zone\"]     D[HTTPS Request]     E[FirewallIngress ACLs]     F[Reverse Proxy - NginxHeader Sanitization]     G[App GatewayTLS Termination]     LB[Load Balancer L7Rate Limiting]     VPN[VPN GatewayPrivileged Access]   end    %% Private Zone   subgraph Private_Zone[\"Private App Zone\"]     WA[Web AppRBAC + Input Validation]     DB[Primary DatabaseEncrypted at Rest]     Cache[Redis CacheTTL + ACLs]     Auth[Auth ServiceOAuth2 + JWT]     Audit[Audit LoggerImmutable Store]     Replicas[Read ReplicasRead-Only]     IdP[Identity ProviderFederated Trust]     SIEM[SIEM IntegrationSecurity Alerts]   end    %% Observability   subgraph Observability[\"Monitoring and Tracing\"]     Metrics[Metrics Exporter]     Traces[Tracing Agent]     Prometheus[PrometheusAccess Controls]     Jaeger[JaegerTrace Retention]   end    %% CI/CD   subgraph CI_CD[\"CI/CD Pipeline\"]     Git[Git RepositoryBranch Protections]     Runner[Build AgentSandboxed]     Registry[Container RegistrySigned Images]     Deploy[Deployment JobRole Separation]   end    %% Traffic Flow   A --&gt;|North-South| B --&gt; C --&gt; D --&gt; E --&gt; F --&gt; G --&gt; LB --&gt; WA   VPN --&gt;|Privileged Tunnel| WA   WA --&gt;|East-West| DB --&gt; Replicas   WA --&gt;|East-West| Cache   WA --&gt;|East-West| Auth --&gt; IdP   WA --&gt;|East-West| Audit --&gt; SIEM   WA --&gt;|Telemetry| Metrics --&gt; Prometheus   WA --&gt;|Telemetry| Traces --&gt; Jaeger    %% CI/CD Integration   Git --&gt; Runner --&gt; Registry --&gt; Deploy --&gt; WA"},{"location":"sec_net-sec/network_data_center/#key-traffic-paths","title":"Key Traffic Paths","text":"<ul> <li>User requests flow through CDN and Web App to backend services</li> <li>CI/CD runner interacts with internal repositories, secrets, and databases</li> <li>Monitoring and logging components collect telemetry across zones</li> </ul>"},{"location":"sec_net-sec/network_data_center/#public-zone","title":"Public Zone","text":"<ul> <li>User interacts via a Browser, initiating requests.</li> <li>DNS Resolver translates domain names to IP addresses.</li> <li>Traffic enters the system via HTTPS Request, marking the boundary of public access.</li> </ul>"},{"location":"sec_net-sec/network_data_center/#network-edge-zone","title":"Network Edge Zone","text":"<ul> <li>Firewall filters incoming traffic based on rules.</li> <li>Reverse Proxy (Nginx) handles SSL termination and routing.</li> <li>App Gateway applies additional routing logic and security policies.</li> <li>Load Balancer (L7) distributes traffic across app instances.</li> <li>VPN Gateway allows secure remote access for internal users or services.</li> </ul>"},{"location":"sec_net-sec/network_data_center/#private-app-zone","title":"Private App Zone","text":"<ul> <li>Web App is the core application layer, serving dynamic content. It connects to:</li> <li>Primary Database and Read Replicas for data storage and scaling.</li> <li>Redis Cache for performance optimization.</li> <li>Auth Service for identity verification, which delegates to an Identity Provider.</li> <li>Audit Logger for compliance and traceability, forwarding logs to a SIEM system.</li> </ul>"},{"location":"sec_net-sec/network_data_center/#observability-monitoring-tracing","title":"Observability (Monitoring &amp; Tracing)","text":"<ul> <li>Metrics Exporter and Tracing Agent collect telemetry.</li> <li>Data flows to Prometheus (metrics) and Jaeger (traces) for monitoring and debugging.</li> </ul>"},{"location":"sec_net-sec/network_data_center/#cicd-pipeline","title":"CI/CD Pipeline","text":"<ul> <li>Git Repo stores source code.</li> <li>Build Agent compiles and tests the code.</li> <li>Container Registry stores built images.</li> <li>Deployment Job pushes updates to the Web App, completing the automation loop.</li> </ul>"},{"location":"sec_net-sec/network_data_center/#access-control-highlights","title":"Access Control Highlights","text":"<ul> <li>Public Zone: No authentication; DNS and browser-level interactions.</li> <li>Edge Zone: First line of defense; includes firewall, proxy, and gateway logic.</li> <li>Private Zone: All services require authentication and authorization.</li> <li>VPN Gateway: Bypasses public ingress for privileged users (e.g. ops or staging testers).</li> </ul>"},{"location":"sec_net-sec/network_data_center/#traffic-types","title":"Traffic Types","text":"<ul> <li>North-South: External user traffic entering the system.</li> <li>East-West: Internal service-to-service communication.</li> <li>Telemetry: Observability traffic for metrics and tracing.</li> </ul>"},{"location":"sec_net-sec/network_data_center/#environment-overlays","title":"Environment Overlays","text":"<p>CI/CD pipeline supports branch-based staging, with promotion to production gated by deployment jobs. This could be extended with environment-specific secrets, feature flags, or blue/green deployments if needed.</p> <p>2025.08.14</p>"},{"location":"sec_net-sec/network_data_center_mitre/","title":"Network Security and Threat Modeling \u2014 MITRE ATT&amp;CK","text":""},{"location":"sec_net-sec/network_data_center_mitre/#why-it-matters","title":"Why It Matters","text":"<p>MITRE ATT&amp;CK is a globally recognized framework that catalogs real-world adversary behaviors. Mapping ATT&amp;CK techniques to our architecture helps anticipate attacker tactics and improve detection, response, and resilience.</p>"},{"location":"sec_net-sec/network_data_center_mitre/#attck-based-threat-modeling","title":"ATT&amp;CK-Based Threat Modeling","text":"<p>This section applies MITRE ATT&amp;CK techniques to our hypothetical data centre network, highlighting how adversaries might target specific components and how defenders can respond.</p>"},{"location":"sec_net-sec/network_data_center_mitre/#attck-annotated-network-diagram","title":"ATT&amp;CK-Annotated Network Diagram","text":"<p>The diagram below maps ATT&amp;CK techniques to each component, helping visualize potential adversary behaviors and attack paths.  </p> graph TB     accTitle: MITRE ATT&amp;CK annotated network diagram     accDescr: MITRE ATT&amp;CK annotated network diagram showing user device connecting to Azure Cloud containing CDN with T1584.006 technique, Web App with T1190 exploit technique, network layer with firewall T1040 network sniffing and VPN gateway T1133 external remote services, CI/CD and monitoring components with T1059 command scripting, T1005 data collection, and T1082 system discovery techniques. Internal systems show dev workstation T1078 valid accounts, Git repo T1505.003 repository implant, secrets vault T1555 credential access, and database T1071.001 application layer protocol techniques.     User[User Device]      subgraph \"Azure Cloud\"         CDN[CDNT1584.006 Compromise CDN Infrastructure]         WA[Web AppT1190 Exploit Public-Facing App]          subgraph \"Network Layer\"             FW[FirewallT1040 Network Sniffing]             VPN[VPN GatewayT1133 External Remote Services]         end          subgraph \"CI/CD &amp; Monitoring\"             CI[CI/CD RunnerT1059 Command and Scripting Interpreter]             Logs[Log AggregatorT1005 Data from Local System]             Monitor[MonitoringT1082 System Information Discovery]         end     end      subgraph \"Internal Systems\"         Dev[Dev WorkstationT1078 Valid Accounts]         Repo[Git RepoT1505.003 Implant Internal Repository]         Secrets[Secrets VaultT1555 Credentials from Password Stores]         DB[DatabaseT1071.001 Application Layer Protocol - Web]     end      %% Main flow connections     User --&gt; CDN     CDN --&gt; WA     WA --&gt; FW     FW --&gt; VPN      %% CI/CD connections     VPN --&gt; CI     CI --&gt; Logs     CI --&gt; Monitor     CI --&gt; Repo     CI --&gt; Secrets     CI --&gt; DB      %% Dev connections     Dev --&gt; VPN     Dev --&gt; Repo"},{"location":"sec_net-sec/network_data_center_mitre/#technique-highlights","title":"Technique Highlights","text":"<p>This table summarizes key ATT&amp;CK techniques associated with major components in the network, along with brief descriptions of how each technique might be used.</p> Component ATT&amp;CK Technique Description Web App T1190 \u2013 Exploit Public-Facing App Entry point for attackers via vulnerable endpoints VPN Gateway T1133 \u2013 External Remote Services Target for credential stuffing or VPN exploits CI/CD Runner T1059 \u2013 Command and Scripting Interpreter Abuse of build scripts or injected commands Secrets Vault T1555 \u2013 Credentials from Password Stores Target for secret exfiltration Git Repo T1505.003 \u2013 Implant Internal Repository Malicious code or backdoors in source control CDN T1584.006 \u2013 Compromise CDN Infrastructure Supply chain risk via third-party CDN Firewall T1040 \u2013 Network Sniffing Potential for traffic inspection or bypass Monitoring Service T1082 \u2013 System Information Discovery Reconnaissance via telemetry Log Aggregator T1005 \u2013 Data from Local System Target for log tampering or data theft Developer Workstation T1078 \u2013 Valid Accounts Abuse of developer credentials"},{"location":"sec_net-sec/network_data_center_mitre/#zone-based-threat-mapping","title":"Zone-Based Threat Mapping","text":"<p>The following tables break down ATT&amp;CK tactics and techniques by architectural zone, offering targeted defenses for each component.</p>"},{"location":"sec_net-sec/network_data_center_mitre/#public-edge-zones","title":"Public &amp; Edge Zones","text":"Component ATT&amp;CK Tactics Techniques Defenses DNS Resolver Initial Access DNS Spoofing (T1565.001) DNSSEC, trusted resolvers Reverse Proxy Defense Evasion Proxy Configuration Tampering (T1556.007) Header sanitization, config immutability App Gateway Initial Access, Execution Exploit Public-Facing App (T1190) WAF rules, TLS termination VPN Gateway Lateral Movement Valid Accounts (T1078), Remote Services (T1021) MFA, IP allowlists, session logging"},{"location":"sec_net-sec/network_data_center_mitre/#private-app-zone","title":"Private App Zone","text":"Component ATT&amp;CK Tactics Techniques Defenses Web App Execution, Privilege Escalation Command-Line Interface (T1059), Exploitation for Privilege Escalation (T1068) RBAC, input validation, container isolation Auth Service Credential Access Brute Force (T1110), Credential Dumping (T1003) Rate limiting, JWT expiration, audit logging Database Collection, Exfiltration Data from Information Repositories (T1213), Automated Exfiltration (T1020) Encryption at rest, query logging, role separation Audit Logger Impact Inhibit System Recovery (T1490) Immutable logs, off-host storage Identity Provider Initial Access External Remote Services (T1133), Valid Accounts (T1078) SAML/OIDC hardening, federation trust boundaries"},{"location":"sec_net-sec/network_data_center_mitre/#observability-cicd","title":"Observability &amp; CI/CD","text":"Component ATT&amp;CK Tactics Techniques Defenses Metrics Exporter Information Disclosure Automated Collection (T1119) ACLs, metric filtering CI/CD Runner Execution, Persistence Compiled HTML File (T1223), Scheduled Task (T1053) Sandbox builds, ephemeral runners Container Registry Defense Evasion Signed Binary Proxy Execution (T1218) Image signing, access controls Deployment Job Privilege Escalation Abuse Elevation Control Mechanism (T1548) Role separation, audit trails"},{"location":"sec_net-sec/network_data_center_mitre/#defensive-enhancements","title":"Defensive Enhancements","text":"<p>To strengthen defenses, consider the following enhancements aligned with ATT&amp;CK-informed detection and response strategies.</p> <ul> <li>SIEM Enrichment: Map logs to ATT&amp;CK techniques for faster triage.</li> <li>Threat Detection Rules: Use Sigma or MITRE D3FEND to write detection logic.</li> <li>Red Team Scenarios: Simulate TTPs like T1078 (Valid Accounts) or T1190 (Exploit Public-Facing App).</li> <li>Purple Teaming: Validate defenses by emulating known adversary behavior (e.g. APT29, FIN7).</li> </ul> <p>2025.08.14</p>"},{"location":"sec_net-sec/network_data_center_stride/","title":"Network Security and Threat Modeling \u2014 STRIDE","text":""},{"location":"sec_net-sec/network_data_center_stride/#why-it-matters","title":"Why It Matters","text":"<p>STRIDE is a threat modeling framework that categorizes security risks into six areas: Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service, and Elevation of Privilege. Applying STRIDE to a network architecture helps identify and mitigate threats early in the design process.</p>"},{"location":"sec_net-sec/network_data_center_stride/#stride-threat-modeling","title":"STRIDE Threat Modeling","text":"<p>Using the STRIDE framework, we analyze potential threats across the data centre network. Each category highlights risks associated with specific components and suggests mitigations.</p>"},{"location":"sec_net-sec/network_data_center_stride/#our-hypothetical-data-centre-network-stride-annotated","title":"Our Hypothetical Data Centre Network, STRIDE-Annotated","text":""},{"location":"sec_net-sec/network_data_center_stride/#stride-annotated-network-diagram","title":"STRIDE-Annotated Network Diagram","text":"<p>The following diagram revisits our network architecture, annotated with STRIDE threat categories to visualize potential attack surfaces.</p> flowchart TD   accTitle: STRIDE-annotated network diagram   accDescr: STRIDE-annotated network diagram showing same data center topology with threat categories mapped to zones: Public Zone marked for Spoofing and Repudiation threats; Network Edge Zone labeled for Spoofing, Tampering, Information Disclosure, and Denial of Service; Private App Zone identified for Repudiation, Information Disclosure, and Elevation of Privilege; Monitoring zone marked for Information Disclosure and Repudiation; CI/CD Pipeline labeled for Tampering and Elevation of Privilege threats. Same traffic flow patterns with security annotations on each component.    %% Public Zone \u2014 S, R   subgraph Public_Zone[\"Public Zone (Spoofing, Repudiation)\"]     A[User]     B[Browser]     C[DNS Resolver]   end    %% Edge Zone \u2014 S, T, I, D   subgraph Edge_Zone[\"Network Edge Zone (Spoofing, Tampering, Info Disclosure, Denial of Service)\"]     D[HTTPS Request]     E[Firewall\\nIngress ACLs]     F[Reverse Proxy - Nginx\\nHeader Sanitization]     G[App Gateway\\nTLS Termination]     LB[Load Balancer L7\\nRate Limiting]     VPN[VPN Gateway\\nPrivileged Access]   end    %% Private Zone \u2014 R, I, E   subgraph Private_Zone[\"Private App Zone (Repudiation, Info Disclosure, Elevation of Privilege)\"]     WA[Web App\\nRBAC + Input Validation]     DB[Primary Database\\nEncrypted at Rest]     Cache[Redis Cache\\nTTL + ACLs]     Auth[Auth Service\\nOAuth2 + JWT]     Audit[Audit Logger\\nImmutable Store]     Replicas[Read Replicas\\nRead-Only]     IdP[Identity Provider\\nFederated Trust]     SIEM[SIEM Integration\\nSecurity Alerts]   end    %% Observability \u2014 I, R   subgraph Observability[\"Monitoring and Tracing (Info Disclosure, Repudiation)\"]     Metrics[Metrics Exporter]     Traces[Tracing Agent]     Prometheus[Prometheus\\nAccess Controls]     Jaeger[Jaeger\\nTrace Retention]   end    %% CI/CD \u2014 T, E   subgraph CI_CD[\"CI/CD Pipeline (Tampering, Elevation of Privilege)\"]     Git[Git Repository\\nBranch Protections]     Runner[Build Agent\\nSandboxed]     Registry[Container Registry\\nSigned Images]     Deploy[Deployment Job\\nRole Separation]   end    %% Traffic Flow   A --&gt;|North-South| B --&gt; C --&gt; D --&gt; E --&gt; F --&gt; G --&gt; LB --&gt; WA   VPN --&gt;|Privileged Tunnel| WA   WA --&gt;|East-West| DB --&gt; Replicas   WA --&gt;|East-West| Cache   WA --&gt;|East-West| Auth --&gt; IdP   WA --&gt;|East-West| Audit --&gt; SIEM   WA --&gt;|Telemetry| Metrics --&gt; Prometheus   WA --&gt;|Telemetry| Traces --&gt; Jaeger    %% CI/CD Integration   Git --&gt; Runner --&gt; Registry --&gt; Deploy --&gt; WA"},{"location":"sec_net-sec/network_data_center_stride/#threat-categories-and-mitigations","title":"Threat Categories and Mitigations","text":"<p>The tables below map STRIDE categories to specific components in the network, describing potential threats and recommended defenses.</p> Threat Examples in Diagram Mitigations Spoofing Fake user/IP, DNS poisoning TLS everywhere, VPN for privileged access, DNSSEC Tampering Malicious config/image injection Signed containers, branch protections, proxy header scrubbing Repudiation No audit trail for actions Immutable audit logs, SIEM integration Information Disclosure Leaky metrics, exposed headers RBAC, encrypted storage, observability ACLs Denial of Service Traffic floods, cache exhaustion Rate limiting, load balancing, firewall rules Elevation of Privilege CI/CD abuse, misconfigured roles Role separation, scoped tokens, RBAC enforcement <p>2025.08.14</p>"},{"location":"sec_net-sec/saml-admin/","title":"Single Sign-On (SSO) Admin Guide \u2014 SAML 2.0 Integration","text":"<p>First I had a template, then I put together a real-life spec (2017/2018), then I turned it back into an improved template with better diagrams and removed/masked real module/app/company names, URLs, etc. Why? First, I might end up using it (SAML is still around). Second, using it as a playground to play and experiment with PlantUML. </p>"},{"location":"sec_net-sec/saml-admin/#1-overview","title":"1. Overview","text":""},{"location":"sec_net-sec/saml-admin/#purpose","title":"Purpose","text":"<p>This guide provides step-by-step instructions for configuring and maintaining Single Sign-On (SSO) based on the SAML 2.0 standard across the following internal web applications:</p> <ul> <li>APP-A</li> <li>APP-B</li> <li>APP-C</li> </ul> <p>Audience This document is intended for internal IT administrators responsible for authentication and access management.</p> <p>Scope Covers SSO configuration between the client's Identity Provider (IdP) \u2014 e.g. <code>&lt;Azure AD / Okta / ADFS&gt;</code> \u2014 and the Service Provider (SP) components of the above systems. It does not cover general user management or application-level permission setup.</p> <p>Prerequisites</p> <ul> <li>Administrative access to the Identity Provider</li> <li>Admin credentials for each application's configuration panel</li> <li>SSL/TLS certificates for all SP endpoints (valid and trusted)</li> <li>Basic understanding of SAML terminology and digital certificates</li> <li>Network connectivity between IdP and all SPs (firewall rules configured)</li> <li>Test user accounts in IdP with appropriate group memberships</li> </ul>"},{"location":"sec_net-sec/saml-admin/#2-conceptual-overview","title":"2. Conceptual Overview","text":"<p>What is SAML 2.0? SAML (Security Assertion Markup Language) enables secure authentication by exchanging digitally signed XML assertions between an Identity Provider (IdP) and Service Providers (SPs).</p> <p>Authentication Flow</p> <ol> <li>User attempts to access APP-A/APP-B/APP-C.</li> <li>The application redirects the user to the IdP for authentication.</li> <li>The IdP validates credentials and issues a signed assertion.</li> <li>The application grants access based on the assertion.</li> </ol>"},{"location":"sec_net-sec/saml-admin/#high-level-sso-architecture","title":"High-Level SSO Architecture","text":"<pre>943349402cb649baaa5cb7f32e94b28e16ba528fd93e2f92df4d9954dddb0745773c7ceaee94ca86343e6a3e36b5904e30f5a3166f47f20d7253be4a9a599694</pre><pre>6d4029a17f3eddfe83cd1b47c93029f11eed31c4b981f8e7e400568eace4b2972867e86c5e359ed9bbb40c8be886060c8d21a5adeedcc5f27c7b4cef666c85b4</pre>"},{"location":"sec_net-sec/saml-admin/#detailed-saml-authentication-flow","title":"Detailed SAML Authentication Flow","text":"<pre>1f98dbe61daea3dc6acc3f4e1da0a03ddc7149957fdc8dbe5e0a4f7ad66d6902c702fbcceeb1edb7e5bc0eabb6664d8e0c6d2b4c9c071990424e6527a3631cfa</pre><pre>21007ef1a49690765dc8ed7198c05cebf807e0bb05578d738070f1715e49a7a47d29697852ee873f537ab6d8d2e6737523b5df4c7ef0149168414c071af9f974</pre> <p>Key Terms</p> Term Description IdP The system that authenticates users (e.g. Azure AD) SP The system that relies on IdP authentication (e.g. APP-A) Metadata XML file describing endpoints and certificates ACS (Assertion Consumer Service) Endpoint on SP receiving login responses SLO Single Logout \u2013 logs the user out of all systems Certificate Used to sign and verify assertions AuthnRequest SAML authentication request from SP to IdP Assertion Signed statement about user identity and attributes"},{"location":"sec_net-sec/saml-admin/#3-system-components-and-sso-parameters","title":"3. System Components and SSO Parameters","text":"Component Role SP Entity ID ACS URL SLO URL Notes APP-A Service Provider <code>&lt;crm.company.com/saml/metadata&gt;</code> <code>&lt;crm.company.com/saml/acs&gt;</code> <code>&lt;crm.company.com/saml/logout&gt;</code> Supports Single Logout APP-B Service Provider <code>&lt;tickets.company.com/saml/metadata&gt;</code> <code>&lt;tickets.company.com/saml/acs&gt;</code> <code>&lt;tickets.company.com/saml/logout&gt;</code> Requires user role mapping APP-C Service Provider <code>&lt;warehouse.company.com/saml/metadata&gt;</code> <code>&lt;warehouse.company.com/saml/acs&gt;</code> <code>&lt;warehouse.company.com/saml/logout&gt;</code> Requires user provisioning"},{"location":"sec_net-sec/saml-admin/#system-component-relationships","title":"System Component Relationships","text":"<pre>6c15ab690a2956cc13431466998ba8948ba8f49c2ee91dff543e4f843b03498fa19d9e9da3e2db6cc27fc0e6b4d77e3bab84bad8a32e3a530efd167754a16546</pre><pre>0a73b97f3a438325cf949d56e4147ae299e2a2c02d6e207e4b4b3a308910fa5b00cc1d4eb92c03e69c536914bc183e68065950a881607136c2afec05cf63ce96</pre>"},{"location":"sec_net-sec/saml-admin/#4-identity-provider-integration","title":"4. Identity Provider Integration","text":""},{"location":"sec_net-sec/saml-admin/#41-metadata-exchange","title":"4.1 Metadata Exchange","text":""},{"location":"sec_net-sec/saml-admin/#metadata-exchange-process","title":"Metadata Exchange Process","text":"<pre>e653fc469c1dbf917d6e5fbb0ec9c9ee29aeb9fdb02f1da4d95689b5ecf25584fcf321992c4a25603c4c76af72504d2897f15351392f11ca185f7e5ca6cda692</pre><pre>9f0fd5d95203a57ba04fe55048a115a91e078ad381b42ee74ff8072641e3c31c07ef12757caff3d4407e9a718bb586d784f5555f1c4f6e2a7b300771cec7fed0</pre> <p>Step-by-Step Process:</p> <ol> <li> <p>Download SP Metadata from each component's admin page:</p> </li> <li> <p>APP-A \u2192 <code>&lt;URL to APP-A admin \u2192 SSO Settings \u2192 Download Metadata&gt;</code></p> </li> <li>APP-B \u2192 <code>&lt;URL to APP-B admin \u2192 Authentication \u2192 SAML \u2192 Export Metadata&gt;</code></li> <li>APP-C \u2192 <code>&lt;URL to APP-C admin \u2192 Security \u2192 SSO \u2192 Get Metadata&gt;</code></li> <li>Upload SP Metadata to IdP (as a new Enterprise Application or Relying Party).</li> <li>Download IdP Metadata and provide it to each component's admin panel.</li> </ol>"},{"location":"sec_net-sec/saml-admin/#42-idp-configuration-example-azure-ad","title":"4.2 IdP Configuration Example (Azure AD)","text":""},{"location":"sec_net-sec/saml-admin/#azure-ad-configuration-steps","title":"Azure AD Configuration Steps","text":"<pre>28bf182d7b592541ae244b892605d3f06fff9aab4c1135b96c3475e21511b81244353acabce483713dac54292a771b00e79c4dbca031ef90e0a6cfb8265ecec7</pre><pre>4a92efa4550256a70865daae0c6617840ca23931a22aaf5a31be3bd0069840560f644dac5e6c8ee30c4b12ee457aae94f9d77bafe482ce278476358601a29561</pre> <p>Detailed Steps:</p> <ol> <li>In Azure AD \u2192 Enterprise Applications \u2192 New Application \u2192 Create your own application.</li> <li> <p>Enter:</p> </li> <li> <p>Name: <code>APP-A SAML SSO</code></p> </li> <li>Identifier (Entity ID): <code>&lt;crm.company.com/saml/metadata&gt;</code></li> <li>Reply URL (ACS): <code>&lt;crm.company.com/saml/acs&gt;</code></li> <li>Sign on URL: <code>&lt;crm.company.com&gt;</code> (optional)</li> <li>Logout URL: <code>&lt;crm.company.com/saml/logout&gt;</code></li> <li>Upload the SP certificate (if required for assertion encryption).</li> <li> <p>Configure attribute mappings:</p> </li> <li> <p><code>user.userprincipalname</code> \u2192 <code>NameID</code> (format: emailAddress)</p> </li> <li><code>user.givenname</code> \u2192 <code>givenName</code></li> <li><code>user.surname</code> \u2192 <code>sn</code></li> <li><code>user.groups</code> \u2192 <code>groups</code> (ensure group claims are enabled)</li> <li>Assign users/groups who can sign in.</li> <li>Download Federation Metadata XML from the SAML Signing Certificate section.</li> </ol>"},{"location":"sec_net-sec/saml-admin/#43-sp-configuration-each-component","title":"4.3 SP Configuration (Each Component)","text":"<p>Location of SSO Settings:</p> <ul> <li>APP-A: Admin Panel \u2192 Settings \u2192 Security \u2192 Single Sign-On</li> <li>APP-B: Configuration \u2192 Authentication \u2192 SAML 2.0</li> <li>APP-C: System Administration \u2192 User Authentication \u2192 SSO Configuration</li> </ul> <p>Configuration Steps for Each SP:</p> <ol> <li>Navigate to SSO/SAML settings in the admin panel</li> <li> <p>Choose configuration method:</p> </li> <li> <p>Option A (Recommended): Upload IdP Metadata XML file</p> </li> <li>Option B: Manual configuration using individual fields:<ul> <li>IdP Entity ID: <code>&lt;from IdP metadata&gt;</code></li> <li>IdP SSO URL: <code>&lt;from IdP metadata&gt;</code></li> <li>IdP SLO URL: <code>&lt;from IdP metadata&gt;</code></li> <li>IdP Certificate: Paste X.509 certificate (PEM format)</li> </ul> </li> <li> <p>Configure SAML settings:</p> </li> <li> <p>NameID Format: EmailAddress (urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress)</p> </li> <li>Expected Attributes: Configure mapping (see Section 5)</li> <li>Signature Validation: Enable (required)</li> <li>Assertion Encryption: Enable if supported</li> <li>Session Timeout: <code>&lt;recommended: 8 hours&gt;</code></li> <li> <p>Set authentication mode:</p> </li> <li> <p>Hybrid: Allow both SSO and local credentials (recommended for testing)</p> </li> <li>SSO-Only: Disable local authentication (production mode)</li> <li>Important: Keep at least one local admin account for emergency access</li> <li>Save configuration and note any generated SP metadata URL</li> </ol>"},{"location":"sec_net-sec/saml-admin/#sp-configuration-decision-tree","title":"SP Configuration Decision Tree","text":"<pre>3aaf2631f20e70771129f6c68bcd1dd09519ce268a4b8ac623f9d2d8be53a1c3e818af690083bf818228809da0c9abc412147f12951a4c773fe5bf072eb2d9b2</pre><pre>6caf197aeb766b03bf183a8fa148fa9b6acae505ccb9088e77eec766a9f8429a35b630aa0dd82bb0729f9d00ab8eeda5ad0ed18422d68220a5939aef85030632</pre>"},{"location":"sec_net-sec/saml-admin/#5-user-attribute-mapping-and-role-assignment","title":"5. User Attribute Mapping and Role Assignment","text":"SAML Attribute Local Field Required Example Data Type <code>NameID</code> Username Yes <code>jdoe@company.com</code> EmailAddress <code>givenName</code> First Name Optional <code>John</code> String <code>sn</code> Last Name Optional <code>Doe</code> String <code>email</code> Email Optional <code>jdoe@company.com</code> EmailAddress <code>groups</code> Roles Optional <code>APP-C_Admin</code> Array/Multi <code>employeeId</code> Employee ID Optional <code>E12345</code> String"},{"location":"sec_net-sec/saml-admin/#attribute-mapping-and-provisioning-flow","title":"Attribute Mapping and Provisioning Flow","text":"<pre>5b455abe028296e07b77c14f371e57dbeab3fc96ca1525065d0927624f4df5725b7f69c27ace56d169405439a6b20d15d104cbef41e5b771cedcf7181d442b4e</pre><pre>f9866bff39f38b7dd7761bec5349e56554fbc157fd6a64ffe7d0d1a32c5670605baa85c22d341bc237edd1ffc2248c68ffbe74b75a8bc8e1ab8119df9ac924b4</pre> <p>Role Mapping Configuration</p> <p>Configure in each SP's admin panel under: User Management \u2192 Role Mapping or SSO Settings \u2192 Group Mapping</p> <p>Example Mappings:</p> IdP Group (SAML Attribute) APP-A Role APP-B Role APP-C Role <code>APP-A_Admins</code> Administrator (no access) (no access) <code>Support_Agents</code> Standard User Agent (no access) <code>APP-C_Managers</code> (no access) (no access) Supervisor <code>APP-C_Staff</code> (no access) (no access) APP-C User <code>IT_Administrators</code> Administrator Administrator Administrator <p>Provisioning Options:</p> <ol> <li> <p>JIT (Just-In-Time) Provisioning:</p> </li> <li> <p>User account created automatically on first SSO login</p> </li> <li>Profile attributes updated from SAML assertion each login</li> <li>Recommended for most scenarios</li> <li> <p>Manual Provisioning:</p> </li> <li> <p>User account pre-created by administrator</p> </li> <li>SSO login updates existing account attributes</li> <li>Required for APP-C (per Section 3 notes)</li> </ol> <p>If group information is not provided in SAML assertion, roles must be assigned manually in the local admin UI.</p>"},{"location":"sec_net-sec/saml-admin/#6-testing-the-configuration","title":"6. Testing the Configuration","text":""},{"location":"sec_net-sec/saml-admin/#testing-workflow","title":"Testing Workflow","text":"<pre>aa08f43d6c502dbc9adcd9c5e5fe20819ede0ad7c551ebba62f7c4c1ece765287ae2d02fab02045db7f7de313f2ac353c7e473cd45bb35a526918e5f36cfafa4</pre><pre>2523d8a03db9890a0725700e16d641011352d78975531cff138232887af45993c3c8da41312edbe95e077f5dd543137ad0f10a505c8fbe185663b11e5580cf66</pre>"},{"location":"sec_net-sec/saml-admin/#testing-procedure","title":"Testing Procedure:","text":""},{"location":"sec_net-sec/saml-admin/#1-preparation","title":"1. Preparation:","text":"<ul> <li>Create dedicated test user account in IdP</li> <li>Assign test user to appropriate groups (e.g., <code>APP-A_Test_Users</code>)</li> <li>Ensure test user has no active sessions</li> </ul>"},{"location":"sec_net-sec/saml-admin/#2-install-testing-tools","title":"2. Install Testing Tools:","text":"<ul> <li>Browser: SAML-tracer plugin (Firefox/Chrome)</li> <li>Alternative: Browser developer tools (Network tab)</li> </ul>"},{"location":"sec_net-sec/saml-admin/#3-execute-test","title":"3. Execute Test:","text":"<ul> <li>Use private/incognito browser window</li> <li>Attempt login to APP-A/APP-B/APP-C</li> <li>Observe redirect to IdP login screen</li> <li>Enter test credentials</li> <li>Monitor SAML-tracer for SAML Response</li> </ul>"},{"location":"sec_net-sec/saml-admin/#4-validation-checklist","title":"4. Validation Checklist:","text":"<ul> <li>\u2610 User redirected to IdP</li> <li>\u2610 IdP authentication successful</li> <li>\u2610 SAML Response returned to SP</li> <li>\u2610 Session established in application</li> <li>\u2610 SAML assertion contains expected attributes</li> <li>\u2610 User profile populated correctly</li> <li>\u2610 Roles assigned as configured</li> <li>\u2610 Application functionality works</li> </ul>"},{"location":"sec_net-sec/saml-admin/#5-saml-response-analysis","title":"5. SAML Response Analysis:","text":"<p>Using SAML-tracer, verify:</p> <ul> <li><code>&lt;samlp:Response&gt;</code> element present</li> <li><code>&lt;samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\"&gt;</code></li> <li><code>&lt;saml:Assertion&gt;</code> element present</li> <li><code>&lt;Signature&gt;</code> with valid <code>&lt;SignatureValue&gt;</code></li> <li><code>&lt;saml:NameID&gt;</code> contains expected username</li> <li><code>&lt;saml:AttributeStatement&gt;</code> contains configured attributes</li> </ul> <p>Recommended Test Duration: 2-4 hours per application, including troubleshooting time.</p> <p>Common Issues</p> Error Possible Cause Resolution \"Invalid signature\" Certificate mismatch Update metadata / verify cert \"No NameID found\" Missing attribute mapping Adjust IdP claim rules \"ACS URL mismatch\" Incorrect Reply URL Update IdP configuration \"Assertion expired\" Clock skew between systems Sync NTP on all servers \"Unknown NameID format\" NameID format not supported Change to emailAddress format \"User not found\" JIT provisioning disabled Enable auto-provisioning or pre-create user \"Access denied\" Missing group membership Verify user groups in IdP \"Certificate validation failed\" Expired or untrusted cert Renew certificate"},{"location":"sec_net-sec/saml-admin/#7-enabling-and-managing-sso-in-production","title":"7. Enabling and Managing SSO in Production","text":""},{"location":"sec_net-sec/saml-admin/#production-rollout-strategy","title":"Production Rollout Strategy","text":"<pre>4ee01040d5bcaa31c506f5af748590c0adec8e3ce5a4c55171c8ff7696dac33c5e41c371e4444afec92cbee7133e615d0db477202060f69da9ec9aa4815afcac</pre><pre>65203f7d361c55da5d4209e9e2e6fc057e8a7266a6f34c23954d857efbc6d645eb6f357c4e06539b0367023801b699554f32ab3a313daa00ea7e88a33b76fb56</pre>"},{"location":"sec_net-sec/saml-admin/#production-deployment-best-practices","title":"Production Deployment Best Practices:","text":""},{"location":"sec_net-sec/saml-admin/#1-phased-rollout","title":"1. Phased Rollout:","text":"<ul> <li>Enable SSO gradually per component (start with APP-A)</li> <li>Use Hybrid mode initially (2-4 weeks)</li> <li>Pilot with small user group before full deployment</li> </ul>"},{"location":"sec_net-sec/saml-admin/#2-emergency-access","title":"2. Emergency Access:","text":"<ul> <li>Maintain at least 2 fallback local admin accounts (non-SSO)</li> <li>Store credentials in secure vault (e.g., KeePass, 1Password, HashiCorp Vault)</li> <li>Test emergency accounts quarterly</li> <li>Document break-glass procedures</li> </ul>"},{"location":"sec_net-sec/saml-admin/#3-certificate-management","title":"3. Certificate Management:","text":"<ul> <li>Document certificate expiration dates in shared calendar</li> <li>Set reminders at: 60 days, 30 days, 14 days, 7 days before expiry</li> <li>Plan certificate rotation during maintenance window</li> <li>Test new certificates in staging environment first</li> <li>Keep old certificate active for 24 hours during transition</li> </ul>"},{"location":"sec_net-sec/saml-admin/#4-enforcement-timeline","title":"4. Enforcement Timeline:","text":"<ul> <li>Week 1-2: Pilot testing with select users</li> <li>Week 3-4: APP-A full deployment (Hybrid mode)</li> <li>Week 5: APP-B deployment (Hybrid mode)</li> <li>Week 6: APP-C deployment (Hybrid mode)</li> <li>Week 7+: Switch to SSO-Only mode (one app per week)</li> </ul>"},{"location":"sec_net-sec/saml-admin/#5-monitoring","title":"5. Monitoring:","text":"<ul> <li>Enable authentication logging in all SPs</li> <li>Set up alerts for:<ul> <li>Failed SSO attempts (threshold: 5 per user per hour)</li> <li>Certificate expiration warnings</li> <li>Metadata update notifications</li> </ul> </li> <li>Review logs weekly for anomalies</li> </ul>"},{"location":"sec_net-sec/saml-admin/#8-single-logout-slo","title":"8. Single Logout (SLO)","text":""},{"location":"sec_net-sec/saml-admin/#single-logout-flow","title":"Single Logout Flow","text":"<pre>63549c5611dc77bc4911c37fdb539a03421a12600ca2dac3fa747d7944f604f02ddd6739b7eecee757fa787e9c47c8ba8282747a71704907a6d8959051dc1ffb</pre><pre>e5a9fdaffb10f8435f969ab781b21422a9fc78d88d4eac6b53b626791cba1450d0eb71bd713d75cbbfa079850d1af5bf4e05d41fa3377d229b7f0aece6abcfed</pre>"},{"location":"sec_net-sec/saml-admin/#slo-configuration","title":"SLO Configuration:","text":"<p>If SLO is supported by all components, enable global logout endpoints:</p> Component SLO Endpoint Supported Notes APP-A <code>&lt;crm.company.com/saml/logout&gt;</code> Yes SP-initiated &amp; IdP-initiated APP-B <code>&lt;tickets.company.com/saml/logout&gt;</code> Yes SP-initiated only APP-C <code>&lt;warehouse.company.com/saml/logout&gt;</code> Yes IdP-initiated only IdP <code>&lt;idp.company.com/slo&gt;</code> Yes Global logout endpoint"},{"location":"sec_net-sec/saml-admin/#slo-types","title":"SLO Types","text":"<ol> <li> <p>SP-Initiated Logout:</p> </li> <li> <p>User clicks logout in application (e.g., APP-A)</p> </li> <li>Application sends LogoutRequest to IdP</li> <li>IdP notifies all other SPs</li> <li>User logged out everywhere</li> <li> <p>IdP-Initiated Logout:</p> </li> <li> <p>User logs out from IdP portal</p> </li> <li>IdP sends LogoutRequest to all SPs</li> <li>Each SP destroys local session</li> </ol> <p>Configuration Steps:</p> <ol> <li> <p>In each SP admin panel:</p> </li> <li> <p>Enable \"Single Logout\" feature</p> </li> <li>Configure SLO endpoint URL</li> <li>Set SLO binding to HTTP-POST or HTTP-Redirect (match IdP requirement)</li> <li>Test SLO with pilot users</li> <li> <p>In IdP admin panel:</p> </li> <li> <p>Verify all SP SLO endpoints are registered</p> </li> <li>Enable global logout functionality</li> <li>Test IdP-initiated logout</li> </ol> <p>Known Limitations:</p> <ul> <li>Some browsers may maintain cached sessions; users should close all browser tabs for complete logout</li> <li>SLO requires all SPs to support the feature; if one SP fails, others may retain sessions</li> <li>Third-party applications not integrated with SAML will not be logged out</li> <li>Mobile apps may require separate logout handling</li> </ul> <p>Best Practices:</p> <ul> <li>Display clear logout confirmation message to users</li> <li>Advise users to close browser after logout on shared computers</li> <li>Monitor SLO failures in logs</li> <li>Consider implementing session timeout as backup to manual logout</li> </ul>"},{"location":"sec_net-sec/saml-admin/#9-troubleshooting-and-logs","title":"9. Troubleshooting and Logs","text":""},{"location":"sec_net-sec/saml-admin/#troubleshooting-decision-tree","title":"Troubleshooting Decision Tree","text":"<pre>8e9e521ca4cafe3c3d10ec8bed47e3260d1a73c8905817fb1134b3d5262da2e2c0bb8e6b89c05ea720520d597a4baa31ddcaa1b312c0843d2718a4e6c1186317</pre><pre>08f5a142d8b41d186517e8643da0a1b4f49d368b74bf9d704cb808e20b6126c826893fcce3cf1611edf7ee6afc51a140e096b6f2ae28bbbdcbed7d6c2c6b9b3f</pre>"},{"location":"sec_net-sec/saml-admin/#log-locations","title":"Log Locations","text":"Component Log Location Access Method APP-A <code>&lt;Admin Panel \u2192 System \u2192 Logs \u2192 Authentication&gt;</code> Web UI or SSH:<code>/var/log/crm/auth.log</code> APP-B <code>&lt;Admin \u2192 Reports \u2192 System Logs \u2192 SAML&gt;</code> Web UI or SSH:<code>/var/log/ticketing/saml.log</code> APP-C <code>&lt;System Admin \u2192 Audit Logs \u2192 SSO Events&gt;</code> Web UI or SSH:<code>/var/log/warehouse/sso.log</code> IdP (Azure AD) Azure Portal \u2192 Sign-in logs Filter by application name IdP (Okta) Reports \u2192 System Log Filter by app and event type"},{"location":"sec_net-sec/saml-admin/#enabling-debug-mode","title":"Enabling Debug Mode","text":"<p>For more verbose logging during troubleshooting:</p> <p>APP-A:</p> <pre><code># Edit configuration file\nsudo nano /etc/crm/saml.conf\n\n# Set debug level\nsaml_debug_level=DEBUG\n\n# Restart service\nsudo systemctl restart crm-web\n</code></pre> <p>APP-B:</p> <pre><code># Enable via admin UI\nAdmin \u2192 Configuration \u2192 Authentication \u2192 SAML \u2192 Debug Mode: ON\n\n# Or via config file\nsudo nano /etc/ticketing/auth.conf\ndebug_saml=true\nsudo systemctl restart ticketing\n</code></pre> <p>APP-C:</p> <pre><code># Enable via admin UI\nSystem Admin \u2192 SSO Configuration \u2192 Advanced \u2192 Verbose Logging: Enabled\n</code></pre> <p>\u26a0\ufe0f Warning: Disable debug mode after troubleshooting as it may expose sensitive data in logs.</p>"},{"location":"sec_net-sec/saml-admin/#collecting-diagnostic-data","title":"Collecting Diagnostic Data","text":"<p>When opening a support ticket, collect:</p>"},{"location":"sec_net-sec/saml-admin/#1-saml-response-from-saml-tracer","title":"1. SAML Response (from SAML-tracer):","text":"<ul> <li>Save complete HTTP transaction</li> <li>Redact sensitive values (passwords, tokens)</li> </ul>"},{"location":"sec_net-sec/saml-admin/#2-error-messages","title":"2. Error Messages:","text":"<ul> <li>Exact error text from UI</li> <li>Timestamp of occurrence</li> <li>Affected user(s)</li> </ul>"},{"location":"sec_net-sec/saml-admin/#3-log-excerpts","title":"3. Log Excerpts:","text":"<ul> <li>SP logs around error timestamp (\u00b15 minutes)</li> <li>IdP sign-in logs for the user/timeframe</li> </ul>"},{"location":"sec_net-sec/saml-admin/#4-configuration-screenshots","title":"4. Configuration Screenshots:","text":"<ul> <li>SP SAML settings (hide certificates)</li> <li>IdP application configuration</li> <li>Attribute/claim mappings</li> </ul>"},{"location":"sec_net-sec/saml-admin/#5-environment-details","title":"5. Environment Details:","text":"<ul> <li>Browser type and version</li> <li>User's network location (on-premise/VPN/remote)</li> <li>IdP tenant/instance information</li> </ul>"},{"location":"sec_net-sec/saml-admin/#common-error-patterns","title":"Common Error Patterns","text":"<pre><code># Clock skew error\nError: \"NotBefore condition not met\" or \"Assertion expired\"\nSolution: Sync NTP on all servers, allow 5-minute clock skew tolerance\n\n# Certificate validation error  \nError: \"Unable to validate signature\"\nSolution: Update IdP metadata, verify certificate chain\n\n# Missing NameID\nError: \"NameID is required but not present\"\nSolution: Configure NameID claim in IdP\n\n# ACS URL mismatch\nError: \"Invalid ACS URL\" or \"Recipient validation failed\"\nSolution: Verify ACS URL matches exactly in both IdP and SP configurations\n</code></pre>"},{"location":"sec_net-sec/saml-admin/#10-security-and-maintenance","title":"10. Security and Maintenance","text":""},{"location":"sec_net-sec/saml-admin/#security-best-practices","title":"Security Best Practices","text":"<pre>7b49528b5a058d1c274f57f341ef5b600d5c585b7c6d81c624064c2013e6e471cdaf7e4de071b6acd386a9d4f9ddda2054a6709d6da764b03816d9c15c7dd26b</pre><pre>628b15c71cf0d7f821f2b43ef2a7f57ee978615351ccf926a3158f95c1f7978ddb9aaedc822faab89418eaf7838e79aeb2a4865d8950f19a9860c0f49b686bdd</pre>"},{"location":"sec_net-sec/saml-admin/#security-checklist","title":"Security Checklist","text":"<p>\u25a2  Transport Layer Security:</p> <ul> <li>[ ] All endpoints use HTTPS (TLS 1.2 or higher)</li> <li>[ ] Valid SSL/TLS certificates from trusted CA</li> <li>[ ] Certificate pinning configured where supported</li> <li>[ ] Secure cipher suites enabled (disable weak ciphers)</li> </ul> <p>\u25a2  SAML Assertion Security:</p> <ul> <li>[ ] Assertions are signed by IdP</li> <li>[ ] SP validates all assertion signatures</li> <li>[ ] Assertions are encrypted (if supported)</li> <li>[ ] Assertion validity period is limited (recommended: 5 minutes)</li> <li>[ ] Recipient validation enabled</li> <li>[ ] InResponseTo validation enabled (prevents replay attacks)</li> </ul> <p>\u25a2  Access Control:</p> <ul> <li>[ ] SSO configuration restricted to administrators only</li> <li>[ ] Multi-factor authentication required for admin accounts</li> <li>[ ] Emergency admin accounts secured in vault</li> <li>[ ] Regular access reviews performed (quarterly)</li> <li>[ ] Principle of least privilege enforced</li> </ul> <p>\u25a2  Cryptographic Standards:</p> <ul> <li>[ ] SHA-256 or higher for signing algorithms</li> <li>[ ] RSA 2048-bit or higher key length</li> <li>[ ] Avoid SHA-1 (deprecated)</li> </ul>"},{"location":"sec_net-sec/saml-admin/#certificate-rotation-procedure","title":"Certificate Rotation Procedure","text":""},{"location":"sec_net-sec/saml-admin/#certificate-rotation-process","title":"Certificate Rotation Process","text":"<pre>9206c5fba0964743f980b710d5d8308bb173d564432cd59a363578eb52b410144a96d24cb27c453d6c98ff348ff2b478c0d0f0fb0ad118831acae96df360210b</pre><pre>bae90cceefb5e25a607bf69264da6c929c6424a8c07275c1adfce24fd3f29061a4dfc22c124cb5327d533c9bf6559a9b68bd80fb323c3488ed56f86a15896b0f</pre>"},{"location":"sec_net-sec/saml-admin/#certificate-rotation-timeline","title":"Certificate Rotation Timeline:","text":"Time Before Expiry Action 60 days Alert triggered, generate new CSR 45 days Receive new certificate, test in staging 30 days Deploy to production (dual-cert mode) 28 days Update all SPs with new metadata 14 days Remove old certificate"},{"location":"sec_net-sec/saml-admin/#maintenance-schedule","title":"Maintenance Schedule","text":"Task Frequency Owner Notes Review authentication logs Weekly Security Team Check for anomalies Test emergency admin accounts Quarterly IT Operations Verify non-SSO access works Access review (user assignments) Quarterly App Owners Remove inactive users Vulnerability scanning Monthly Security Team Scan SP/IdP infrastructure Certificate expiration check Monthly IT Operations Review all certificates SSO configuration backup Weekly IT Operations Backup metadata and configs Disaster recovery test Annually IT Leadership Full SSO restoration test Documentation review/update Quarterly Documentation Update procedures as needed"},{"location":"sec_net-sec/saml-admin/#configuration-backup-procedures","title":"Configuration Backup Procedures","text":""},{"location":"sec_net-sec/saml-admin/#1-backup-items","title":"1. Backup Items:","text":"<ul> <li>IdP metadata XML files</li> <li>SP metadata XML files</li> <li>Certificate files (.crt, .key)</li> <li>SP configuration files</li> <li>Role mapping configuration</li> <li>Attribute mapping configuration</li> </ul>"},{"location":"sec_net-sec/saml-admin/#2-backup-location","title":"2. Backup Location:","text":"<ul> <li>Secure file share: <code>\\\\backup-server\\sso-configs\\</code></li> <li>Version control: Git repository (without private keys)</li> <li>Encrypted offline backup: External drive in safe</li> </ul>"},{"location":"sec_net-sec/saml-admin/#3-backup-script-example","title":"3. Backup Script Example:","text":"<pre><code>#!/bin/bash\n# SSO Configuration Backup Script\n\nBACKUP_DIR=\"/backup/sso-configs/$(date +%Y%m%d)\"\nmkdir -p \"$BACKUP_DIR\"\n\n# Backup APP-A configuration\nscp admin@crm-server:/etc/crm/saml.conf \"$BACKUP_DIR/crm-saml.conf\"\n\n# Backup APP-B configuration\nscp admin@ticketing-server:/etc/ticketing/auth.conf \"$BACKUP_DIR/ticketing-auth.conf\"\n\n# Backup APP-C configuration\nscp admin@warehouse-server:/etc/warehouse/sso.conf \"$BACKUP_DIR/warehouse-sso.conf\"\n\n# Backup metadata files\ncp /data/sso/metadata/*.xml \"$BACKUP_DIR/\"\n\n# Create encrypted archive\ntar czf - \"$BACKUP_DIR\" | openssl enc -aes-256-cbc -e &gt; \"$BACKUP_DIR.tar.gz.enc\"\n\necho \"Backup completed: $BACKUP_DIR.tar.gz.enc\"\n</code></pre>"},{"location":"sec_net-sec/saml-admin/#disaster-recovery-plan","title":"Disaster Recovery Plan","text":""},{"location":"sec_net-sec/saml-admin/#procedure-in-case-of-sso-outage","title":"Procedure in case of SSO outage","text":""},{"location":"sec_net-sec/saml-admin/#1-immediate-actions","title":"1. Immediate Actions","text":"<ul> <li>a. Enable local authentication mode (if available)  </li> <li>b. Use emergency admin accounts  </li> <li>c. Notify users via alternative channels (email, Slack)  </li> </ul>"},{"location":"sec_net-sec/saml-admin/#2-restoration-steps","title":"2. Restoration Steps","text":"<ul> <li>Identify root cause (IdP down, certificate expired, configuration error)</li> <li>Restore from last known good configuration backup</li> <li>Re-establish metadata exchange if corrupted</li> <li>Test with single user before enabling for all</li> </ul>"},{"location":"sec_net-sec/saml-admin/#3-recovery-time-objectives","title":"3. Recovery Time Objectives","text":"<ul> <li>Detection: &lt; 15 minutes</li> <li>Initial response: &lt; 30 minutes</li> <li>Full restoration: &lt; 2 hours</li> </ul>"},{"location":"sec_net-sec/saml-admin/#11-appendices","title":"11. Appendices","text":""},{"location":"sec_net-sec/saml-admin/#a-example-metadata-sp-idp","title":"A. Example Metadata (SP \u2192 IdP)","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;EntityDescriptor \n    xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\"\n    entityID=\"https://crm.company.com/saml/metadata\"&gt;\n\n    &lt;SPSSODescriptor \n        AuthnRequestsSigned=\"true\" \n        WantAssertionsSigned=\"true\"\n        protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"&gt;\n\n        &lt;KeyDescriptor use=\"signing\"&gt;\n            &lt;KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\"&gt;\n                &lt;X509Data&gt;\n                    &lt;X509Certificate&gt;\n                        MIIDXTCCAkWgAwIBAgIJAKZ...\n                    &lt;/X509Certificate&gt;\n                &lt;/X509Data&gt;\n            &lt;/KeyInfo&gt;\n        &lt;/KeyDescriptor&gt;\n\n        &lt;SingleLogoutService \n            Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\n            Location=\"https://crm.company.com/saml/logout\"/&gt;\n\n        &lt;NameIDFormat&gt;\n            urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n        &lt;/NameIDFormat&gt;\n\n        &lt;AssertionConsumerService \n            Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\n            Location=\"https://crm.company.com/saml/acs\"\n            index=\"0\"\n            isDefault=\"true\"/&gt;\n\n    &lt;/SPSSODescriptor&gt;\n&lt;/EntityDescriptor&gt;\n</code></pre>"},{"location":"sec_net-sec/saml-admin/#b-example-saml-assertion","title":"B. Example SAML Assertion","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;saml:Assertion \n    xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"\n    ID=\"_8e8dc5f69a98cc4c1ff3427e5ce34606fd672f91e6\"\n    Version=\"2.0\"\n    IssueInstant=\"2025-10-06T14:30:00Z\"&gt;\n\n    &lt;saml:Issuer&gt;https://idp.company.com/saml&lt;/saml:Issuer&gt;\n\n    &lt;Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"&gt;\n        &lt;SignedInfo&gt;\n            &lt;CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/&gt;\n            &lt;SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"/&gt;\n            &lt;Reference URI=\"#_8e8dc5f69a98cc4c1ff3427e5ce34606fd672f91e6\"&gt;\n                &lt;Transforms&gt;\n                    &lt;Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/&gt;\n                    &lt;Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/&gt;\n                &lt;/Transforms&gt;\n                &lt;DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/&gt;\n                &lt;DigestValue&gt;...&lt;/DigestValue&gt;\n            &lt;/Reference&gt;\n        &lt;/SignedInfo&gt;\n        &lt;SignatureValue&gt;...&lt;/SignatureValue&gt;\n        &lt;KeyInfo&gt;\n            &lt;X509Data&gt;\n                &lt;X509Certificate&gt;...&lt;/X509Certificate&gt;\n            &lt;/X509Data&gt;\n        &lt;/KeyInfo&gt;\n    &lt;/Signature&gt;\n\n    &lt;saml:Subject&gt;\n        &lt;saml:NameID Format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\"&gt;\n            jdoe@company.com\n        &lt;/saml:NameID&gt;\n        &lt;saml:SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\"&gt;\n            &lt;saml:SubjectConfirmationData \n                NotOnOrAfter=\"2025-10-06T14:35:00Z\"\n                Recipient=\"https://crm.company.com/saml/acs\"\n                InResponseTo=\"_ae3f45c6b8d9e2f1\"/&gt;\n        &lt;/saml:SubjectConfirmation&gt;\n    &lt;/saml:Subject&gt;\n\n    &lt;saml:Conditions \n        NotBefore=\"2025-10-06T14:29:00Z\"\n        NotOnOrAfter=\"2025-10-06T14:35:00Z\"&gt;\n        &lt;saml:AudienceRestriction&gt;\n            &lt;saml:Audience&gt;https://crm.company.com/saml/metadata&lt;/saml:Audience&gt;\n        &lt;/saml:AudienceRestriction&gt;\n    &lt;/saml:Conditions&gt;\n\n    &lt;saml:AuthnStatement \n        AuthnInstant=\"2025-10-06T14:30:00Z\"\n        SessionIndex=\"_be9967abd904ddcae3c0eb4189adbe3f71e327cf93\"&gt;\n        &lt;saml:AuthnContext&gt;\n            &lt;saml:AuthnContextClassRef&gt;\n                urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\n            &lt;/saml:AuthnContextClassRef&gt;\n        &lt;/saml:AuthnContext&gt;\n    &lt;/saml:AuthnStatement&gt;\n\n    &lt;saml:AttributeStatement&gt;\n        &lt;saml:Attribute Name=\"givenName\"&gt;\n            &lt;saml:AttributeValue&gt;John&lt;/saml:AttributeValue&gt;\n        &lt;/saml:Attribute&gt;\n        &lt;saml:Attribute Name=\"sn\"&gt;\n            &lt;saml:AttributeValue&gt;Doe&lt;/saml:AttributeValue&gt;\n        &lt;/saml:Attribute&gt;\n        &lt;saml:Attribute Name=\"email\"&gt;\n            &lt;saml:AttributeValue&gt;jdoe@company.com&lt;/saml:AttributeValue&gt;\n        &lt;/saml:Attribute&gt;\n        &lt;saml:Attribute Name=\"groups\"&gt;\n            &lt;saml:AttributeValue&gt;APP-A_Admins&lt;/saml:AttributeValue&gt;\n            &lt;saml:AttributeValue&gt;IT_Department&lt;/saml:AttributeValue&gt;\n        &lt;/saml:Attribute&gt;\n    &lt;/saml:AttributeStatement&gt;\n\n&lt;/saml:Assertion&gt;\n</code></pre>"},{"location":"sec_net-sec/saml-admin/#c-glossary","title":"C. Glossary","text":"Term Meaning ACS Assertion Consumer Service - SP endpoint receiving SAML responses Assertion Signed XML statement containing user identity and attributes Attribute User property (e.g., email, groups) passed in SAML assertion AuthnRequest SAML authentication request from SP to IdP Binding Protocol for transporting SAML messages (HTTP-POST, HTTP-Redirect) Certificate X.509 digital certificate used to sign and verify assertions Entity ID Unique identifier for IdP or SP in SAML metadata IdP Identity Provider - system that authenticates users JIT Provisioning Just-In-Time user creation on first SSO login Metadata XML configuration file describing endpoints and certificates NameID Primary user identifier in SAML assertion Relying Party Another term for Service Provider (used in ADFS) SAML Security Assertion Markup Language SLO Single Logout - logs user out of all connected systems SP Service Provider - application relying on IdP authentication SSO Single Sign-On - authenticate once, access multiple systems"},{"location":"sec_net-sec/saml-admin/#d-references","title":"D. References","text":"<ul> <li>OASIS SAML 2.0 Specification:   https://docs.oasis-open.org/security/saml/v2.0/</li> <li>SAML 2.0 Technical Overview:   http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html</li> <li>Azure AD SAML Protocol Documentation:   https://docs.microsoft.com/en-us/azure/active-directory/develop/single-sign-on-saml-protocol</li> <li>Okta SAML Configuration Guide:   https://developer.okta.com/docs/guides/build-sso-integration/saml2/overview/</li> <li>ADFS SAML Documentation:   https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/</li> <li>Internal IT Security Policy: <code>&lt;Link to organization's security policy document&gt;</code></li> <li>Vendor-Specific Documentation:<ul> <li>APP-A SSO Setup: <code>&lt;URL&gt;</code></li> <li>APP-B SAML Guide: <code>&lt;URL&gt;</code></li> <li>APP-C Authentication Docs: <code>&lt;URL&gt;</code></li> </ul> </li> </ul>"},{"location":"sec_net-sec/saml-admin/#e-revision-history","title":"E. Revision History","text":"Version Date Author Changes 1.0 2018-11-05 IT Operations Team Initial document creation 1.1 <code>&lt;DATE&gt;</code> <code>&lt;AUTHOR&gt;</code> Added PlantUML diagrams 1.2 <code>&lt;DATE&gt;</code> <code>&lt;AUTHOR&gt;</code> Updated certificate procedures"},{"location":"sec_net-sec/saml-admin/#f-contact-information","title":"F. Contact Information","text":"<p>For SSO-Related Issues:</p> <ul> <li>IT Help Desk: <code>&lt;helpdesk@company.com&gt;</code> | Ext: <code>&lt;1234&gt;</code></li> <li>SSO Administrators: <code>&lt;sso-admins@company.com&gt;</code></li> <li>Security Team: <code>&lt;security@company.com&gt;</code></li> </ul> <p>Escalation Path:</p> <ol> <li>Level 1: IT Help Desk (initial triage)</li> <li>Level 2: SSO Administrator (configuration issues)</li> <li>Level 3: Identity Management Team (complex troubleshooting)</li> <li>Level 4: Vendor Support (product-specific issues)</li> </ol> <p>This guide should be reviewed and updated quarterly or whenever significant changes are made to the SSO infrastructure.</p>"}]}